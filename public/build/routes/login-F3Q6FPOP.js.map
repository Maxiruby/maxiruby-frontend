{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1695572084816.634\";\n}\n// REMIX HMR END\n\nimport { NavLink, useNavigate } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\n// components\nimport Button from \"~/components/shared/Button\";\nimport Image from \"~/components/shared/Image\";\nimport Input from \"~/components/shared/Input\";\n\n// config\nimport { Images } from \"~/config\";\nimport { useAppStore } from \"~/store\";\nexport const meta = () => {\n  return [{\n    title: \"Login \u2014 Maxiruby Launchpad\"\n  }, {\n    name: \"description\",\n    content: \"Login \u2014 Maxiruby Launchpad\"\n  }];\n};\nexport const backHome = () => {};\nexport default function Login() {\n  _s();\n  const {\n    profile,\n    setProfile,\n    token,\n    setToken\n  } = useAppStore(store => store);\n  const navigate = useNavigate();\n  const user = localStorage.getItem(\"token\");\n  const dispatch = useDispatch();\n  // if (user) return navigate(\"/\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleLogin = async () => {\n    if (!email || !password) return setError(\"Please fill all the fields\");\n    setLoading(true);\n    setSuccess(\"\");\n    setError(\"\");\n    try {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        email: email,\n        password: password\n      });\n      var requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n      };\n      const response = fetch(\"https://api.maxiruby.com/api/users/auth/login\", requestOptions);\n      const data = await (await response).json();\n      console.log(data.user);\n      if (data.user) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"profile\", JSON.stringify(data.user));\n        setProfile(data.user);\n        setToken(data.token);\n        dispatch({\n          type: \"LOGIN\",\n          payload: data\n        });\n        Cookies.set(\"user\", JSON.stringify(data));\n        navigate(\"/\");\n        return;\n      }\n      console.log(error);\n      setError(\"Invalid credentials\");\n      setSuccess(\"\");\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n      setSuccess(\"\");\n      setLoading(false);\n    }\n  };\n  return <div className=\"flex flex-1 flex-row flex-wrap items-start justify-start columns-1 md:columns-2 h-fit md:h-screen\">\n      {/* left */}\n      <div className=\"relative flex flex-1 flex-col md:border-r md:border-solid md:border-border min-w-[400px] h-full overflow-hidden\">\n        <NavLink to=\"/\" className=\"flex p-5 w-fit\">\n          <Image src={Images.Logo} alt=\"Maxiruby\" width={215} height={26} objectFit=\"contain\" />\n        </NavLink>\n\n        <div className=\"absolute top-0 w-screen h-screen md:-mt-24 -z-1 pointer-events-none\">\n          <div className=\"relative inset-0 w-full h-0 pb-[61.783525291304635%]\">\n            <div className=\"absolute inset-0 w-full h-full\">\n              <Image src={Images.HomeBackground} alt=\"MaxiRuby\" width=\"100%\" height=\"auto\" objectFit=\"cover\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* right */}\n      <div className=\"flex flex-1 h-full min-w-[340px]\">\n        <div className=\"flex flex-1 flex-col items-center justify-center p-10 gap-y-16\">\n          <header className=\"flex justify-center items-center\">\n            <h1 className=\"text-[max(3vw,36px)] text-center text-foreground font-heading font-bold\">\n              Welcome\n            </h1>\n          </header>\n\n          <div className=\"flex flex-col gap-y-8 w-full max-w-[600px] mx-auto\">\n            <div className=\"flex flex-col gap-y-2\">\n              <label className=\"font-semibold text-foreground/70 pl-1\">\n                Email\n              </label>\n              <Input type=\"text\" placeholder=\"Enter your e-mail here\" value={email} onChange={e => {\n              setEmail(e.target.value);\n            }} className=\"py-4 px-5 placeholder:text-muted-foreground/60\" />\n            </div>\n\n            <div className=\"flex flex-col gap-y-2\">\n              <label className=\"font-semibold text-foreground/70 pl-1\">\n                Password\n              </label>\n              <Input type=\"password\" placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\" value={password} onChange={e => {\n              setPassword(e.target.value);\n            }} className=\"py-4 px-5 placeholder:text-muted-foreground/60\" />\n            </div>\n\n            <div className=\"flex flex-col gap-y-4 justify-center items-center\">\n              <Button type=\"button\" title=\"Log in\" variant=\"invert\" className=\"w-fit min-w-[160px]\" onClick={handleLogin} disabled={loading}>\n                {loading ? \"Loading...\" : \"Log in\"}\n              </Button>\n              <small style={{\n              color: \"red\"\n            }}> {error}</small>\n              <small style={{\n              color: \"green\"\n            }}> {success}</small>\n              <small className=\"text-foreground/50\">\n                Don\u2019t you have an account?{\" \"}\n                <NavLink to=\"/signup\" className=\"text-foreground font-bold pl-0.5\">\n                  Sign Up\n                </NavLink>\n              </small>\n            </div>\n\n            <div className=\"flex flex-col justify-center items-center pt-6\">\n              <strong className=\"text-xl font-semibold\">OR</strong>\n            </div>\n\n            <div className=\"flex flex-row flex-wrap items-center justify-center gap-2\">\n              <Button type=\"button\" title=\"Log in\" variant=\"secondary\" className=\"w-fit min-w-[100px]\">\n                <Image src={Images.GoogleG} alt=\"Google\" width={24} height={24} />\n                Log in with Google\n              </Button>\n              <Button type=\"button\" title=\"Log in\" variant=\"secondary\" className=\"w-fit min-w-[100px]\">\n                <Image src={Images.Twitter} alt=\"Twitter\" width={24} height={24} />\n                Log in with Twitter\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(Login, \"UDOH1RMVzvdRyOzljxfcsvz65Yg=\", false, function () {\n  return [useAppStore, useNavigate, useDispatch];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAyB;AAsFf;AA3GV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AAeO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAEe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,YAAY,WAAS,KAAK;AAC9B,QAAM,WAAW,YAAY;AAC7B,QAAM,OAAO,aAAa,QAAQ,OAAO;AACzC,QAAM,WAAW,YAAY;AAE7B,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,EAAE;AACrC,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,EAAE;AAC3C,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,EAAE;AACrC,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,EAAE;AACzC,QAAM,cAAc,YAAY;AAC9B,QAAI,CAAC,SAAS,CAAC;AAAU,aAAO,SAAS,4BAA4B;AACrE,eAAW,IAAI;AACf,eAAW,EAAE;AACb,aAAS,EAAE;AACX,QAAI;AACF,UAAI,YAAY,IAAI,QAAQ;AAC5B,gBAAU,OAAO,gBAAgB,kBAAkB;AACnD,UAAI,MAAM,KAAK,UAAU;AAAA,QACvB;AAAA,QACA;AAAA,MACF,CAAC;AACD,UAAI,iBAAiB;AAAA,QACnB,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AACA,YAAM,WAAW,MAAM,iDAAiD,cAAc;AACtF,YAAM,OAAO,OAAO,MAAM,UAAU,KAAK;AACzC,cAAQ,IAAI,KAAK,IAAI;AACrB,UAAI,KAAK,MAAM;AACb,qBAAa,QAAQ,SAAS,KAAK,UAAU,KAAK,KAAK,CAAC;AACxD,qBAAa,QAAQ,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AACzD,mBAAW,KAAK,IAAI;AACpB,iBAAS,KAAK,KAAK;AACnB,iBAAS;AAAA,UACP,MAAM;AAAA,UACN,SAAS;AAAA,QACX,CAAC;AACD,YAAQ,IAAI,QAAQ,KAAK,UAAU,IAAI,CAAC;AACxC,iBAAS,GAAG;AACZ;AAAA,MACF;AACA,cAAQ,IAAI,KAAK;AACjB,eAAS,qBAAqB;AAC9B,iBAAW,EAAE;AACb,iBAAW,KAAK;AAAA,IAClB,SAASC,QAAP;AACA,cAAQ,IAAIA,MAAK;AACjB,eAASA,OAAM,OAAO;AACtB,iBAAW,EAAE;AACb,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AACA,SAAO,mDAAC,SAAI,WAAU,qGAElB;AAAA,uDAAC,SAAI,WAAU,mHACb;AAAA,yDAAC,WAAQ,IAAG,KAAI,WAAU,kBACxB,6DAAC,iBAAM,KAAK,OAAO,MAAM,KAAI,YAAW,OAAO,KAAK,QAAQ,IAAI,WAAU,aAA1E;AAAA;AAAA;AAAA;AAAA,aAAoF,KADtF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC,SAAI,WAAU,uEACb,6DAAC,SAAI,WAAU,wDACb,6DAAC,SAAI,WAAU,kCACb,6DAAC,iBAAM,KAAK,OAAO,gBAAgB,KAAI,YAAW,OAAM,QAAO,QAAO,QAAO,WAAU,WAAvF;AAAA;AAAA;AAAA;AAAA,aAA+F,KADjG;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,IAGA,mDAAC,SAAI,WAAU,oCACb,6DAAC,SAAI,WAAU,kEACb;AAAA,yDAAC,YAAO,WAAU,oCAChB,6DAAC,QAAG,WAAU,2EAA0E,uBAAxF;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC,SAAI,WAAU,sDACb;AAAA,2DAAC,SAAI,WAAU,yBACb;AAAA,6DAAC,WAAM,WAAU,yCAAwC,qBAAzD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,iBAAM,MAAK,QAAO,aAAY,0BAAyB,OAAO,OAAO,UAAU,OAAK;AACrF,qBAAS,EAAE,OAAO,KAAK;AAAA,UACzB,GAAG,WAAU,oDAFX;AAAA;AAAA;AAAA;AAAA,iBAE4D;AAAA,aAN9D;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QAEA,mDAAC,SAAI,WAAU,yBACb;AAAA,6DAAC,WAAM,WAAU,yCAAwC,wBAAzD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,iBAAM,MAAK,YAAW,aAAY,sEAAc,OAAO,UAAU,UAAU,OAAK;AACjF,wBAAY,EAAE,OAAO,KAAK;AAAA,UAC5B,GAAG,WAAU,oDAFX;AAAA;AAAA;AAAA;AAAA,iBAE4D;AAAA,aAN9D;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QAEA,mDAAC,SAAI,WAAU,qDACb;AAAA,6DAAC,kBAAO,MAAK,UAAS,OAAM,UAAS,SAAQ,UAAS,WAAU,uBAAsB,SAAS,aAAa,UAAU,SACnH,oBAAU,eAAe,YAD5B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,WAAM,OAAO;AAAA,YACd,OAAO;AAAA,UACT,GAAG;AAAA;AAAA,YAAE;AAAA,eAFH;AAAA;AAAA;AAAA;AAAA,iBAES;AAAA,UACT,mDAAC,WAAM,OAAO;AAAA,YACd,OAAO;AAAA,UACT,GAAG;AAAA;AAAA,YAAE;AAAA,eAFH;AAAA;AAAA;AAAA;AAAA,iBAEW;AAAA,UACX,mDAAC,WAAM,WAAU,sBAAqB;AAAA;AAAA,YACT;AAAA,YAC3B,mDAAC,WAAQ,IAAG,WAAU,WAAU,oCAAmC,uBAAnE;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,QAEA,mDAAC,SAAI,WAAU,kDACb,6DAAC,YAAO,WAAU,yBAAwB,kBAA1C;AAAA;AAAA;AAAA;AAAA,eAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC,SAAI,WAAU,6DACb;AAAA,6DAAC,kBAAO,MAAK,UAAS,OAAM,UAAS,SAAQ,aAAY,WAAU,uBACjE;AAAA,+DAAC,iBAAM,KAAK,OAAO,SAAS,KAAI,UAAS,OAAO,IAAI,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA,mBAAgE;AAAA,YAAE;AAAA,eADpE;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC,kBAAO,MAAK,UAAS,OAAM,UAAS,SAAQ,aAAY,WAAU,uBACjE;AAAA,+DAAC,iBAAM,KAAK,OAAO,SAAS,KAAI,WAAU,OAAO,IAAI,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA,mBAAiE;AAAA,YAAE;AAAA,eADrE;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAlDF;AAAA;AAAA;AAAA;AAAA,aAmDA;AAAA,SA1DF;AAAA;AAAA;AAAA;AAAA,WA2DA,KA5DF;AAAA;AAAA;AAAA;AAAA,WA6DA;AAAA,OA9EG;AAAA;AAAA;AAAA;AAAA,SA+EL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa,aAAa,WAAW;AAC/C,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "error"]
}
