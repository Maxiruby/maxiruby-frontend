{
  "version": 3,
  "sources": [
    "../../../app/routes/projects.tsx"
  ],
  "sourcesContent": [
    "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/projects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/projects.tsx\");\n  import.meta.hot.lastModified = \"1695297940770.3699\";\n}\n// REMIX HMR END\n\nimport React, { useEffect } from \"react\";\n// components\nimport { Container, Section } from \"~/components/Layout\";\nimport Project from \"~/components/Project\";\nimport Button from \"~/components/shared/Button\";\n\n// config\n\nexport const meta = () => {\n  return [{\n    title: \"Launchpad Projects — Maxiruby\"\n  }, {\n    name: \"description\",\n    content: \"Launchpad Projects — Maxiruby\"\n  }];\n};\nexport default function Projects() {\n  _s();\n  const [filter, setFilter] = React.useState(\"all\");\n  const [projects, setProjects] = React.useState([]);\n  useEffect(() => {\n    const getAllProject = async () => {\n      var myHeaders = new Headers();\n      var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n      };\n      fetch(\"https://api.maxiruby.com/api/landing/all\", requestOptions).then(response => response.json()).then(result => setProjects(result.result)).catch(error => console.log(\"error\", error));\n    };\n    getAllProject();\n  }, []);\n  const filteredProjects = filter === \"all\" ? projects : projects.filter(p => p.status === filter);\n  return <div className=\"flex flex-1 flex-col h-full min-h-[75vh]\">\n      <Section>\n        <Container>\n          <div className=\"flex flex-1 flex-col gap-y-10\">\n            <header className=\"flex flex-1 flex-row flex-wrap items-center justify-between gap-5\">\n              <h1 className=\"text-3xl font-medium font-heading\">Projects</h1>\n\n              <div className=\"flex flex-wrap items-center gap-3\">\n                <Button type=\"button\" title=\"All\" variant={filter === \"all\" ? \"primary\" : \"secondary\"} onClick={() => setFilter(\"all\")}>\n                  All\n                </Button>\n                <Button type=\"button\" title=\"Upcoming\" variant={filter === \"upcoming\" ? \"primary\" : \"secondary\"} onClick={() => setFilter(\"upcoming\")}>\n                  Upcoming\n                </Button>\n                <Button type=\"button\" title=\"Open\" variant={filter === \"open\" ? \"primary\" : \"secondary\"} onClick={() => setFilter(\"open\")}>\n                  Open\n                </Button>\n                <Button type=\"button\" title=\"Closed\" variant={filter === \"claim\" ? \"primary\" : \"secondary\"} onClick={() => setFilter(\"claim\")}>\n                  Closed\n                </Button>\n              </div>\n            </header>\n\n            <main className=\"flex flex-1 flex-wrap items-start justify-start gap-6\">\n              {filteredProjects.length > 0 ? filteredProjects.map((p, i) => <Project key={i} project={p} />) : <small className=\"text-sm text-muted-foreground font-semibold\">\n                  No projects to show currently.\n                </small>}\n            </main>\n          </div>\n        </Container>\n      </Section>\n    </div>;\n}\n_s(Projects, \"cJ77+IJ+5j5DlUr2ULJspuemW10=\");\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"
  ],
  "mappings": "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",
  "names": [
    "React"
  ]
}
