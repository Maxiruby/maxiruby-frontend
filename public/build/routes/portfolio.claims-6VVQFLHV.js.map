{
  "version": 3,
  "sources": ["../../../app/routes/portfolio.claims.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/portfolio.claims.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/portfolio.claims.tsx\");\n  import.meta.hot.lastModified = \"1697272062007.0862\";\n}\n// REMIX HMR END\n\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport ido from \"../static/id\u0131.json\";\nimport DotLoader from \"react-spinners/ClipLoader\";\n// components\n\nimport Button from \"~/components/shared/Button\";\n\n// config\n\nimport { useAccount } from \"wagmi\";\nexport const meta = () => {\n  return [{\n    title: \"Portfolio \u2014 Maxiruby\"\n  }, {\n    name: \"description\",\n    content: \"Portfolio \u2014 Maxiruby\"\n  }];\n};\nexport default function PortfolioClaims() {\n  _s();\n  const {\n    address\n  } = useAccount();\n  const [projects, setProjects] = React.useState([]);\n  useEffect(() => {\n    const getAllProject = async () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"token\")?.replace(/['\"]+/g, \"\"));\n      var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n      };\n      fetch(\"https://api.maxiruby.com/api/users/auth/getproject\", requestOptions).then(response => response.text()).then(result => setProjects(JSON.parse(result).result)).catch(error => console.log(\"error\", error));\n    };\n    getAllProject();\n  }, []);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const handleClaim = async project => {\n    //@ts-ignore\n    const provider = new ethers.providers.Web3Provider(window?.ethereum);\n    await provider.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(\"0x67eb4fD1F47ddE52AeF2aC556E0C441d04D4b4d3\", ido, signer);\n    setLoader(true);\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      const tx = await contract.claim(address, parseInt(project.project_id.toString(), 16), {\n        gasLimit: \"2000000\"\n      });\n      await tx.wait();\n      console.log(tx);\n      setLoader(false);\n      setError(\"\");\n      setSuccess(\"Successfully claimed!\");\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError(\"Transaction failed!\");\n      setSuccess(\"\");\n    }\n  };\n  const getDatas = async () => {\n    //@ts-ignore\n    const provider = new ethers.providers.Web3Provider(window?.ethereum);\n    await provider.send(\"eth_requestAccounts\", []); // <- this promps user to connect metamask\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(\"0x67eb4fD1F47ddE52AeF2aC556E0C441d04D4b4d3\", ido, signer);\n  };\n  const isStartTimePresent = project => {\n    return project.vestingStartTime != null && project.vestingStartTime > 0;\n  };\n  return <div className=\"flex flex-1 flex-col w-full\">\n      <div className=\"flex flex-1 flex-col w-full max-w-[1100px] mx-auto bg-card rounded-xl py-8 px-6 gap-y-8\">\n        <div style={{\n        width: \"100%\",\n        textAlign: \"center\"\n      }}>\n          {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n          {success && <p className=\"text-green-500 text-sm\">{success}</p>}\n        </div>\n        <ul className=\"flex flex-col gap-y-6\">\n          {projects.projects && projects?.projects?.filter(project => project.status === \"claim\").map((project, index) => <li className=\"flex flex-1 flex-wrap items-center justify-between gap-5\">\n                  <div className=\"flex items-center gap-x-3\">\n                    <div className=\"relative flex w-12 h-12 rounded-full bg-secondary overflow-hidden\">\n                      <img src={project.project_image} alt={project.project_image} className=\"w-full h-full object-cover\" />\n                    </div>\n\n                    <strong className=\"font-semibold\">\n                      {project.project_name}\n                    </strong>\n                  </div>\n\n                  <div className=\"flex items-center gap-x-5\">\n                    <div className=\"flex flex-col justify-center items-center text-center gap-y-2\">\n                      <strong className=\"text-sm font-semibold text-muted-foreground\">\n                        Claimable Tokens\n                      </strong>\n                      <span className-=\"text-lg\">50</span>\n                    </div>\n                    <div className=\"flex flex-col justify-center items-center text-center gap-y-2\">\n                      <strong className=\"text-sm font-semibold text-muted-foreground\">\n                        Your Allocation\n                      </strong>\n                      <span className-=\"text-lg\">Private</span>\n                    </div>\n                  </div>\n\n                  <ClaimCountdown project={project} />\n\n                  <Button type=\"button\" title=\"Join\" variant=\"primary\" onClick={() => handleClaim(project)} disabled={loader}>\n                    {loader ? <DotLoader color=\"#1876f2\" loading={loader} size={18} /> : \" Claim\"}\n                  </Button>\n                </li>)}\n        </ul>\n      </div>\n    </div>;\n}\n_s(PortfolioClaims, \"d0ADMazzuL9yEQXKLQYubUFpJr8=\", false, function () {\n  return [useAccount];\n});\n_c = PortfolioClaims;\nfunction ClaimCountdown({\n  project,\n  showClaimCoundown = false\n}) {\n  _s2();\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  const isClaim = project.status === \"closed\";\n  const [isTimeUp, setIsTimeUp] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const targetTime = project.status === \"claim\" ? new Date(project.vestingStartTime * 1000).getTime() : new Date(project.project_fcfs_open_time * 1000).getTime();\n      const distance = targetTime - now;\n      if (distance <= 0) {\n        clearInterval(interval);\n        setTimeLeft({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n        setIsTimeUp(true); // Countdown s\u0131f\u0131ra ula\u015Ft\u0131\u011F\u0131nda state'i g\u00FCncelle\n      } else {\n        setIsTimeUp(false); // E\u011Fer countdown devam ediyorsa state'i false olarak set et\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        setTimeLeft({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [project.vestingStartTime, project.project_fcfs_open_time, project.status]);\n  if (!showClaimCoundown && project.status === \"closed\") return null;\n  return <div className=\"flex flex-col justify-center items-center gap-y-3\">\n      <strong className=\"text-sm text-muted-foreground font-semibold\">\n        {isTimeUp ? \"Claim Ended\" : \"Claim Start In\"}\n      </strong>\n\n      <div className=\"flex items-center justify-center gap-x-5\">\n        <div className=\"flex flex-col justify-center items-center text-center gap-y-0.5\">\n          <strong className=\"text-lg text-accent font-bold\">\n            {\" \"}\n            {timeLeft.days}\n          </strong>\n          <span className=\"text-xs text-muted-foreground font-semibold\">\n            DAYS\n          </span>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center text-center gap-y-0.5\">\n          <strong className=\"text-lg text-accent font-bold\">\n            {\" \"}\n            {timeLeft.hours}\n          </strong>\n          <span className=\"text-xs text-muted-foreground font-semibold\">\n            HOURS\n          </span>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center text-center gap-y-0.5\">\n          <strong className=\"text-lg text-accent font-bold\">\n            {\" \"}\n            {timeLeft.minutes}\n          </strong>\n          <span className=\"text-xs text-muted-foreground font-semibold\">\n            MINUTES\n          </span>\n        </div>\n\n        <div className=\"flex flex-col justify-center items-center text-center gap-y-0.5\">\n          <strong className=\"text-lg text-accent font-bold\">\n            {\" \"}\n            {timeLeft.seconds}\n          </strong>\n          <span className=\"text-xs text-muted-foreground font-semibold\">\n            SECONDS\n          </span>\n        </div>\n      </div>\n    </div>;\n}\n_s2(ClaimCountdown, \"aCvFn51elJ6/8O2iYW8KZN/Gji8=\");\n_c2 = ClaimCountdown;\nvar _c, _c2;\n$RefreshReg$(_c, \"PortfolioClaims\");\n$RefreshReg$(_c2, \"ClaimCountdown\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["React", "error", "DotLoader"]
}
