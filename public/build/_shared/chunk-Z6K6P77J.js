var r=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var f=t=>t instanceof Uint8Array;var d=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4)),g=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),h=(t,e)=>t<<32-e|t>>>e,s=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!s)throw new Error("Non little-endian hardware is not supported");function a(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function u(t){if(typeof t=="string"&&(t=a(t)),!f(t))throw new Error(`expected Uint8Array, got ${typeof t}`);return t}function x(...t){let e=new Uint8Array(t.reduce((o,i)=>o+i.length,0)),n=0;return t.forEach(o=>{if(!f(o))throw new Error("Uint8Array expected");e.set(o,n),n+=o.length}),e}var c=class{clone(){return this._cloneInto()}},b={}.toString;function E(t){let e=o=>t().update(u(o)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function L(t){let e=(o,i)=>t(i).update(u(o)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=o=>t(o),e}function m(t=32){if(r&&typeof r.getRandomValues=="function")return r.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}function p(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function l(t,...e){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function U(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");p(t.outputLen),p(t.blockLen)}function O(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function k(t,e){l(t);let n=e.outputLen;if(t.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}export{p as a,l as b,U as c,O as d,k as e,d as f,g,h,u as i,x as j,c as k,E as l,L as m,m as n};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
