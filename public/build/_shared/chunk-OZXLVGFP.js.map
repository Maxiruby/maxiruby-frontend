{
  "version": 3,
  "sources": ["../../../node_modules/react-spinners/helpers/unitConverter.js", "../../../node_modules/react-spinners/helpers/animation.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cssValue = exports.parseLengthAndUnit = void 0;\nvar cssUnit = {\n  cm: true,\n  mm: true,\n  in: true,\n  px: true,\n  pt: true,\n  pc: true,\n  em: true,\n  ex: true,\n  ch: true,\n  rem: true,\n  vw: true,\n  vh: true,\n  vmin: true,\n  vmax: true,\n  \"%\": true\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nfunction parseLengthAndUnit(size) {\n  if (typeof size === \"number\") {\n    return {\n      value: size,\n      unit: \"px\"\n    };\n  }\n  var value;\n  var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n  if (valueString.includes(\".\")) {\n    value = parseFloat(valueString);\n  } else\n  {\n    value = parseInt(valueString, 10);\n  }\n  var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n  if (cssUnit[unit]) {\n    return {\n      value: value,\n      unit: unit\n    };\n  }\n  console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n  return {\n    value: value,\n    unit: \"px\"\n  };\n}\nexports.parseLengthAndUnit = parseLengthAndUnit;\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nfunction cssValue(value) {\n  var lengthWithunit = parseLengthAndUnit(value);\n  return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\nexports.cssValue = cssValue;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAnimation = void 0;\nvar createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\nexports.createAnimation = createAnimation;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,WAAW,QAAQ,qBAAqB;AAChD,QAAI,UAAU;AAAA,MACZ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAUA,aAAS,mBAAmB,MAAM;AAChC,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MACF;AACA,UAAI;AACJ,UAAI,eAAe,KAAK,MAAM,UAAU,KAAK,IAAI,SAAS;AAC1D,UAAI,YAAY,SAAS,GAAG,GAAG;AAC7B,gBAAQ,WAAW,WAAW;AAAA,MAChC,OACA;AACE,gBAAQ,SAAS,aAAa,EAAE;AAAA,MAClC;AACA,UAAI,QAAQ,KAAK,MAAM,UAAU,KAAK,IAAI,SAAS;AACnD,UAAI,QAAQ,IAAI,GAAG;AACjB,eAAO;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,cAAQ,KAAK,mBAAmB,OAAO,MAAM,2CAA2C,EAAE,OAAO,OAAO,KAAK,CAAC;AAC9G,aAAO;AAAA,QACL;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,YAAQ,qBAAqB;AAO7B,aAAS,SAAS,OAAO;AACvB,UAAI,iBAAiB,mBAAmB,KAAK;AAC7C,aAAO,GAAG,OAAO,eAAe,KAAK,EAAE,OAAO,eAAe,IAAI;AAAA,IACnE;AACA,YAAQ,WAAW;AAAA;AAAA;;;ACpEnB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,kBAAkB;AAC1B,QAAI,kBAAkB,SAAU,YAAY,QAAQ,QAAQ;AACxD,UAAI,gBAAgB,kBAAkB,OAAO,YAAY,GAAG,EAAE,OAAO,MAAM;AAC3E,UAAI,OAAO,UAAU,eAAe,CAAC,OAAO,UAAU;AAClD,eAAO;AAAA,MACX;AACA,UAAI,UAAU,SAAS,cAAc,OAAO;AAC5C,eAAS,KAAK,YAAY,OAAO;AACjC,UAAI,aAAa,QAAQ;AACzB,UAAI,YAAY,oBAAoB,OAAO,eAAe,YAAY,EAAE,OAAO,QAAQ,aAAa;AACpG,UAAI,YAAY;AACZ,mBAAW,WAAW,WAAW,CAAC;AAAA,MACtC;AACA,aAAO;AAAA,IACX;AACA,YAAQ,kBAAkB;AAAA;AAAA;",
  "names": []
}
