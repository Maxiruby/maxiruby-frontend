{
  "version": 3,
  "sources": ["../../../node_modules/@tanstack/query-sync-storage-persister/src/index.ts", "../../../node_modules/@tanstack/query-core/src/subscribable.ts", "../../../node_modules/@tanstack/query-core/src/utils.ts", "../../../node_modules/@tanstack/query-core/src/focusManager.ts", "../../../node_modules/@tanstack/query-core/src/onlineManager.ts", "../../../node_modules/@tanstack/query-core/src/retryer.ts", "../../../node_modules/@tanstack/query-core/src/logger.ts", "../../../node_modules/@tanstack/query-core/src/notifyManager.ts", "../../../node_modules/@tanstack/query-core/src/removable.ts", "../../../node_modules/@tanstack/query-core/src/query.ts", "../../../node_modules/@tanstack/query-core/src/queryCache.ts", "../../../node_modules/@tanstack/query-core/src/mutation.ts", "../../../node_modules/@tanstack/query-core/src/mutationCache.ts", "../../../node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts", "../../../node_modules/@tanstack/query-core/src/queryClient.ts", "../../../node_modules/@tanstack/query-core/src/queryObserver.ts", "../../../node_modules/@tanstack/query-core/src/queriesObserver.ts", "../../../node_modules/@tanstack/query-core/src/infiniteQueryObserver.ts", "../../../node_modules/@tanstack/query-core/src/mutationObserver.ts", "../../../node_modules/@tanstack/query-core/src/hydration.ts", "../../../node_modules/@tanstack/query-core/build/lib/index.js", "../../../node_modules/@tanstack/react-query/src/reactBatchedUpdates.ts", "../../../node_modules/@tanstack/react-query/src/setBatchUpdatesFn.ts", "../../../node_modules/@tanstack/react-query/src/useSyncExternalStore.ts", "../../../node_modules/@tanstack/react-query/src/QueryClientProvider.tsx", "../../../node_modules/@tanstack/react-query/src/isRestoring.tsx", "../../../node_modules/@tanstack/react-query/src/QueryErrorResetBoundary.tsx", "../../../node_modules/@tanstack/react-query/src/utils.ts", "../../../node_modules/@tanstack/react-query/src/errorBoundaryUtils.ts", "../../../node_modules/@tanstack/react-query/src/suspense.ts", "../../../node_modules/@tanstack/react-query/src/useQueries.ts", "../../../node_modules/@tanstack/react-query/src/useBaseQuery.ts", "../../../node_modules/@tanstack/react-query/src/useQuery.ts", "../../../node_modules/@tanstack/react-query/src/Hydrate.tsx", "../../../node_modules/@tanstack/react-query/src/useIsFetching.ts", "../../../node_modules/@tanstack/react-query/src/useIsMutating.ts", "../../../node_modules/@tanstack/react-query/src/useMutation.ts", "../../../node_modules/@tanstack/react-query/src/useInfiniteQuery.ts", "../../../node_modules/@tanstack/react-query/build/lib/index.js", "../../../node_modules/@tanstack/query-persist-client-core/src/persist.ts", "../../../node_modules/@tanstack/query-persist-client-core/src/retryStrategies.ts", "../../../node_modules/@tanstack/query-persist-client-core/build/lib/index.js", "../../../node_modules/@tanstack/react-query-persist-client/build/lib/_virtual/_rollupPluginBabelHelpers.js", "../../../node_modules/@tanstack/react-query-persist-client/src/PersistQueryClientProvider.tsx", "../../../node_modules/@tanstack/react-query-persist-client/build/lib/index.js", "../../../node_modules/viem/errors/version.ts", "../../../node_modules/viem/errors/utils.ts", "../../../node_modules/viem/errors/base.ts", "../../../node_modules/viem/errors/chain.ts", "../../../node_modules/viem/utils/chain.ts", "../../../node_modules/viem/chains/definitions/arbitrum.ts", "../../../node_modules/viem/chains/definitions/arbitrumGoerli.ts", "../../../node_modules/viem/chains/definitions/arbitrumNova.ts", "../../../node_modules/viem/chains/definitions/aurora.ts", "../../../node_modules/viem/chains/definitions/auroraTestnet.ts", "../../../node_modules/viem/chains/definitions/avalanche.ts", "../../../node_modules/viem/chains/definitions/avalancheFuji.ts", "../../../node_modules/viem/errors/encoding.ts", "../../../node_modules/viem/utils/data/isHex.ts", "../../../node_modules/viem/utils/data/size.ts", "../../../node_modules/viem/utils/data/trim.ts", "../../../node_modules/viem/errors/data.ts", "../../../node_modules/viem/utils/data/pad.ts", "../../../node_modules/viem/utils/encoding/toHex.ts", "../../../node_modules/viem/utils/encoding/toBytes.ts", "../../../node_modules/viem/utils/encoding/fromHex.ts", "../../../node_modules/viem/utils/formatters/formatter.ts", "../../../node_modules/viem/utils/formatters/transaction.ts", "../../../node_modules/viem/utils/formatters/block.ts", "../../../node_modules/viem/utils/formatters/log.ts", "../../../node_modules/viem/utils/formatters/transactionReceipt.ts", "../../../node_modules/viem/chains/optimism/formatters.ts", "../../../node_modules/viem/chains/definitions/base.ts", "../../../node_modules/viem/chains/definitions/baseGoerli.ts", "../../../node_modules/viem/chains/definitions/bearNetworkChainMainnet.ts", "../../../node_modules/viem/chains/definitions/bearNetworkChainTestnet.ts", "../../../node_modules/viem/chains/definitions/boba.ts", "../../../node_modules/viem/chains/definitions/bronos.ts", "../../../node_modules/viem/chains/definitions/bronosTestnet.ts", "../../../node_modules/viem/chains/definitions/bsc.ts", "../../../node_modules/viem/chains/definitions/bscTestnet.ts", "../../../node_modules/viem/chains/definitions/bxn.ts", "../../../node_modules/viem/chains/definitions/bxnTestnet.ts", "../../../node_modules/viem/chains/definitions/canto.ts", "../../../node_modules/viem/utils/formatters/transactionRequest.ts", "../../../node_modules/viem/chains/celo/formatters.ts", "../../../node_modules/viem/errors/address.ts", "../../../node_modules/viem/constants/unit.ts", "../../../node_modules/viem/utils/unit/formatUnits.ts", "../../../node_modules/viem/utils/unit/formatGwei.ts", "../../../node_modules/viem/errors/node.ts", "../../../node_modules/viem/utils/address/isAddress.ts", "../../../node_modules/viem/utils/data/concat.ts", "../../../node_modules/viem/utils/encoding/toRlp.ts", "../../../node_modules/viem/utils/unit/formatEther.ts", "../../../node_modules/viem/errors/transaction.ts", "../../../node_modules/viem/utils/transaction/serializeAccessList.ts", "../../../node_modules/viem/utils/transaction/assertTransaction.ts", "../../../node_modules/viem/utils/transaction/getTransactionType.ts", "../../../node_modules/viem/utils/transaction/serializeTransaction.ts", "../../../node_modules/viem/chains/celo/serializers.ts", "../../../node_modules/viem/chains/definitions/celo.ts", "../../../node_modules/viem/chains/definitions/celoAlfajores.ts", "../../../node_modules/viem/chains/definitions/celoCannoli.ts", "../../../node_modules/viem/chains/definitions/classic.ts", "../../../node_modules/viem/chains/definitions/confluxESpace.ts", "../../../node_modules/viem/chains/definitions/cronos.ts", "../../../node_modules/viem/chains/definitions/cronosTestnet.ts", "../../../node_modules/viem/chains/definitions/crossbell.ts", "../../../node_modules/viem/chains/definitions/dfk.ts", "../../../node_modules/viem/chains/definitions/dogechain.ts", "../../../node_modules/viem/chains/definitions/edgeware.ts", "../../../node_modules/viem/chains/definitions/edgewareTestnet.ts", "../../../node_modules/viem/chains/definitions/eos.ts", "../../../node_modules/viem/chains/definitions/eosTestnet.ts", "../../../node_modules/viem/chains/definitions/evmos.ts", "../../../node_modules/viem/chains/definitions/evmosTestnet.ts", "../../../node_modules/viem/chains/definitions/ekta.ts", "../../../node_modules/viem/chains/definitions/ektaTestnet.ts", "../../../node_modules/viem/chains/definitions/fantom.ts", "../../../node_modules/viem/chains/definitions/fantomTestnet.ts", "../../../node_modules/viem/chains/definitions/fibo.ts", "../../../node_modules/viem/chains/definitions/filecoin.ts", "../../../node_modules/viem/chains/definitions/filecoinCalibration.ts", "../../../node_modules/viem/chains/definitions/filecoinHyperspace.ts", "../../../node_modules/viem/chains/definitions/flare.ts", "../../../node_modules/viem/chains/definitions/flareTestnet.ts", "../../../node_modules/viem/chains/definitions/foundry.ts", "../../../node_modules/viem/chains/definitions/fuse.ts", "../../../node_modules/viem/chains/definitions/fuseSparknet.ts", "../../../node_modules/viem/chains/definitions/iotex.ts", "../../../node_modules/viem/chains/definitions/iotexTestnet.ts", "../../../node_modules/viem/chains/definitions/gobi.ts", "../../../node_modules/viem/chains/definitions/goerli.ts", "../../../node_modules/viem/chains/definitions/gnosis.ts", "../../../node_modules/viem/chains/definitions/gnosisChiado.ts", "../../../node_modules/viem/chains/definitions/hardhat.ts", "../../../node_modules/viem/chains/definitions/harmonyOne.ts", "../../../node_modules/viem/chains/definitions/haqqMainnet.ts", "../../../node_modules/viem/chains/definitions/haqqTestedge2.ts", "../../../node_modules/viem/chains/definitions/holesky.ts", "../../../node_modules/viem/chains/definitions/klaytn.ts", "../../../node_modules/viem/chains/definitions/kroma.ts", "../../../node_modules/viem/chains/definitions/kromaSepolia.ts", "../../../node_modules/viem/chains/definitions/linea.ts", "../../../node_modules/viem/chains/definitions/lineaTestnet.ts", "../../../node_modules/viem/chains/definitions/localhost.ts", "../../../node_modules/viem/chains/definitions/mainnet.ts", "../../../node_modules/viem/chains/definitions/mantle.ts", "../../../node_modules/viem/chains/definitions/mantleTestnet.ts", "../../../node_modules/viem/chains/definitions/meter.ts", "../../../node_modules/viem/chains/definitions/meterTestnet.ts", "../../../node_modules/viem/chains/definitions/metis.ts", "../../../node_modules/viem/chains/definitions/metisGoerli.ts", "../../../node_modules/viem/chains/definitions/mev.ts", "../../../node_modules/viem/chains/definitions/mevTestnet.ts", "../../../node_modules/viem/chains/definitions/modeTestnet.ts", "../../../node_modules/viem/chains/definitions/moonbaseAlpha.ts", "../../../node_modules/viem/chains/definitions/moonbeam.ts", "../../../node_modules/viem/chains/definitions/moonriver.ts", "../../../node_modules/viem/chains/definitions/neonDevnet.ts", "../../../node_modules/viem/chains/definitions/nexi.ts", "../../../node_modules/viem/chains/definitions/nexilix.ts", "../../../node_modules/viem/chains/definitions/oasys.ts", "../../../node_modules/viem/chains/definitions/okc.ts", "../../../node_modules/viem/chains/definitions/optimism.ts", "../../../node_modules/viem/chains/definitions/optimismGoerli.ts", "../../../node_modules/viem/chains/definitions/opBNB.ts", "../../../node_modules/viem/chains/definitions/opBNBTestnet.ts", "../../../node_modules/viem/chains/definitions/plinga.ts", "../../../node_modules/viem/chains/definitions/polygon.ts", "../../../node_modules/viem/chains/definitions/polygonMumbai.ts", "../../../node_modules/viem/chains/definitions/polygonZkEvmTestnet.ts", "../../../node_modules/viem/chains/definitions/polygonZkEvm.ts", "../../../node_modules/viem/chains/definitions/pulsechain.ts", "../../../node_modules/viem/chains/definitions/pulsechainV4.ts", "../../../node_modules/viem/chains/definitions/qMainnet.ts", "../../../node_modules/viem/chains/definitions/qTestnet.ts", "../../../node_modules/viem/chains/definitions/rollux.ts", "../../../node_modules/viem/chains/definitions/rolluxTestnet.ts", "../../../node_modules/viem/chains/definitions/ronin.ts", "../../../node_modules/viem/chains/definitions/saigon.ts", "../../../node_modules/viem/chains/definitions/scrollSepolia.ts", "../../../node_modules/viem/chains/definitions/scrollTestnet.ts", "../../../node_modules/viem/chains/definitions/sepolia.ts", "../../../node_modules/viem/chains/definitions/skale/brawl.ts", "../../../node_modules/viem/chains/definitions/skale/calypso.ts", "../../../node_modules/viem/chains/definitions/skale/calypsoTestnet.ts", "../../../node_modules/viem/chains/definitions/skale/chaosTestnet.ts", "../../../node_modules/viem/chains/definitions/skale/cryptoBlades.ts", "../../../node_modules/viem/chains/definitions/skale/cryptoColosseum.ts", "../../../node_modules/viem/chains/definitions/skale/europa.ts", "../../../node_modules/viem/chains/definitions/skale/europaTestnet.ts", "../../../node_modules/viem/chains/definitions/skale/exorde.ts", "../../../node_modules/viem/chains/definitions/skale/humanProtocol.ts", "../../../node_modules/viem/chains/definitions/skale/nebula.ts", "../../../node_modules/viem/chains/definitions/skale/nebulaTestnet.ts", "../../../node_modules/viem/chains/definitions/skale/razor.ts", "../../../node_modules/viem/chains/definitions/skale/titan.ts", "../../../node_modules/viem/chains/definitions/skale/titanTestnet.ts", "../../../node_modules/viem/chains/definitions/songbird.ts", "../../../node_modules/viem/chains/definitions/songbirdTestnet.ts", "../../../node_modules/viem/chains/definitions/shardeumSphinx.ts", "../../../node_modules/viem/chains/definitions/syscoin.ts", "../../../node_modules/viem/chains/definitions/syscoinTestnet.ts", "../../../node_modules/viem/chains/definitions/taraxa.ts", "../../../node_modules/viem/chains/definitions/taikoJolnir.ts", "../../../node_modules/viem/chains/definitions/taikoTestnetSepolia.ts", "../../../node_modules/viem/chains/definitions/taraxaTestnet.ts", "../../../node_modules/viem/chains/definitions/telos.ts", "../../../node_modules/viem/chains/definitions/telosTestnet.ts", "../../../node_modules/viem/chains/definitions/thunderTestnet.ts", "../../../node_modules/viem/chains/definitions/vechain.ts", "../../../node_modules/viem/chains/definitions/wanchain.ts", "../../../node_modules/viem/chains/definitions/wanchainTestnet.ts", "../../../node_modules/viem/chains/definitions/xdc.ts", "../../../node_modules/viem/chains/definitions/xdcTestnet.ts", "../../../node_modules/viem/chains/definitions/zhejiang.ts", "../../../node_modules/viem/chains/definitions/zkSync.ts", "../../../node_modules/viem/chains/definitions/zkSyncTestnet.ts", "../../../node_modules/viem/chains/definitions/zetachainAthensTestnet.ts", "../../../node_modules/viem/chains/definitions/zora.ts", "../../../node_modules/viem/chains/definitions/zoraTestnet.ts", "../../../node_modules/viem/chains/index.ts", "../../../node_modules/@wagmi/core/dist/chunk-4E64EZ7V.js", "../../../node_modules/@wagmi/connectors/dist/chunk-UGBGYVBH.js", "../../../node_modules/@wagmi/connectors/dist/chunk-OQILYQDO.js", "../../../node_modules/eventemitter3/index.js", "../../../node_modules/@wagmi/connectors/dist/chunk-W65LBPLT.js", "../../../node_modules/@wagmi/connectors/dist/index.js", "../../../node_modules/viem/node_modules/abitype/src/version.ts", "../../../node_modules/viem/node_modules/abitype/src/errors.ts", "../../../node_modules/viem/node_modules/abitype/src/narrow.ts", "../../../node_modules/viem/node_modules/abitype/src/regex.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/formatAbiParameter.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/formatAbiParameters.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/formatAbiItem.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/formatAbi.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/runtime/signatures.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/errors/abiItem.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/errors/abiParameter.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/errors/signature.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/errors/struct.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/errors/splitParameters.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/runtime/cache.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/runtime/utils.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/runtime/structs.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/parseAbi.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/parseAbiItem.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/parseAbiParameter.ts", "../../../node_modules/viem/node_modules/abitype/src/human-readable/parseAbiParameters.ts", "../../../node_modules/viem/node_modules/abitype/src/index.ts", "../../../node_modules/viem/utils/abi/formatAbiItem.ts", "../../../node_modules/viem/errors/abi.ts", "../../../node_modules/viem/errors/log.ts", "../../../node_modules/viem/utils/contract/extractFunctionParts.ts", "../../../node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/sha3.ts", "../../../node_modules/viem/utils/hash/keccak256.ts", "../../../node_modules/viem/utils/hash/hashFunction.ts", "../../../node_modules/viem/utils/hash/getEventSelector.ts", "../../../node_modules/viem/utils/data/slice.ts", "../../../node_modules/viem/utils/abi/encodeAbiParameters.ts", "../../../node_modules/viem/utils/hash/getFunctionSelector.ts", "../../../node_modules/viem/utils/abi/getAbiItem.ts", "../../../node_modules/viem/utils/abi/encodeEventTopics.ts", "../../../node_modules/viem/utils/filters/createFilterRequestScope.ts", "../../../node_modules/viem/actions/public/createContractEventFilter.ts", "../../../node_modules/viem/accounts/utils/parseAccount.ts", "../../../node_modules/viem/utils/abi/encodeFunctionData.ts", "../../../node_modules/viem/constants/solidity.ts", "../../../node_modules/viem/utils/address/getAddress.ts", "../../../node_modules/viem/utils/abi/decodeAbiParameters.ts", "../../../node_modules/viem/utils/abi/decodeErrorResult.ts", "../../../node_modules/viem/utils/stringify.ts", "../../../node_modules/viem/utils/abi/formatAbiItemWithArgs.ts", "../../../node_modules/viem/errors/contract.ts", "../../../node_modules/viem/errors/request.ts", "../../../node_modules/viem/errors/rpc.ts", "../../../node_modules/viem/utils/errors/getContractError.ts", "../../../node_modules/viem/errors/account.ts", "../../../node_modules/viem/errors/estimateGas.ts", "../../../node_modules/viem/utils/errors/getNodeError.ts", "../../../node_modules/viem/utils/errors/getEstimateGasError.ts", "../../../node_modules/viem/utils/formatters/extract.ts", "../../../node_modules/viem/utils/transaction/assertRequest.ts", "../../../node_modules/viem/errors/fee.ts", "../../../node_modules/viem/errors/block.ts", "../../../node_modules/viem/actions/public/getBlock.ts", "../../../node_modules/viem/actions/public/getGasPrice.ts", "../../../node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts", "../../../node_modules/viem/actions/public/estimateFeesPerGas.ts", "../../../node_modules/viem/actions/public/getTransactionCount.ts", "../../../node_modules/viem/actions/wallet/prepareTransactionRequest.ts", "../../../node_modules/viem/actions/public/estimateGas.ts", "../../../node_modules/viem/actions/public/estimateContractGas.ts", "../../../node_modules/viem/utils/abi/decodeFunctionResult.ts", "../../../node_modules/viem/constants/abis.ts", "../../../node_modules/viem/constants/contract.ts", "../../../node_modules/viem/utils/errors/getCallError.ts", "../../../node_modules/viem/utils/promise/createBatchScheduler.ts", "../../../node_modules/viem/errors/ccip.ts", "../../../node_modules/viem/utils/address/isAddressEqual.ts", "../../../node_modules/viem/utils/ccip.ts", "../../../node_modules/viem/actions/public/call.ts", "../../../node_modules/viem/actions/public/readContract.ts", "../../../node_modules/viem/actions/public/simulateContract.ts", "../../../node_modules/viem/utils/observe.ts", "../../../node_modules/viem/utils/wait.ts", "../../../node_modules/viem/utils/poll.ts", "../../../node_modules/viem/utils/abi/decodeEventLog.ts", "../../../node_modules/viem/utils/promise/withCache.ts", "../../../node_modules/viem/actions/public/getBlockNumber.ts", "../../../node_modules/viem/actions/public/getFilterChanges.ts", "../../../node_modules/viem/actions/public/getLogs.ts", "../../../node_modules/viem/actions/public/uninstallFilter.ts", "../../../node_modules/viem/actions/public/watchContractEvent.ts", "../../../node_modules/viem/utils/errors/getTransactionError.ts", "../../../node_modules/viem/actions/public/getChainId.ts", "../../../node_modules/viem/actions/wallet/sendRawTransaction.ts", "../../../node_modules/viem/actions/wallet/sendTransaction.ts", "../../../node_modules/viem/actions/wallet/writeContract.ts", "../../../node_modules/viem/actions/getContract.ts", "../../../node_modules/viem/accounts/utils/publicKeyToAddress.ts", "../../../node_modules/viem/utils/accounts.ts", "../../../node_modules/viem/utils/uid.ts", "../../../node_modules/viem/clients/createClient.ts", "../../../node_modules/viem/utils/promise/withRetry.ts", "../../../node_modules/viem/utils/buildRequest.ts", "../../../node_modules/viem/clients/transports/createTransport.ts", "../../../node_modules/viem/clients/transports/custom.ts", "../../../node_modules/viem/clients/transports/fallback.ts", "../../../node_modules/viem/errors/transport.ts", "../../../node_modules/isomorphic-ws/browser.js", "../../../node_modules/viem/utils/promise/withTimeout.ts", "../../../node_modules/viem/utils/rpc.ts", "../../../node_modules/viem/clients/transports/http.ts", "../../../node_modules/viem/utils/ens/errors.ts", "../../../node_modules/viem/utils/ens/encodedLabelToLabelhash.ts", "../../../node_modules/viem/utils/ens/namehash.ts", "../../../node_modules/viem/utils/ens/encodeLabelhash.ts", "../../../node_modules/viem/utils/ens/labelhash.ts", "../../../node_modules/viem/utils/ens/packetToBytes.ts", "../../../node_modules/viem/actions/ens/getEnsAddress.ts", "../../../node_modules/viem/errors/ens.ts", "../../../node_modules/viem/utils/ens/avatar/utils.ts", "../../../node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts", "../../../node_modules/viem/actions/ens/getEnsText.ts", "../../../node_modules/viem/actions/ens/getEnsAvatar.ts", "../../../node_modules/viem/actions/ens/getEnsName.ts", "../../../node_modules/viem/actions/ens/getEnsResolver.ts", "../../../node_modules/viem/actions/public/createBlockFilter.ts", "../../../node_modules/viem/actions/public/createEventFilter.ts", "../../../node_modules/viem/actions/public/createPendingTransactionFilter.ts", "../../../node_modules/viem/actions/public/getBalance.ts", "../../../node_modules/viem/actions/public/getBlockTransactionCount.ts", "../../../node_modules/viem/actions/public/getBytecode.ts", "../../../node_modules/viem/utils/formatters/feeHistory.ts", "../../../node_modules/viem/actions/public/getFeeHistory.ts", "../../../node_modules/viem/actions/public/getFilterLogs.ts", "../../../node_modules/viem/actions/public/getStorageAt.ts", "../../../node_modules/viem/actions/public/getTransaction.ts", "../../../node_modules/viem/actions/public/getTransactionConfirmations.ts", "../../../node_modules/viem/actions/public/getTransactionReceipt.ts", "../../../node_modules/viem/actions/public/multicall.ts", "../../../node_modules/viem/utils/regex.ts", "../../../node_modules/viem/utils/signature/hashTypedData.ts", "../../../node_modules/viem/utils/typedData.ts", "../../../node_modules/viem/utils/abi/decodeFunctionData.ts", "../../../node_modules/viem/utils/abi/encodeDeployData.ts", "../../../node_modules/viem/utils/abi/encodeErrorResult.ts", "../../../node_modules/viem/utils/abi/encodeFunctionResult.ts", "../../../node_modules/viem/utils/abi/encodePacked.ts", "../../../node_modules/viem/utils/data/isBytes.ts", "../../../node_modules/viem/utils/address/getContractAddress.ts", "../../../node_modules/viem/utils/encoding/fromBytes.ts", "../../../node_modules/viem/utils/encoding/fromRlp.ts", "../../../node_modules/viem/utils/hash/isHash.ts", "../../../node_modules/@noble/hashes/src/_sha2.ts", "../../../node_modules/@noble/hashes/src/sha256.ts", "../../../node_modules/@noble/curves/src/abstract/utils.ts", "../../../node_modules/@noble/curves/src/abstract/modular.ts", "../../../node_modules/@noble/curves/src/abstract/curve.ts", "../../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../../node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../../node_modules/@noble/hashes/src/hmac.ts", "../../../node_modules/@noble/curves/src/_shortw_utils.ts", "../../../node_modules/@noble/curves/src/secp256k1.ts", "../../../node_modules/viem/utils/signature/recoverPublicKey.ts", "../../../node_modules/viem/utils/signature/recoverAddress.ts", "../../../node_modules/viem/utils/signature/hashMessage.ts", "../../../node_modules/viem/utils/signature/recoverMessageAddress.ts", "../../../node_modules/viem/utils/signature/recoverTypedDataAddress.ts", "../../../node_modules/viem/utils/signature/verifyMessage.ts", "../../../node_modules/viem/utils/signature/verifyTypedData.ts", "../../../node_modules/viem/utils/transaction/getSerializedTransactionType.ts", "../../../node_modules/viem/utils/transaction/parseTransaction.ts", "../../../node_modules/viem/utils/unit/parseUnits.ts", "../../../node_modules/viem/utils/unit/parseEther.ts", "../../../node_modules/viem/utils/unit/parseGwei.ts", "../../../node_modules/viem/utils/index.ts", "../../../node_modules/viem/constants/contracts.ts", "../../../node_modules/viem/utils/data/isBytesEqual.ts", "../../../node_modules/viem/actions/public/verifyHash.ts", "../../../node_modules/viem/actions/public/verifyMessage.ts", "../../../node_modules/viem/actions/public/verifyTypedData.ts", "../../../node_modules/viem/actions/public/watchBlockNumber.ts", "../../../node_modules/viem/actions/public/waitForTransactionReceipt.ts", "../../../node_modules/viem/actions/public/watchBlocks.ts", "../../../node_modules/viem/actions/public/watchEvent.ts", "../../../node_modules/viem/actions/public/watchPendingTransactions.ts", "../../../node_modules/viem/clients/decorators/public.ts", "../../../node_modules/viem/clients/createPublicClient.ts", "../../../node_modules/viem/actions/test/dropTransaction.ts", "../../../node_modules/viem/actions/test/getAutomine.ts", "../../../node_modules/viem/actions/test/getTxpoolContent.ts", "../../../node_modules/viem/actions/test/getTxpoolStatus.ts", "../../../node_modules/viem/actions/test/impersonateAccount.ts", "../../../node_modules/viem/actions/test/increaseTime.ts", "../../../node_modules/viem/actions/test/inspectTxpool.ts", "../../../node_modules/viem/actions/test/mine.ts", "../../../node_modules/viem/actions/test/removeBlockTimestampInterval.ts", "../../../node_modules/viem/actions/test/reset.ts", "../../../node_modules/viem/actions/test/revert.ts", "../../../node_modules/viem/actions/test/sendUnsignedTransaction.ts", "../../../node_modules/viem/actions/test/setAutomine.ts", "../../../node_modules/viem/actions/test/setBalance.ts", "../../../node_modules/viem/actions/test/setBlockGasLimit.ts", "../../../node_modules/viem/actions/test/setBlockTimestampInterval.ts", "../../../node_modules/viem/actions/test/setCode.ts", "../../../node_modules/viem/actions/test/setCoinbase.ts", "../../../node_modules/viem/actions/test/setIntervalMining.ts", "../../../node_modules/viem/actions/test/setLoggingEnabled.ts", "../../../node_modules/viem/actions/test/setMinGasPrice.ts", "../../../node_modules/viem/actions/test/setNextBlockBaseFeePerGas.ts", "../../../node_modules/viem/actions/test/setNextBlockTimestamp.ts", "../../../node_modules/viem/actions/test/setNonce.ts", "../../../node_modules/viem/actions/test/setRpcUrl.ts", "../../../node_modules/viem/actions/test/setStorageAt.ts", "../../../node_modules/viem/actions/test/snapshot.ts", "../../../node_modules/viem/actions/test/stopImpersonatingAccount.ts", "../../../node_modules/viem/clients/decorators/test.ts", "../../../node_modules/viem/clients/createTestClient.ts", "../../../node_modules/viem/actions/wallet/addChain.ts", "../../../node_modules/viem/actions/wallet/deployContract.ts", "../../../node_modules/viem/actions/wallet/getAddresses.ts", "../../../node_modules/viem/actions/wallet/getPermissions.ts", "../../../node_modules/viem/actions/wallet/requestAddresses.ts", "../../../node_modules/viem/actions/wallet/requestPermissions.ts", "../../../node_modules/viem/actions/wallet/signMessage.ts", "../../../node_modules/viem/actions/wallet/signTransaction.ts", "../../../node_modules/viem/actions/wallet/signTypedData.ts", "../../../node_modules/viem/actions/wallet/switchChain.ts", "../../../node_modules/viem/actions/wallet/watchAsset.ts", "../../../node_modules/viem/clients/decorators/wallet.ts", "../../../node_modules/viem/clients/createWalletClient.ts", "../../../node_modules/viem/clients/transports/webSocket.ts", "../../../node_modules/viem/constants/address.ts", "../../../node_modules/viem/constants/number.ts", "../../../node_modules/viem/utils/abi/decodeDeployData.ts", "../../../node_modules/viem/utils/signature/hexToSignature.ts", "../../../node_modules/viem/utils/signature/signatureToHex.ts", "../../../node_modules/viem/index.ts", "../../../node_modules/@wagmi/connectors/dist/chunk-2UFLHRLT.js", "../../../node_modules/@wagmi/connectors/dist/injected.js", "../../../node_modules/@wagmi/core/dist/chunk-BVC4KGLQ.js", "../../../node_modules/@wagmi/core/dist/chunk-MQXBDTVK.js", "../../../node_modules/zustand/esm/middleware.js", "../../../node_modules/zustand/esm/vanilla.js", "../../../node_modules/zustand/esm/shallow.js", "../../../node_modules/viem/node_modules/@adraffy/ens-normalize/dist/index.cjs", "../../../node_modules/viem/utils/ens/normalize.ts", "../../../node_modules/viem/ens/index.ts", "../../../node_modules/@wagmi/core/dist/chunk-LAFZBYO7.js", "../../../node_modules/@wagmi/core/dist/chunk-EQOEZP46.js", "../../../node_modules/@wagmi/core/dist/index.js", "../../../node_modules/@wagmi/core/dist/internal/index.js", "../../../node_modules/wagmi/dist/index.js"],
  "sourcesContent": ["import type {\n  PersistRetryer,\n  PersistedClient,\n  Persister,\n} from '@tanstack/query-persist-client-core'\n\ninterface Storage {\n  getItem: (key: string) => string | null\n  setItem: (key: string, value: string) => void\n  removeItem: (key: string) => void\n}\n\ninterface CreateSyncStoragePersisterOptions {\n  /** The storage client used for setting and retrieving items from cache.\n   * For SSR pass in `undefined`. Note that window.localStorage can be\n   * `null` in Android WebViews depending on how they are configured.\n   */\n  storage: Storage | undefined | null\n  /** The key to use when storing the cache */\n  key?: string\n  /** To avoid spamming,\n   * pass a time in ms to throttle saving the cache to disk */\n  throttleTime?: number\n  /**\n   * How to serialize the data to storage.\n   * @default `JSON.stringify`\n   */\n  serialize?: (client: PersistedClient) => string\n  /**\n   * How to deserialize the data from storage.\n   * @default `JSON.parse`\n   */\n  deserialize?: (cachedString: string) => PersistedClient\n\n  retry?: PersistRetryer\n}\n\nexport function createSyncStoragePersister({\n  storage,\n  key = `REACT_QUERY_OFFLINE_CACHE`,\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n  retry,\n}: CreateSyncStoragePersisterOptions): Persister {\n  if (storage) {\n    const trySave = (persistedClient: PersistedClient): Error | undefined => {\n      try {\n        storage.setItem(key, serialize(persistedClient))\n        return\n      } catch (error) {\n        return error as Error\n      }\n    }\n    return {\n      persistClient: throttle((persistedClient) => {\n        let client: PersistedClient | undefined = persistedClient\n        let error = trySave(client)\n        let errorCount = 0\n        while (error && client) {\n          errorCount++\n          client = retry?.({\n            persistedClient: client,\n            error,\n            errorCount,\n          })\n\n          if (client) {\n            error = trySave(client)\n          }\n        }\n      }, throttleTime),\n      restoreClient: () => {\n        const cacheString = storage.getItem(key)\n\n        if (!cacheString) {\n          return\n        }\n\n        return deserialize(cacheString) as PersistedClient\n      },\n      removeClient: () => {\n        storage.removeItem(key)\n      },\n    }\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: () => undefined,\n    removeClient: noop,\n  }\n}\n\nfunction throttle<TArgs extends any[]>(\n  func: (...args: TArgs) => any,\n  wait = 100,\n) {\n  let timer: ReturnType<typeof setTimeout> | null = null\n  let params: TArgs\n  return function (...args: TArgs) {\n    params = args\n    if (timer === null) {\n      timer = setTimeout(() => {\n        func(...params)\n        timer = null\n      }, wait)\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n", "type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: Set<{ listener: TListener }>\n\n  constructor() {\n    this.listeners = new Set()\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    const identity = { listener }\n    this.listeners.add(identity)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(identity)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n", "import type { Mutation } from './mutation'\nimport type { Query } from './query'\nimport type {\n  FetchStatus,\n  MutationFunction,\n  MutationKey,\n  MutationOptions,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n} from './types'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Include or exclude fetching mutations\n   */\n  fetching?: boolean\n}\n\nexport type DataUpdateFunction<TInput, TOutput> = (input: TInput) => TOutput\n\nexport type Updater<TInput, TOutput> =\n  | TOutput\n  | DataUpdateFunction<TInput, TOutput>\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in window\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as DataUpdateFunction<TInput, TOutput>)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function difference<T>(array1: T[], array2: T[]): T[] {\n  return array1.filter((x) => !array2.includes(x))\n}\n\nexport function replaceAt<T>(array: T[], index: number, value: T): T[] {\n  const copy = array.slice(0)\n  copy[index] = value\n  return copy\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function parseQueryArgs<\n  TOptions extends QueryOptions<any, any, any, TQueryKey>,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | TOptions,\n  arg2?: QueryFunction<any, TQueryKey> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (!isQueryKey(arg1)) {\n    return arg1 as TOptions\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 } as TOptions\n  }\n\n  return { ...arg2, queryKey: arg1 } as TOptions\n}\n\nexport function parseMutationArgs<\n  TOptions extends MutationOptions<any, any, any, any>,\n>(\n  arg1: MutationKey | MutationFunction<any, any> | TOptions,\n  arg2?: MutationFunction<any, any> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3, mutationKey: arg1, mutationFn: arg2 } as TOptions\n    }\n    return { ...arg2, mutationKey: arg1 } as TOptions\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2, mutationFn: arg1 } as TOptions\n  }\n\n  return { ...arg1 } as TOptions\n}\n\nexport function parseFilterArgs<\n  TFilters extends QueryFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1) ? [{ ...arg2, queryKey: arg1 }, arg3] : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function parseMutationFilterArgs<\n  TFilters extends MutationFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1)\n      ? [{ ...arg2, mutationKey: arg1 }, arg3]\n      : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (\n    typeof fetchStatus !== 'undefined' &&\n    fetchStatus !== query.state.fetchStatus\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, fetching, predicate, mutationKey } = filters\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (\n        hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)\n      ) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (\n    typeof fetching === 'boolean' &&\n    (mutation.state.status === 'loading') !== fetching\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: QueryOptions<any, any, any, TQueryKey>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashQueryKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashQueryKey(queryKey: QueryKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean {\n  return partialDeepEqual(a, b)\n}\n\n/**\n * Checks if `b` partially matches with `a`.\n */\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aSize = array ? a.length : Object.keys(a).length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      copy[key] = replaceEqualDeep(a[key], b[key])\n      if (copy[key] === a[key]) {\n        equalItems++\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\nexport function shallowEqualObjects<T>(a: T, b: T): boolean {\n  if ((a && !b) || (b && !a)) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function isQueryKey(value: unknown): value is QueryKey {\n  return Array.isArray(value)\n}\n\nexport function isError(value: any): value is Error {\n  return value instanceof Error\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nexport function scheduleMicrotask(callback: () => void) {\n  sleep(0).then(callback)\n}\n\nexport function getAbortController(): AbortController | undefined {\n  if (typeof AbortController === 'function') {\n    return new AbortController()\n  }\n  return\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual?.(prevData, data)) {\n    return prevData as TData\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data)\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  private focused?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', listener, false)\n        window.addEventListener('focus', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n          window.removeEventListener('focus', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.focused !== focused\n    if (changed) {\n      this.focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.focused === 'boolean') {\n      return this.focused\n    }\n\n    // document global can be unavailable in react native\n    if (typeof document === 'undefined') {\n      return true\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(\n      document.visibilityState,\n    )\n  }\n}\n\nexport const focusManager = new FocusManager()\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setOnline: (online?: boolean) => void,\n) => (() => void) | undefined\n\nconst onlineEvents = ['online', 'offline'] as const\n\nexport class OnlineManager extends Subscribable {\n  private online?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline()\n        // Listen to online\n        onlineEvents.forEach((event) => {\n          window.addEventListener(event, listener, false)\n        })\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach((event) => {\n            window.removeEventListener(event, listener)\n          })\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((online?: boolean) => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online)\n      } else {\n        this.onOnline()\n      }\n    })\n  }\n\n  setOnline(online?: boolean): void {\n    const changed = this.online !== online\n\n    if (changed) {\n      this.online = online\n      this.onOnline()\n    }\n  }\n\n  onOnline(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isOnline(): boolean {\n    if (typeof this.online === 'boolean') {\n      return this.online\n    }\n\n    if (\n      typeof navigator === 'undefined' ||\n      typeof navigator.onLine === 'undefined'\n    ) {\n      return true\n    }\n\n    return navigator.onLine\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n", "import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { sleep } from './utils'\nimport type { CancelOptions, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = unknown> {\n  fn: () => TData | Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = unknown> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = unknown>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => boolean) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const shouldPause = () =>\n    !focusManager.isFocused() ||\n    (config.networkMode !== 'always' && !onlineManager.isOnline())\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        const canContinue = isResolved || !shouldPause()\n        if (canContinue) {\n          continueResolve(value)\n        }\n        return canContinue\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // Execute query\n    try {\n      promiseOrValue = config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? 3\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            if (shouldPause()) {\n              return pause()\n            }\n            return\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  // Start loop\n  if (canFetch(config.networkMode)) {\n    run()\n  } else {\n    pause().then(run)\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn?.()\n      return didContinue ? promise : Promise.resolve()\n    },\n    cancelRetry,\n    continueRetry,\n  }\n}\n", "export interface Logger {\n  log: LogFunction\n  warn: LogFunction\n  error: LogFunction\n}\n\ntype LogFunction = (...args: any[]) => void\n\nexport const defaultLogger: Logger = console\n", "import { scheduleMicrotask } from './utils'\n\n// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends unknown[]> = (...args: T) => void\n\nexport function createNotifyManager() {\n  let queue: NotifyCallback[] = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends unknown[]>(\n    callback: BatchCallsCallback<T>,\n  ): BatchCallsCallback<T> => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n", "import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  cacheTime!: number\n  private gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.cacheTime)\n    }\n  }\n\n  protected updateCacheTime(newCacheTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(\n      this.cacheTime || 0,\n      newCacheTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout)\n      this.gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n", "import { getAbortController, noop, replaceData, timeUntilStale } from './utils'\nimport { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type {\n  CancelOptions,\n  FetchStatus,\n  InitialDataFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  logger?: Logger\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = unknown> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: any\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal?: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n  ) => void\n}\n\nexport interface FetchOptions {\n  cancelRefetch?: boolean\n  meta?: any\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: any\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  initialState: QueryState<TData, TError>\n  revertState?: QueryState<TData, TError>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  private cache: QueryCache\n  private logger: Logger\n  private promise?: Promise<TData>\n  private retryer?: Retryer<TData>\n  private observers: QueryObserver<any, any, any, any, any>[]\n  private defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  private abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.abortSignalConsumed = false\n    this.defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.cache = config.cache\n    this.logger = config.logger || defaultLogger\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.initialState = config.state || getDefaultState(this.options)\n    this.state = this.initialState\n    this.scheduleGc()\n  }\n\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  private setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.promise\n    this.retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some((observer) => observer.options.enabled !== false)\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      this.observers.some((observer) => observer.getCurrentResult().isStale)\n    )\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({ revert: true })\n          } else {\n            this.retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({ silent: true })\n      } else if (this.promise) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.retryer?.continueRetry()\n        // Return current promise if we are already fetching\n        return this.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = getAbortController()\n\n    // Create query function context\n    const queryFnContext: QueryFunctionContext<TQueryKey> = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta,\n    }\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true\n            return abortController.signal\n          }\n          return undefined\n        },\n      })\n    }\n\n    addSignalProperty(queryFnContext)\n\n    // Create fetch function\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\n          `Missing queryFn for queryKey '${this.options.queryHash}'`,\n        )\n      }\n      this.abortSignalConsumed = false\n      return this.options.queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const context: FetchContext<TQueryFnData, TError, TData, TQueryKey> = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(context)\n\n    // Store state in case the current fetch needs to be reverted\n    this.revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.cache.config.onError?.(error, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.retryer = createRetryer({\n      fn: context.fetchFn as () => TData,\n      abort: abortController?.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        this.setData(data as TData)\n\n        // Notify cache callback\n        this.cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n    })\n\n    this.promise = this.retryer.promise\n\n    return this.promise\n  }\n\n  private dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: action.meta ?? null,\n            fetchStatus: canFetch(this.options.networkMode)\n              ? 'fetching'\n              : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading',\n            }),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate(action)\n      })\n\n      this.cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = typeof data !== 'undefined'\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle',\n  }\n}\n", "import { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type { NotifyEvent, QueryKey, QueryOptions } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (error: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface QueryHashMap {\n  [hash: string]: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  config: QueryCacheConfig\n\n  private queries: Query<any, any, any, any>[]\n  private queriesMap: QueryHashMap\n\n  constructor(config?: QueryCacheConfig) {\n    super()\n    this.config = config || {}\n    this.queries = []\n    this.queriesMap = {}\n  }\n\n  build<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\n    client: QueryClient,\n    options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey!\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query\n      this.queries.push(query)\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.queriesMap[query.queryHash]\n\n    if (queryInMap) {\n      query.destroy()\n\n      this.queries = this.queries.filter((x) => x !== query)\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash]\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.queriesMap[queryHash]\n  }\n\n  getAll(): Query[] {\n    return this.queries\n  }\n\n  find<TQueryFnData = unknown, TError = unknown, TData = TQueryFnData>(\n    arg1: QueryKey,\n    arg2?: QueryFilters,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const [filters] = parseFilterArgs(arg1, arg2)\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.queries.find((query) => matchQuery(filters, query))\n  }\n\n  findAll(queryKey?: QueryKey, filters?: QueryFilters): Query[]\n  findAll(filters?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[] {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    return Object.keys(filters).length > 0\n      ? this.queries.filter((query) => matchQuery(filters, query))\n      : this.queries\n  }\n\n  notify(event: QueryCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n", "import { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { canFetch, createRetryer } from './retryer'\nimport type { MutationMeta, MutationOptions, MutationStatus } from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  logger?: Logger\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n  meta?: MutationMeta\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface LoadingAction<TVariables, TContext> {\n  type: 'loading'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError, TVariables, TContext> {\n  type: 'setState'\n  state: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | LoadingAction<TVariables, TContext>\n  | PauseAction\n  | SetStateAction<TData, TError, TVariables, TContext>\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  mutationId: number\n\n  private observers: MutationObserver<TData, TError, TVariables, TContext>[]\n  private defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  private mutationCache: MutationCache\n  private logger: Logger\n  private retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.defaultOptions = config.defaultOptions\n    this.mutationId = config.mutationId\n    this.mutationCache = config.mutationCache\n    this.logger = config.logger || defaultLogger\n    this.observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options?: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  setState(state: MutationState<TData, TError, TVariables, TContext>): void {\n    this.dispatch({ type: 'setState', state })\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.observers = this.observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc()\n      } else {\n        this.mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return this.retryer?.continue() ?? this.execute()\n  }\n\n  async execute(): Promise<TData> {\n    const executeMutation = () => {\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found')\n          }\n          return this.options.mutationFn(this.state.variables!)\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.retryer.promise\n    }\n\n    const restored = this.state.status === 'loading'\n    try {\n      if (!restored) {\n        this.dispatch({ type: 'loading', variables: this.options.variables! })\n        // Notify cache callback\n        await this.mutationCache.config.onMutate?.(\n          this.state.variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(this.state.variables!)\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.mutationCache.config.onSuccess?.(\n        data,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        this.state.variables!,\n        this.state.context!,\n      )\n\n      // Notify cache callback\n      await this.mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        this.state.variables!,\n        this.state.context,\n      )\n\n      this.dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.mutationCache.config.onError?.(\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n\n        await this.options.onError?.(\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.mutationCache.config.onSettled?.(\n          undefined,\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  private dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'loading':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n  }\n}\n", "import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  config: MutationCacheConfig\n\n  private mutations: Mutation<any, any, any, any>[]\n  private mutationId: number\n  private resuming: Promise<unknown> | undefined\n\n  constructor(config?: MutationCacheConfig) {\n    super()\n    this.config = config || {}\n    this.mutations = []\n    this.mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey\n        ? client.getMutationDefaults(options.mutationKey)\n        : undefined,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.mutations = this.mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Mutation[] {\n    return this.mutations\n  }\n\n  find<TData = unknown, TError = unknown, TVariables = any, TContext = unknown>(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.mutations.find((mutation) => matchMutation(filters, mutation))\n  }\n\n  findAll(filters: MutationFilters): Mutation[] {\n    return this.mutations.filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.resuming = (this.resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.resuming = undefined\n      })\n\n    return this.resuming\n  }\n}\n", "import type { QueryBehavior } from './query'\n\nimport type {\n  InfiniteData,\n  QueryFunctionContext,\n  QueryOptions,\n  RefetchQueryFilters,\n} from './types'\n\nexport function infiniteQueryBehavior<\n  TQueryFnData,\n  TError,\n  TData,\n>(): QueryBehavior<TQueryFnData, TError, InfiniteData<TData>> {\n  return {\n    onFetch: (context) => {\n      context.fetchFn = () => {\n        const refetchPage: RefetchQueryFilters['refetchPage'] | undefined =\n          context.fetchOptions?.meta?.refetchPage\n        const fetchMore = context.fetchOptions?.meta?.fetchMore\n        const pageParam = fetchMore?.pageParam\n        const isFetchingNextPage = fetchMore?.direction === 'forward'\n        const isFetchingPreviousPage = fetchMore?.direction === 'backward'\n        const oldPages = context.state.data?.pages || []\n        const oldPageParams = context.state.data?.pageParams || []\n        let newPageParams = oldPageParams\n        let cancelled = false\n\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal?.aborted) {\n                cancelled = true\n              } else {\n                context.signal?.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        // Get query function\n        const queryFn =\n          context.options.queryFn ||\n          (() =>\n            Promise.reject(\n              `Missing queryFn for queryKey '${context.options.queryHash}'`,\n            ))\n\n        const buildNewPages = (\n          pages: unknown[],\n          param: unknown,\n          page: unknown,\n          previous?: boolean,\n        ) => {\n          newPageParams = previous\n            ? [param, ...newPageParams]\n            : [...newPageParams, param]\n          return previous ? [page, ...pages] : [...pages, page]\n        }\n\n        // Create function to fetch a page\n        const fetchPage = (\n          pages: unknown[],\n          manual?: boolean,\n          param?: unknown,\n          previous?: boolean,\n        ): Promise<unknown[]> => {\n          if (cancelled) {\n            return Promise.reject('Cancelled')\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages)\n          }\n\n          const queryFnContext: QueryFunctionContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const queryFnResult = queryFn(queryFnContext)\n\n          const promise = Promise.resolve(queryFnResult).then((page) =>\n            buildNewPages(pages, param, page, previous),\n          )\n\n          return promise\n        }\n\n        let promise: Promise<unknown[]>\n\n        // Fetch first page?\n        if (!oldPages.length) {\n          promise = fetchPage([])\n        }\n\n        // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getNextPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param)\n        }\n\n        // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getPreviousPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param, true)\n        }\n\n        // Refetch pages\n        else {\n          newPageParams = []\n\n          const manual = typeof context.options.getNextPageParam === 'undefined'\n\n          const shouldFetchFirstPage =\n            refetchPage && oldPages[0]\n              ? refetchPage(oldPages[0], 0, oldPages)\n              : true\n\n          // Fetch first page\n          promise = shouldFetchFirstPage\n            ? fetchPage([], manual, oldPageParams[0])\n            : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]))\n\n          // Fetch remaining pages\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then((pages) => {\n              const shouldFetchNextPage =\n                refetchPage && oldPages[i]\n                  ? refetchPage(oldPages[i], i, oldPages)\n                  : true\n\n              if (shouldFetchNextPage) {\n                const param = manual\n                  ? oldPageParams[i]\n                  : getNextPageParam(context.options, pages)\n                return fetchPage(pages, manual, param)\n              }\n              return Promise.resolve(\n                buildNewPages(pages, oldPageParams[i], oldPages[i]),\n              )\n            })\n          }\n        }\n\n        const finalPromise = promise.then((pages) => ({\n          pages,\n          pageParams: newPageParams,\n        }))\n\n        return finalPromise\n      }\n    },\n  }\n}\n\nexport function getNextPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getNextPageParam?.(pages[pages.length - 1], pages)\n}\n\nexport function getPreviousPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getPreviousPageParam?.(pages[0], pages)\n}\n\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasNextPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages)\n    return (\n      typeof nextPageParam !== 'undefined' &&\n      nextPageParam !== null &&\n      nextPageParam !== false\n    )\n  }\n  return\n}\n\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasPreviousPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages)\n    return (\n      typeof previousPageParam !== 'undefined' &&\n      previousPageParam !== null &&\n      previousPageParam !== false\n    )\n  }\n  return\n}\n", "import {\n  functionalUpdate,\n  hashQueryKey,\n  hashQueryKeyByOptions,\n  noop,\n  parseFilterArgs,\n  parseQueryArgs,\n  partialMatchKey,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport { defaultLogger } from './logger'\nimport type { CancelOptions, DefaultedQueryObserverOptions } from './types'\nimport type { Logger } from './logger'\nimport type { QueryState } from './query'\nimport type {\n  DefaultOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  QueryClientConfig,\n  QueryFunction,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  ResetQueryFilters,\n  SetDataOptions,\n  WithRequired,\n} from './types'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: QueryOptions<any, any, any>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  private queryCache: QueryCache\n  private mutationCache: MutationCache\n  private logger: Logger\n  private defaultOptions: DefaultOptions\n  private queryDefaults: QueryDefaults[]\n  private mutationDefaults: MutationDefaults[]\n  private mountCount: number\n  private unsubscribeFocus?: () => void\n  private unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.queryCache = config.queryCache || new QueryCache()\n    this.mutationCache = config.mutationCache || new MutationCache()\n    this.logger = config.logger || defaultLogger\n    this.defaultOptions = config.defaultOptions || {}\n    this.queryDefaults = []\n    this.mutationDefaults = []\n    this.mountCount = 0\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\n        `Passing a custom logger has been deprecated and will be removed in the next major version.`,\n      )\n    }\n  }\n\n  mount(): void {\n    this.mountCount++\n    if (this.mountCount !== 1) return\n\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations()\n        this.queryCache.onFocus()\n      }\n    })\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations()\n        this.queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.mountCount--\n    if (this.mountCount !== 0) return\n\n    this.unsubscribeFocus?.()\n    this.unsubscribeFocus = undefined\n\n    this.unsubscribeOnline?.()\n    this.unsubscribeOnline = undefined\n  }\n\n  isFetching(filters?: QueryFilters): number\n  isFetching(queryKey?: QueryKey, filters?: QueryFilters): number\n  isFetching(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): number {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    filters.fetchStatus = 'fetching'\n    return this.queryCache.findAll(filters).length\n  }\n\n  isMutating(filters?: MutationFilters): number {\n    return this.mutationCache.findAll({ ...filters, fetching: true }).length\n  }\n\n  getQueryData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): TQueryFnData | undefined {\n    return this.queryCache.find<TQueryFnData>(queryKey, filters)?.state.data\n  }\n\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: WithRequired<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey' | 'queryFn'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | WithRequired<\n          FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n          'queryKey'\n        >,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const cachedData = this.getQueryData<TData>(parsedOptions.queryKey!)\n\n    return cachedData\n      ? Promise.resolve(cachedData)\n      : this.fetchQuery(parsedOptions)\n  }\n\n  getQueriesData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    filters: QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return this.getQueryCache()\n      .findAll(queryKeyOrFilters)\n      .map(({ queryKey, state }) => {\n        const data = state.data as TQueryFnData | undefined\n        return [queryKey, data]\n      })\n  }\n\n  setQueryData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): TQueryFnData | undefined {\n    const query = this.queryCache.find<TQueryFnData>(queryKey)\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (typeof data === 'undefined') {\n      return undefined\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n    return this.queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    filters: QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return notifyManager.batch(() =>\n      this.getQueryCache()\n        .findAll(queryKeyOrFilters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<TQueryFnData = unknown, TError = undefined>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): QueryState<TQueryFnData, TError> | undefined {\n    return this.queryCache.find<TQueryFnData, TError>(queryKey, filters)?.state\n  }\n\n  removeQueries(filters?: QueryFilters): void\n  removeQueries(queryKey?: QueryKey, filters?: QueryFilters): void\n  removeQueries(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): void {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    const queryCache = this.queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TPageData = unknown>(\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries(\n    arg1?: QueryKey | ResetQueryFilters,\n    arg2?: ResetQueryFilters | ResetOptions,\n    arg3?: ResetOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n    const queryCache = this.queryCache\n\n    const refetchFilters: RefetchQueryFilters = {\n      type: 'active',\n      ...filters,\n    }\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  cancelQueries(filters?: QueryFilters, options?: CancelOptions): Promise<void>\n  cancelQueries(\n    queryKey?: QueryKey,\n    filters?: QueryFilters,\n    options?: CancelOptions,\n  ): Promise<void>\n  cancelQueries(\n    arg1?: QueryKey | QueryFilters,\n    arg2?: QueryFilters | CancelOptions,\n    arg3?: CancelOptions,\n  ): Promise<void> {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3)\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true\n    }\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(cancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TPageData = unknown>(\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries(\n    arg1?: QueryKey | InvalidateQueryFilters,\n    arg2?: InvalidateQueryFilters | InvalidateOptions,\n    arg3?: InvalidateOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    return notifyManager.batch(() => {\n      this.queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      const refetchFilters: RefetchQueryFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? 'active',\n      }\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  refetchQueries<TPageData = unknown>(\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries(\n    arg1?: QueryKey | RefetchQueryFilters,\n    arg2?: RefetchQueryFilters | RefetchOptions,\n    arg3?: RefetchOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) =>\n          query.fetch(undefined, {\n            ...options,\n            cancelRefetch: options?.cancelRefetch ?? true,\n            meta: { refetchPage: filters.refetchPage },\n          }),\n        ),\n    )\n\n    let promise = Promise.all(promises).then(noop)\n\n    if (!options?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(defaultedOptions.staleTime)\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    parsedOptions.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData\n    >()\n    return this.fetchQuery(parsedOptions)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    return this.mutationCache.resumePausedMutations()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.mutationCache\n  }\n\n  getLogger(): Logger {\n    return this.logger\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.defaultOptions = options\n  }\n\n  setQueryDefaults(\n    queryKey: QueryKey,\n    options: QueryObserverOptions<unknown, any, any, any>,\n  ): void {\n    const result = this.queryDefaults.find(\n      (x) => hashQueryKey(queryKey) === hashQueryKey(x.queryKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.queryDefaults.push({ queryKey, defaultOptions: options })\n    }\n  }\n\n  getQueryDefaults(\n    queryKey?: QueryKey,\n  ): QueryObserverOptions<any, any, any, any, any> | undefined {\n    if (!queryKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.queryDefaults.find((x) =>\n      partialMatchKey(queryKey, x.queryKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter((x) =>\n        partialMatchKey(queryKey, x.queryKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several query defaults match with key '${JSON.stringify(\n            queryKey,\n          )}'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  setMutationDefaults(\n    mutationKey: MutationKey,\n    options: MutationObserverOptions<any, any, any, any>,\n  ): void {\n    const result = this.mutationDefaults.find(\n      (x) => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.mutationDefaults.push({ mutationKey, defaultOptions: options })\n    }\n  }\n\n  getMutationDefaults(\n    mutationKey?: MutationKey,\n  ): MutationObserverOptions<any, any, any, any> | undefined {\n    if (!mutationKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.mutationDefaults.find((x) =>\n      partialMatchKey(mutationKey, x.mutationKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter((x) =>\n        partialMatchKey(mutationKey, x.mutationKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several mutation defaults match with key '${JSON.stringify(\n            mutationKey,\n          )}'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  defaultQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey extends QueryKey,\n  >(\n    options?:\n      | QueryObserverOptions<TQueryFnData, TError, TData, TQueryData, TQueryKey>\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options?._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options?.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options?.mutationKey),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.queryCache.clear()\n    this.mutationCache.clear()\n  }\n}\n", "import {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { focusManager } from './focusManager'\nimport { Subscribable } from './subscribable'\nimport { canFetch, isCancelledError } from './retryer'\nimport type {\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\nimport type { Action, FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { DefaultedQueryObserverOptions, RefetchPageFilters } from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\nexport interface NotifyOptions {\n  cache?: boolean\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\nexport interface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  options: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n\n  private client: QueryClient\n  private currentQuery!: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  private currentQueryInitialState!: QueryState<TQueryData, TError>\n  private currentResult!: QueryObserverResult<TData, TError>\n  private currentResultState?: QueryState<TQueryData, TError>\n  private currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  private previousQueryResult?: QueryObserverResult<TData, TError>\n  private selectError: TError | null\n  private selectFn?: (data: TQueryData) => TData\n  private selectResult?: TData\n  private staleTimeoutId?: ReturnType<typeof setTimeout>\n  private refetchIntervalId?: ReturnType<typeof setInterval>\n  private currentRefetchInterval?: number | false\n  private trackedProps!: Set<keyof QueryObserverResult>\n\n  constructor(\n    client: QueryClient,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.client = client\n    this.options = options\n    this.trackedProps = new Set()\n    this.selectError = null\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.remove = this.remove.bind(this)\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch()\n      }\n\n      this.updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.clearStaleTimeout()\n    this.clearRefetchInterval()\n    this.currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options?: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.currentQuery\n\n    this.options = this.client.defaultQueryOptions(options)\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof options?.isDataEqual !== 'undefined'\n    ) {\n      this.client\n        .getLogger()\n        .error(\n          `The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option`,\n        )\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this,\n      })\n    }\n\n    if (\n      typeof this.options.enabled !== 'undefined' &&\n      typeof this.options.enabled !== 'boolean'\n    ) {\n      throw new Error('Expected enabled to be a boolean')\n    }\n\n    // Keep previous query key if the user does not supply one\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey\n    }\n\n    this.updateQuery()\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.executeFetch()\n    }\n\n    // Update result\n    this.updateResult(notifyOptions)\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        this.options.staleTime !== prevOptions.staleTime)\n    ) {\n      this.updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        nextRefetchInterval !== this.currentRefetchInterval)\n    ) {\n      this.updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.client.getQueryCache().build(this.client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result\n      this.currentResultOptions = this.options\n      this.currentResultState = this.currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.currentQuery\n  }\n\n  remove(): void {\n    this.client.getQueryCache().remove(this.currentQuery)\n  }\n\n  refetch<TPageData>({\n    refetchPage,\n    ...options\n  }: RefetchOptions & RefetchPageFilters<TPageData> = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: { refetchPage },\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.client.defaultQueryOptions(options)\n\n    const query = this.client\n      .getQueryCache()\n      .build(this.client, defaultedOptions)\n    query.isFetchingOptimistic = true\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.currentResult\n    })\n  }\n\n  private executeFetch(\n    fetchOptions?: ObserverFetchOptions,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  private updateStaleTimeout(): void {\n    this.clearStaleTimeout()\n\n    if (\n      isServer ||\n      this.currentResult.isStale ||\n      !isValidTimeout(this.options.staleTime)\n    ) {\n      return\n    }\n\n    const time = timeUntilStale(\n      this.currentResult.dataUpdatedAt,\n      this.options.staleTime,\n    )\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  private computeRefetchInterval() {\n    return typeof this.options.refetchInterval === 'function'\n      ? this.options.refetchInterval(this.currentResult.data, this.currentQuery)\n      : this.options.refetchInterval ?? false\n  }\n\n  private updateRefetchInterval(nextInterval: number | false): void {\n    this.clearRefetchInterval()\n\n    this.currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      this.options.enabled === false ||\n      !isValidTimeout(this.currentRefetchInterval) ||\n      this.currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.executeFetch()\n      }\n    }, this.currentRefetchInterval)\n  }\n\n  private updateTimers(): void {\n    this.updateStaleTimeout()\n    this.updateRefetchInterval(this.computeRefetchInterval())\n  }\n\n  private clearStaleTimeout(): void {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId)\n      this.staleTimeoutId = undefined\n    }\n  }\n\n  private clearRefetchInterval(): void {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId)\n      this.refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.currentQuery\n    const prevOptions = this.options\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.currentResultState\n    const prevResultOptions = this.currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.currentQueryInitialState\n    const prevQueryResult = queryChange\n      ? this.currentResult\n      : this.previousQueryResult\n\n    const { state } = query\n    let { dataUpdatedAt, error, errorUpdatedAt, fetchStatus, status } = state\n    let isPreviousData = false\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode)\n          ? 'fetching'\n          : 'paused'\n        if (!dataUpdatedAt) {\n          status = 'loading'\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle'\n      }\n    }\n\n    // Keep previous data if needed\n    if (\n      options.keepPreviousData &&\n      !state.dataUpdatedAt &&\n      prevQueryResult?.isSuccess &&\n      status !== 'error'\n    ) {\n      data = prevQueryResult.data\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt\n      status = prevQueryResult.status\n      isPreviousData = true\n    }\n    // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (\n        prevResult &&\n        state.data === prevResultState?.data &&\n        options.select === this.selectFn\n      ) {\n        data = this.selectResult\n      } else {\n        try {\n          this.selectFn = options.select\n          data = options.select(state.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.selectResult = data\n          this.selectError = null\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError)\n          }\n          this.selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = state.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      typeof options.placeholderData !== 'undefined' &&\n      typeof data === 'undefined' &&\n      status === 'loading'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (options.placeholderData as PlaceholderDataFunction<TQueryData>)()\n            : options.placeholderData\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.selectError = null\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError)\n            }\n            this.selectError = selectError as TError\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success'\n        data = replaceData(prevResult?.data, placeholderData, options) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError as any\n      data = this.selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = fetchStatus === 'fetching'\n    const isLoading = status === 'loading'\n    const isError = status === 'error'\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        state.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove,\n    }\n\n    return result as QueryObserverResult<TData, TError>\n  }\n\n  updateResult(notifyOptions?: NotifyOptions): void {\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.currentQuery, this.options)\n    this.currentResultState = this.currentQuery.state\n    this.currentResultOptions = this.options\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.currentResult = nextResult\n\n    // Determine which callbacks to trigger\n    const defaultNotifyOptions: NotifyOptions = { cache: true }\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.trackedProps,\n      )\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey]\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true\n    }\n\n    this.notify({ ...defaultNotifyOptions, ...notifyOptions })\n  }\n\n  private updateQuery(): void {\n    const query = this.client.getQueryCache().build(this.client, this.options)\n\n    if (query === this.currentQuery) {\n      return\n    }\n\n    const prevQuery = this.currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.currentQuery = query\n    this.currentQueryInitialState = query.state\n    this.previousQueryResult = this.currentResult\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(action: Action<TData, TError>): void {\n    const notifyOptions: NotifyOptions = {}\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true\n    }\n\n    this.updateResult(notifyOptions)\n\n    if (this.hasListeners()) {\n      this.updateTimers()\n    }\n  }\n\n  private notify(notifyOptions: NotifyOptions): void {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        this.options.onSuccess?.(this.currentResult.data!)\n        this.options.onSettled?.(this.currentResult.data!, null)\n      } else if (notifyOptions.onError) {\n        this.options.onError?.(this.currentResult.error!)\n        this.options.onSettled?.(undefined, this.currentResult.error!)\n      }\n\n      // Then trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated',\n        })\n      }\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    !query.state.dataUpdatedAt &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.dataUpdatedAt > 0 &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: typeof options['refetchOnMount'] &\n    typeof options['refetchOnWindowFocus'] &\n    typeof options['refetchOnReconnect'],\n) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    (query !== prevQuery || prevOptions.enabled === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return query.isStaleByTime(options.staleTime)\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false\n  }\n\n  // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData\n  }\n\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n", "import { difference, replaceAt } from './utils'\nimport { notifyManager } from './notifyManager'\nimport { QueryObserver } from './queryObserver'\nimport { Subscribable } from './subscribable'\nimport type {\n  DefaultedQueryObserverOptions,\n  QueryObserverOptions,\n  QueryObserverResult,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions } from './queryObserver'\n\ntype QueriesObserverListener = (result: QueryObserverResult[]) => void\n\nexport class QueriesObserver extends Subscribable<QueriesObserverListener> {\n  private client: QueryClient\n  private result: QueryObserverResult[]\n  private queries: QueryObserverOptions[]\n  private observers: QueryObserver[]\n  private observersMap: Record<string, QueryObserver>\n\n  constructor(client: QueryClient, queries?: QueryObserverOptions[]) {\n    super()\n\n    this.client = client\n    this.queries = []\n    this.result = []\n    this.observers = []\n    this.observersMap = {}\n\n    if (queries) {\n      this.setQueries(queries)\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.size) {\n      this.destroy()\n    }\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.observers.forEach((observer) => {\n      observer.destroy()\n    })\n  }\n\n  setQueries(\n    queries: QueryObserverOptions[],\n    notifyOptions?: NotifyOptions,\n  ): void {\n    this.queries = queries\n\n    notifyManager.batch(() => {\n      const prevObservers = this.observers\n\n      const newObserverMatches = this.findMatchingObservers(this.queries)\n\n      // set options for the new observers to notify of changes\n      newObserverMatches.forEach((match) =>\n        match.observer.setOptions(match.defaultedQueryOptions, notifyOptions),\n      )\n\n      const newObservers = newObserverMatches.map((match) => match.observer)\n      const newObserversMap = Object.fromEntries(\n        newObservers.map((observer) => [observer.options.queryHash, observer]),\n      )\n      const newResult = newObservers.map((observer) =>\n        observer.getCurrentResult(),\n      )\n\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index],\n      )\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return\n      }\n\n      this.observers = newObservers\n      this.observersMap = newObserversMap\n      this.result = newResult\n\n      if (!this.hasListeners()) {\n        return\n      }\n\n      difference(prevObservers, newObservers).forEach((observer) => {\n        observer.destroy()\n      })\n\n      difference(newObservers, prevObservers).forEach((observer) => {\n        observer.subscribe((result) => {\n          this.onUpdate(observer, result)\n        })\n      })\n\n      this.notify()\n    })\n  }\n\n  getCurrentResult(): QueryObserverResult[] {\n    return this.result\n  }\n\n  getQueries() {\n    return this.observers.map((observer) => observer.getCurrentQuery())\n  }\n\n  getObservers() {\n    return this.observers\n  }\n\n  getOptimisticResult(queries: QueryObserverOptions[]): QueryObserverResult[] {\n    return this.findMatchingObservers(queries).map((match) =>\n      match.observer.getOptimisticResult(match.defaultedQueryOptions),\n    )\n  }\n\n  private findMatchingObservers(\n    queries: QueryObserverOptions[],\n  ): QueryObserverMatch[] {\n    const prevObservers = this.observers\n    const prevObserversMap = new Map(\n      prevObservers.map((observer) => [observer.options.queryHash, observer]),\n    )\n\n    const defaultedQueryOptions = queries.map((options) =>\n      this.client.defaultQueryOptions(options),\n    )\n\n    const matchingObservers: QueryObserverMatch[] =\n      defaultedQueryOptions.flatMap((defaultedOptions) => {\n        const match = prevObserversMap.get(defaultedOptions.queryHash)\n        if (match != null) {\n          return [{ defaultedQueryOptions: defaultedOptions, observer: match }]\n        }\n        return []\n      })\n\n    const matchedQueryHashes = new Set(\n      matchingObservers.map((match) => match.defaultedQueryOptions.queryHash),\n    )\n    const unmatchedQueries = defaultedQueryOptions.filter(\n      (defaultedOptions) => !matchedQueryHashes.has(defaultedOptions.queryHash),\n    )\n\n    const matchingObserversSet = new Set(\n      matchingObservers.map((match) => match.observer),\n    )\n    const unmatchedObservers = prevObservers.filter(\n      (prevObserver) => !matchingObserversSet.has(prevObserver),\n    )\n\n    const getObserver = (options: QueryObserverOptions): QueryObserver => {\n      const defaultedOptions = this.client.defaultQueryOptions(options)\n      const currentObserver = this.observersMap[defaultedOptions.queryHash!]\n      return currentObserver ?? new QueryObserver(this.client, defaultedOptions)\n    }\n\n    const newOrReusedObservers: QueryObserverMatch[] = unmatchedQueries.map(\n      (options, index) => {\n        if (options.keepPreviousData) {\n          // return previous data from one of the observers that no longer match\n          const previouslyUsedObserver = unmatchedObservers[index]\n          if (previouslyUsedObserver !== undefined) {\n            return {\n              defaultedQueryOptions: options,\n              observer: previouslyUsedObserver,\n            }\n          }\n        }\n        return {\n          defaultedQueryOptions: options,\n          observer: getObserver(options),\n        }\n      },\n    )\n\n    const sortMatchesByOrderOfQueries = (\n      a: QueryObserverMatch,\n      b: QueryObserverMatch,\n    ): number =>\n      defaultedQueryOptions.indexOf(a.defaultedQueryOptions) -\n      defaultedQueryOptions.indexOf(b.defaultedQueryOptions)\n\n    return matchingObservers\n      .concat(newOrReusedObservers)\n      .sort(sortMatchesByOrderOfQueries)\n  }\n\n  private onUpdate(observer: QueryObserver, result: QueryObserverResult): void {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result)\n      this.notify()\n    }\n  }\n\n  private notify(): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(this.result)\n      })\n    })\n  }\n}\n\ntype QueryObserverMatch = {\n  defaultedQueryOptions: DefaultedQueryObserverOptions\n  observer: QueryObserver\n}\n", "import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n", "import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n", "import type { QueryClient } from './queryClient'\nimport type { Query, QueryState } from './query'\nimport type {\n  MutationKey,\n  MutationOptions,\n  QueryKey,\n  QueryOptions,\n} from './types'\nimport type { Mutation, MutationState } from './mutation'\n\n// TYPES\n\nexport interface DehydrateOptions {\n  dehydrateMutations?: boolean\n  dehydrateQueries?: boolean\n  shouldDehydrateMutation?: ShouldDehydrateMutationFunction\n  shouldDehydrateQuery?: ShouldDehydrateQueryFunction\n}\n\nexport interface HydrateOptions {\n  defaultOptions?: {\n    queries?: QueryOptions\n    mutations?: MutationOptions\n  }\n}\n\ninterface DehydratedMutation {\n  mutationKey?: MutationKey\n  state: MutationState\n}\n\ninterface DehydratedQuery {\n  queryHash: string\n  queryKey: QueryKey\n  state: QueryState\n}\n\nexport interface DehydratedState {\n  mutations: DehydratedMutation[]\n  queries: DehydratedQuery[]\n}\n\nexport type ShouldDehydrateQueryFunction = (query: Query) => boolean\n\nexport type ShouldDehydrateMutationFunction = (mutation: Mutation) => boolean\n\n// FUNCTIONS\n\nfunction dehydrateMutation(mutation: Mutation): DehydratedMutation {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state,\n  }\n}\n\n// Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\nfunction dehydrateQuery(query: Query): DehydratedQuery {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash,\n  }\n}\n\nexport function defaultShouldDehydrateMutation(mutation: Mutation) {\n  return mutation.state.isPaused\n}\n\nexport function defaultShouldDehydrateQuery(query: Query) {\n  return query.state.status === 'success'\n}\n\nexport function dehydrate(\n  client: QueryClient,\n  options: DehydrateOptions = {},\n): DehydratedState {\n  const mutations: DehydratedMutation[] = []\n  const queries: DehydratedQuery[] = []\n\n  if (options.dehydrateMutations !== false) {\n    const shouldDehydrateMutation =\n      options.shouldDehydrateMutation || defaultShouldDehydrateMutation\n\n    client\n      .getMutationCache()\n      .getAll()\n      .forEach((mutation) => {\n        if (shouldDehydrateMutation(mutation)) {\n          mutations.push(dehydrateMutation(mutation))\n        }\n      })\n  }\n\n  if (options.dehydrateQueries !== false) {\n    const shouldDehydrateQuery =\n      options.shouldDehydrateQuery || defaultShouldDehydrateQuery\n\n    client\n      .getQueryCache()\n      .getAll()\n      .forEach((query) => {\n        if (shouldDehydrateQuery(query)) {\n          queries.push(dehydrateQuery(query))\n        }\n      })\n  }\n\n  return { mutations, queries }\n}\n\nexport function hydrate(\n  client: QueryClient,\n  dehydratedState: unknown,\n  options?: HydrateOptions,\n): void {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return\n  }\n\n  const mutationCache = client.getMutationCache()\n  const queryCache = client.getQueryCache()\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  const mutations = (dehydratedState as DehydratedState).mutations || []\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  const queries = (dehydratedState as DehydratedState).queries || []\n\n  mutations.forEach((dehydratedMutation) => {\n    mutationCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.mutations,\n        mutationKey: dehydratedMutation.mutationKey,\n      },\n      dehydratedMutation.state,\n    )\n  })\n\n  queries.forEach((dehydratedQuery) => {\n    const query = queryCache.get(dehydratedQuery.queryHash)\n\n    // Reset fetch status to idle in the dehydrated state to avoid\n    // query being stuck in fetching state upon hydration\n    const dehydratedQueryState = {\n      ...dehydratedQuery.state,\n      fetchStatus: 'idle' as const,\n    }\n\n    // Do not hydrate if an existing query exists with newer data\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQueryState.dataUpdatedAt) {\n        query.setState(dehydratedQueryState)\n      }\n      return\n    }\n\n    // Restore query\n    queryCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.queries,\n        queryKey: dehydratedQuery.queryKey,\n        queryHash: dehydratedQuery.queryHash,\n      },\n      dehydratedQueryState,\n    )\n  })\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar retryer = require('./retryer.js');\nvar queryCache = require('./queryCache.js');\nvar queryClient = require('./queryClient.js');\nvar queryObserver = require('./queryObserver.js');\nvar queriesObserver = require('./queriesObserver.js');\nvar infiniteQueryObserver = require('./infiniteQueryObserver.js');\nvar mutationCache = require('./mutationCache.js');\nvar mutationObserver = require('./mutationObserver.js');\nvar notifyManager = require('./notifyManager.js');\nvar focusManager = require('./focusManager.js');\nvar onlineManager = require('./onlineManager.js');\nvar utils = require('./utils.js');\nvar hydration = require('./hydration.js');\nvar query = require('./query.js');\n\n\n\nexports.CancelledError = retryer.CancelledError;\nexports.isCancelledError = retryer.isCancelledError;\nexports.QueryCache = queryCache.QueryCache;\nexports.QueryClient = queryClient.QueryClient;\nexports.QueryObserver = queryObserver.QueryObserver;\nexports.QueriesObserver = queriesObserver.QueriesObserver;\nexports.InfiniteQueryObserver = infiniteQueryObserver.InfiniteQueryObserver;\nexports.MutationCache = mutationCache.MutationCache;\nexports.MutationObserver = mutationObserver.MutationObserver;\nexports.notifyManager = notifyManager.notifyManager;\nexports.focusManager = focusManager.focusManager;\nexports.onlineManager = onlineManager.onlineManager;\nexports.hashQueryKey = utils.hashQueryKey;\nexports.isError = utils.isError;\nexports.isServer = utils.isServer;\nexports.matchQuery = utils.matchQuery;\nexports.parseFilterArgs = utils.parseFilterArgs;\nexports.parseMutationArgs = utils.parseMutationArgs;\nexports.parseMutationFilterArgs = utils.parseMutationFilterArgs;\nexports.parseQueryArgs = utils.parseQueryArgs;\nexports.replaceEqualDeep = utils.replaceEqualDeep;\nexports.defaultShouldDehydrateMutation = hydration.defaultShouldDehydrateMutation;\nexports.defaultShouldDehydrateQuery = hydration.defaultShouldDehydrateQuery;\nexports.dehydrate = hydration.dehydrate;\nexports.hydrate = hydration.hydrate;\nexports.Query = query.Query;\n//# sourceMappingURL=index.js.map\n", "'use client'\nimport * as ReactDOM from 'react-dom'\n\nexport const unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates\n", "import { notifyManager } from '@tanstack/query-core'\nimport { unstable_batchedUpdates } from './reactBatchedUpdates'\n\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates)\n", "'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n", "'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ndeclare global {\n  interface Window {\n    ReactQueryClientContext?: React.Context<QueryClient | undefined>\n  }\n}\n\nexport const defaultContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\nconst QueryClientSharingContext = React.createContext<boolean>(false)\n\n// If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\nfunction getQueryClientContext(\n  context: React.Context<QueryClient | undefined> | undefined,\n  contextSharing: boolean,\n) {\n  if (context) {\n    return context\n  }\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext\n    }\n\n    return window.ReactQueryClientContext\n  }\n\n  return defaultContext\n}\n\nexport const useQueryClient = ({ context }: ContextOptions = {}) => {\n  const queryClient = React.useContext(\n    getQueryClientContext(context, React.useContext(QueryClientSharingContext)),\n  )\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\ntype QueryClientProviderPropsBase = {\n  client: QueryClient\n  children?: React.ReactNode\n}\ntype QueryClientProviderPropsWithContext = ContextOptions & {\n  contextSharing?: never\n} & QueryClientProviderPropsBase\ntype QueryClientProviderPropsWithContextSharing = {\n  context?: never\n  contextSharing?: boolean\n} & QueryClientProviderPropsBase\n\nexport type QueryClientProviderProps =\n  | QueryClientProviderPropsWithContext\n  | QueryClientProviderPropsWithContextSharing\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client\n      .getLogger()\n      .error(\n        `The contextSharing option has been deprecated and will be removed in the next major version`,\n      )\n  }\n\n  const Context = getQueryClientContext(context, contextSharing)\n\n  return (\n    <QueryClientSharingContext.Provider value={!context && contextSharing}>\n      <Context.Provider value={client}>{children}</Context.Provider>\n    </QueryClientSharingContext.Provider>\n  )\n}\n", "'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n", "'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n", "export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n", "'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  UseErrorBoundary,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  useErrorBoundary: UseErrorBoundary<\n    TQueryFnData,\n    TError,\n    TQueryData,\n    TQueryKey\n  >\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    shouldThrowError(useErrorBoundary, [result.error, query])\n  )\n}\n", "import type { DefaultedQueryObserverOptions } from '@tanstack/query-core'\nimport type { QueryObserver } from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\nimport type { QueryObserverResult } from '@tanstack/query-core'\nimport type { QueryKey } from '@tanstack/query-core'\n\nexport const ensureStaleTime = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => defaultedOptions?.suspense && willFetch(result, isRestoring)\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer\n    .fetchOptimistic(defaultedOptions)\n    .then(({ data }) => {\n      defaultedOptions.onSuccess?.(data as TData)\n      defaultedOptions.onSettled?.(data, null)\n    })\n    .catch((error) => {\n      errorResetBoundary.clearReset()\n      defaultedOptions.onError?.(error)\n      defaultedOptions.onSettled?.(undefined, error)\n    })\n", "'use client'\nimport * as React from 'react'\n\nimport { QueriesObserver, notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport {\n  ensureStaleTime,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type { UseQueryOptions, UseQueryResult } from './types'\n\n// This defines the `UseQueryOptions` that are accepted in `QueriesOptions` & `GetOptions`.\n// - `context` is omitted as it is passed as a root-level option to `useQueries` instead.\ntype UseQueryOptionsForUseQueries<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = Omit<UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>, 'context'>\n\n// Avoid TS depth-limit error in case of large array literal\ntype MAXIMUM_DEPTH = 20\n\ntype GetOptions<T> =\n  // Part 1: responsible for applying explicit type parameter to function arguments, if object { queryFnData: TQueryFnData, error: TError, data: TData }\n  T extends {\n    queryFnData: infer TQueryFnData\n    error?: infer TError\n    data: infer TData\n  }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryOptionsForUseQueries<unknown, TError, TData>\n    : // Part 2: responsible for applying explicit type parameter to function arguments, if tuple [TQueryFnData, TError, TData]\n    T extends [infer TQueryFnData, infer TError, infer TData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryOptionsForUseQueries<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryOptionsForUseQueries<TQueryFnData>\n    : // Part 3: responsible for inferring and enforcing type if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryOptionsForUseQueries<TQueryFnData, unknown, TData, TQueryKey>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, infer TQueryKey> }\n    ? UseQueryOptionsForUseQueries<\n        TQueryFnData,\n        unknown,\n        TQueryFnData,\n        TQueryKey\n      >\n    : // Fallback\n      UseQueryOptionsForUseQueries\n\ntype GetResults<T> =\n  // Part 1: responsible for mapping explicit type parameter to function result, if object\n  T extends { queryFnData: any; error?: infer TError; data: infer TData }\n    ? UseQueryResult<TData, TError>\n    : T extends { queryFnData: infer TQueryFnData; error?: infer TError }\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends { data: infer TData; error?: infer TError }\n    ? UseQueryResult<TData, TError>\n    : // Part 2: responsible for mapping explicit type parameter to function result, if tuple\n    T extends [any, infer TError, infer TData]\n    ? UseQueryResult<TData, TError>\n    : T extends [infer TQueryFnData, infer TError]\n    ? UseQueryResult<TQueryFnData, TError>\n    : T extends [infer TQueryFnData]\n    ? UseQueryResult<TQueryFnData>\n    : // Part 3: responsible for mapping inferred type to results, if no explicit parameter was provided\n    T extends {\n        queryFn?: QueryFunction<unknown, any>\n        select: (data: any) => infer TData\n      }\n    ? UseQueryResult<TData>\n    : T extends { queryFn?: QueryFunction<infer TQueryFnData, any> }\n    ? UseQueryResult<TQueryFnData>\n    : // Fallback\n      UseQueryResult\n\n/**\n * QueriesOptions reducer recursively unwraps function arguments to infer/enforce type param\n */\nexport type QueriesOptions<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryOptionsForUseQueries[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetOptions<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesOptions<[...Tail], [...Result, GetOptions<Head>], [...Depth, 1]>\n  : unknown[] extends T\n  ? T\n  : // If T is *some* array but we couldn't assign unknown[] to it, then it must hold some known/homogenous type!\n  // use this to infer the param types in the case of Array.map() argument\n  T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      infer TQueryKey\n    >[]\n  ? UseQueryOptionsForUseQueries<TQueryFnData, TError, TData, TQueryKey>[]\n  : // Fallback\n    UseQueryOptionsForUseQueries[]\n\n/**\n * QueriesResults reducer recursively maps type param to results\n */\nexport type QueriesResults<\n  T extends any[],\n  Result extends any[] = [],\n  Depth extends ReadonlyArray<number> = [],\n> = Depth['length'] extends MAXIMUM_DEPTH\n  ? UseQueryResult[]\n  : T extends []\n  ? []\n  : T extends [infer Head]\n  ? [...Result, GetResults<Head>]\n  : T extends [infer Head, ...infer Tail]\n  ? QueriesResults<[...Tail], [...Result, GetResults<Head>], [...Depth, 1]>\n  : T extends UseQueryOptionsForUseQueries<\n      infer TQueryFnData,\n      infer TError,\n      infer TData,\n      any\n    >[]\n  ? // Dynamic-size (homogenous) UseQueryOptions array: map directly to array of results\n    UseQueryResult<unknown extends TData ? TQueryFnData : TData, TError>[]\n  : // Fallback\n    UseQueryResult[]\n\nexport function useQueries<T extends any[]>({\n  queries,\n  context,\n}: {\n  queries: readonly [...QueriesOptions<T>]\n  context?: UseQueryOptions['context']\n}): QueriesResults<T> {\n  const queryClient = useQueryClient({ context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n\n  const defaultedQueries = React.useMemo(\n    () =>\n      queries.map((options) => {\n        const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n        // Make sure the results are already in fetching state before subscribing or updating options\n        defaultedOptions._optimisticResults = isRestoring\n          ? 'isRestoring'\n          : 'optimistic'\n\n        return defaultedOptions\n      }),\n    [queries, queryClient, isRestoring],\n  )\n\n  defaultedQueries.forEach((query) => {\n    ensureStaleTime(query)\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary)\n  })\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () => new QueriesObserver(queryClient, defaultedQueries),\n  )\n\n  const optimisticResult = observer.getOptimisticResult(defaultedQueries)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setQueries(defaultedQueries, { listeners: false })\n  }, [defaultedQueries, observer])\n\n  const shouldAtLeastOneSuspend = optimisticResult.some((result, index) =>\n    shouldSuspend(defaultedQueries[index], result, isRestoring),\n  )\n\n  const suspensePromises = shouldAtLeastOneSuspend\n    ? optimisticResult.flatMap((result, index) => {\n        const options = defaultedQueries[index]\n        const queryObserver = observer.getObservers()[index]\n\n        if (options && queryObserver) {\n          if (shouldSuspend(options, result, isRestoring)) {\n            return fetchOptimistic(options, queryObserver, errorResetBoundary)\n          } else if (willFetch(result, isRestoring)) {\n            void fetchOptimistic(options, queryObserver, errorResetBoundary)\n          }\n        }\n        return []\n      })\n    : []\n\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises)\n  }\n  const observerQueries = observer.getQueries()\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) =>\n      getHasError({\n        result,\n        errorResetBoundary,\n        useErrorBoundary: defaultedQueries[index]?.useErrorBoundary ?? false,\n        query: observerQueries[index]!,\n      }),\n  )\n\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error\n  }\n\n  return optimisticResult as QueriesResults<T>\n}\n", "'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n", "'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n", "'use client'\nimport * as React from 'react'\n\nimport { hydrate } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type { HydrateOptions } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\nexport function useHydrate(\n  state: unknown,\n  options: HydrateOptions & ContextOptions = {},\n) {\n  const queryClient = useQueryClient({ context: options.context })\n\n  const optionsRef = React.useRef(options)\n  optionsRef.current = options\n\n  // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n  React.useMemo(() => {\n    if (state) {\n      hydrate(queryClient, state, optionsRef.current)\n    }\n  }, [queryClient, state])\n}\n\nexport interface HydrateProps {\n  state?: unknown\n  options?: HydrateOptions\n  children?: React.ReactNode\n}\n\nexport const Hydrate = ({ children, options, state }: HydrateProps) => {\n  useHydrate(state, options)\n  return children as React.ReactElement\n}\n", "'use client'\nimport * as React from 'react'\nimport { notifyManager, parseFilterArgs } from '@tanstack/query-core'\n\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport type { ContextOptions } from './types'\nimport type { QueryFilters, QueryKey } from '@tanstack/query-core'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsFetching(filters?: QueryFilters, options?: Options): number\nexport function useIsFetching(\n  queryKey?: QueryKey,\n  filters?: QueryFilters,\n  options?: Options,\n): number\nexport function useIsFetching(\n  arg1?: QueryKey | QueryFilters,\n  arg2?: QueryFilters | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseFilterArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n  const queryCache = queryClient.getQueryCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        queryCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [queryCache],\n    ),\n    () => queryClient.isFetching(filters),\n    () => queryClient.isFetching(filters),\n  )\n}\n", "'use client'\nimport * as React from 'react'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport type { MutationFilters, MutationKey } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n", "'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n", "'use client'\nimport { InfiniteQueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  QueryFunction,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types'\n\n// HOOK\n\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey' | 'queryFn'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1:\n    | TQueryKey\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg3?: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError> {\n  const options = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n  ) as UseInfiniteQueryResult<TData, TError>\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./setBatchUpdatesFn.js');\nvar queryCore = require('@tanstack/query-core');\nvar useQueries = require('./useQueries.js');\nvar useQuery = require('./useQuery.js');\nvar QueryClientProvider = require('./QueryClientProvider.js');\nvar Hydrate = require('./Hydrate.js');\nvar QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');\nvar useIsFetching = require('./useIsFetching.js');\nvar useIsMutating = require('./useIsMutating.js');\nvar useMutation = require('./useMutation.js');\nvar useInfiniteQuery = require('./useInfiniteQuery.js');\nvar isRestoring = require('./isRestoring.js');\n\n\n\nexports.useQueries = useQueries.useQueries;\nexports.useQuery = useQuery.useQuery;\nexports.QueryClientProvider = QueryClientProvider.QueryClientProvider;\nexports.defaultContext = QueryClientProvider.defaultContext;\nexports.useQueryClient = QueryClientProvider.useQueryClient;\nexports.Hydrate = Hydrate.Hydrate;\nexports.useHydrate = Hydrate.useHydrate;\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;\nexports.useIsFetching = useIsFetching.useIsFetching;\nexports.useIsMutating = useIsMutating.useIsMutating;\nexports.useMutation = useMutation.useMutation;\nexports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;\nexports.IsRestoringProvider = isRestoring.IsRestoringProvider;\nexports.useIsRestoring = isRestoring.useIsRestoring;\nObject.keys(queryCore).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function () { return queryCore[k]; }\n  });\n});\n//# sourceMappingURL=index.js.map\n", "import { dehydrate, hydrate } from '@tanstack/query-core'\nimport type {\n  DehydrateOptions,\n  DehydratedState,\n  HydrateOptions,\n  QueryClient,\n} from '@tanstack/query-core'\nimport type { NotifyEventType } from '@tanstack/query-core'\n\nexport type Promisable<T> = T | PromiseLike<T>\n\nexport interface Persister {\n  persistClient(persistClient: PersistedClient): Promisable<void>\n  restoreClient(): Promisable<PersistedClient | undefined>\n  removeClient(): Promisable<void>\n}\n\nexport interface PersistedClient {\n  timestamp: number\n  buster: string\n  clientState: DehydratedState\n}\n\nexport interface PersistQueryClienRootOptions {\n  /** The QueryClient to persist */\n  queryClient: QueryClient\n  /** The Persister interface for storing and restoring the cache\n   * to/from a persisted location */\n  persister: Persister\n  /** A unique string that can be used to forcefully\n   * invalidate existing caches if they do not share the same buster string */\n  buster?: string\n}\n\nexport interface PersistedQueryClientRestoreOptions\n  extends PersistQueryClienRootOptions {\n  /** The max-allowed age of the cache in milliseconds.\n   * If a persisted cache is found that is older than this\n   * time, it will be discarded */\n  maxAge?: number\n  /** The options passed to the hydrate function */\n  hydrateOptions?: HydrateOptions\n}\n\nexport interface PersistedQueryClientSaveOptions\n  extends PersistQueryClienRootOptions {\n  /** The options passed to the dehydrate function */\n  dehydrateOptions?: DehydrateOptions\n}\n\nexport interface PersistQueryClientOptions\n  extends PersistedQueryClientRestoreOptions,\n    PersistedQueryClientSaveOptions,\n    PersistQueryClienRootOptions {}\n\n/**\n * Checks if emitted event is about cache change and not about observers.\n * Useful for persist, where we only want to trigger save when cache is changed.\n */\nconst cacheableEventTypes: Array<NotifyEventType> = [\n  'added',\n  'removed',\n  'updated',\n]\n\nfunction isCacheableEventType(eventType: NotifyEventType) {\n  return cacheableEventTypes.includes(eventType)\n}\n\n/**\n * Restores persisted data to the QueryCache\n *  - data obtained from persister.restoreClient\n *  - data is hydrated using hydrateOptions\n * If data is expired, busted, empty, or throws, it runs persister.removeClient\n */\nexport async function persistQueryClientRestore({\n  queryClient,\n  persister,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions,\n}: PersistedQueryClientRestoreOptions) {\n  try {\n    const persistedClient = await persister.restoreClient()\n\n    if (persistedClient) {\n      if (persistedClient.timestamp) {\n        const expired = Date.now() - persistedClient.timestamp > maxAge\n        const busted = persistedClient.buster !== buster\n        if (expired || busted) {\n          persister.removeClient()\n        } else {\n          hydrate(queryClient, persistedClient.clientState, hydrateOptions)\n        }\n      } else {\n        persister.removeClient()\n      }\n    }\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      queryClient.getLogger().error(err)\n      queryClient\n        .getLogger()\n        .warn(\n          'Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.',\n        )\n    }\n    persister.removeClient()\n  }\n}\n\n/**\n * Persists data from the QueryCache\n *  - data dehydrated using dehydrateOptions\n *  - data is persisted using persister.persistClient\n */\nexport async function persistQueryClientSave({\n  queryClient,\n  persister,\n  buster = '',\n  dehydrateOptions,\n}: PersistedQueryClientSaveOptions) {\n  const persistClient: PersistedClient = {\n    buster,\n    timestamp: Date.now(),\n    clientState: dehydrate(queryClient, dehydrateOptions),\n  }\n\n  await persister.persistClient(persistClient)\n}\n\n/**\n * Subscribe to QueryCache and MutationCache updates (for persisting)\n * @returns an unsubscribe function (to discontinue monitoring)\n */\nexport function persistQueryClientSubscribe(\n  props: PersistedQueryClientSaveOptions,\n) {\n  const unsubscribeQueryCache = props.queryClient\n    .getQueryCache()\n    .subscribe((event) => {\n      if (isCacheableEventType(event.type)) {\n        persistQueryClientSave(props)\n      }\n    })\n\n  const unusbscribeMutationCache = props.queryClient\n    .getMutationCache()\n    .subscribe((event) => {\n      if (isCacheableEventType(event.type)) {\n        persistQueryClientSave(props)\n      }\n    })\n\n  return () => {\n    unsubscribeQueryCache()\n    unusbscribeMutationCache()\n  }\n}\n\n/**\n * Restores persisted data to QueryCache and persists further changes.\n */\nexport function persistQueryClient(\n  props: PersistQueryClientOptions,\n): [() => void, Promise<void>] {\n  let hasUnsubscribed = false\n  let persistQueryClientUnsubscribe: (() => void) | undefined\n  const unsubscribe = () => {\n    hasUnsubscribed = true\n    persistQueryClientUnsubscribe?.()\n  }\n\n  // Attempt restore\n  const restorePromise = persistQueryClientRestore(props).then(() => {\n    if (!hasUnsubscribed) {\n      // Subscribe to changes in the query cache to trigger the save\n      persistQueryClientUnsubscribe = persistQueryClientSubscribe(props)\n    }\n  })\n\n  return [unsubscribe, restorePromise]\n}\n", "import type { PersistedClient } from '@tanstack/query-persist-client-core'\n\nexport type PersistRetryer = (props: {\n  persistedClient: PersistedClient\n  error: Error\n  errorCount: number\n}) => PersistedClient | undefined\n\nexport const removeOldestQuery: PersistRetryer = ({ persistedClient }) => {\n  const mutations = [...persistedClient.clientState.mutations]\n  const queries = [...persistedClient.clientState.queries]\n  const client: PersistedClient = {\n    ...persistedClient,\n    clientState: { mutations, queries },\n  }\n\n  // sort queries by dataUpdatedAt (oldest first)\n  const sortedQueries = [...queries].sort(\n    (a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt,\n  )\n\n  // clean oldest query\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift()\n    client.clientState.queries = queries.filter((q) => q !== oldestData)\n    return client\n  }\n\n  return undefined\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar persist = require('./persist.js');\nvar retryStrategies = require('./retryStrategies.js');\n\n\n\nexports.persistQueryClient = persist.persistQueryClient;\nexports.persistQueryClientRestore = persist.persistQueryClientRestore;\nexports.persistQueryClientSave = persist.persistQueryClientSave;\nexports.persistQueryClientSubscribe = persist.persistQueryClientSubscribe;\nexports.removeOldestQuery = retryStrategies.removeOldestQuery;\n//# sourceMappingURL=index.js.map\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexports[\"extends\"] = _extends;\n//# sourceMappingURL=_rollupPluginBabelHelpers.js.map\n", "'use client'\nimport * as React from 'react'\n\nimport {\n  persistQueryClientRestore,\n  persistQueryClientSubscribe,\n} from '@tanstack/query-persist-client-core'\nimport { IsRestoringProvider, QueryClientProvider } from '@tanstack/react-query'\nimport type { PersistQueryClientOptions } from '@tanstack/query-persist-client-core'\nimport type { QueryClientProviderProps } from '@tanstack/react-query'\n\nexport type PersistQueryClientProviderProps = QueryClientProviderProps & {\n  persistOptions: Omit<PersistQueryClientOptions, 'queryClient'>\n  onSuccess?: () => void\n}\n\nexport const PersistQueryClientProvider = ({\n  client,\n  children,\n  persistOptions,\n  onSuccess,\n  ...props\n}: PersistQueryClientProviderProps): JSX.Element => {\n  const [isRestoring, setIsRestoring] = React.useState(true)\n  const refs = React.useRef({ persistOptions, onSuccess })\n  const didRestore = React.useRef(false)\n\n  React.useEffect(() => {\n    refs.current = { persistOptions, onSuccess }\n  })\n\n  React.useEffect(() => {\n    const options = {\n      ...refs.current.persistOptions,\n      queryClient: client,\n    }\n    if (!didRestore.current) {\n      didRestore.current = true\n      setIsRestoring(true)\n      persistQueryClientRestore(options).then(async () => {\n        try {\n          await refs.current.onSuccess?.()\n        } finally {\n          setIsRestoring(false)\n        }\n      })\n    }\n    return isRestoring ? undefined : persistQueryClientSubscribe(options)\n  }, [client, isRestoring])\n\n  return (\n    <QueryClientProvider client={client} {...props}>\n      <IsRestoringProvider value={isRestoring}>{children}</IsRestoringProvider>\n    </QueryClientProvider>\n  )\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar queryPersistClientCore = require('@tanstack/query-persist-client-core');\nvar PersistQueryClientProvider = require('./PersistQueryClientProvider.js');\n\n\n\nexports.PersistQueryClientProvider = PersistQueryClientProvider.PersistQueryClientProvider;\nObject.keys(queryPersistClientCore).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return queryPersistClientCore[k]; }\n\t});\n});\n//# sourceMappingURL=index.js.map\n", "export const version = '1.10.12'\n", "import type { Address } from 'abitype'\n\nimport { version } from './version.js'\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\nexport const getVersion = () => `viem@${version}`\n", "import { getVersion } from './utils.js'\n\ntype BaseErrorParameters = {\n  docsPath?: string\n  docsSlug?: string\n  metaMessages?: string[]\n} & (\n  | {\n      cause?: never\n      details?: string\n    }\n  | {\n      cause: BaseError | Error\n      details?: never\n    }\n)\n\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n\n  override name = 'ViemError'\n  version = getVersion()\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    super()\n\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n        ? args.cause.message\n        : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n\n    this.message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath\n        ? [\n            `Docs: https://viem.sh${docsPath}.html${\n              args.docsSlug ? `#${args.docsSlug}` : ''\n            }`,\n          ]\n        : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: ${this.version}`,\n    ].join('\\n')\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(err: unknown, fn?: (err: unknown) => boolean): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n", "import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport class ChainDoesNotSupportContract extends BaseError {\n  override name = 'ChainDoesNotSupportContract'\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint\n    chain: Chain\n    contract: { name: string; blockCreated?: number }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n      },\n    )\n  }\n}\n\nexport class ChainMismatchError extends BaseError {\n  override name = 'ChainMismatchError'\n\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} \u2013 ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} \u2013 ${chain.name}`,\n        ],\n      },\n    )\n  }\n}\n\nexport class ChainNotFoundError extends BaseError {\n  override name = 'ChainNotFoundError'\n\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport class ClientChainNotConfiguredError extends BaseError {\n  override name = 'ClientChainNotConfiguredError'\n\n  constructor() {\n    super('No chain was provided to the Client.')\n  }\n}\n\nexport class InvalidChainIdError extends BaseError {\n  override name = 'InvalidChainIdError'\n\n  constructor({ chainId }: { chainId: number }) {\n    super(`Chain ID \"${chainId}\" is invalid.`)\n  }\n}\n", "import {\n  ChainDoesNotSupportContract,\n  ChainMismatchError,\n  ChainNotFoundError,\n} from '../errors/chain.js'\nimport type {\n  Chain,\n  ChainConfig,\n  ChainContract,\n  ChainFormatters,\n} from '../types/chain.js'\nimport type { Assign } from '../types/utils.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain\n  currentChainId: number\n}\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n\nexport function defineChain<\n  const chain extends Chain,\n  formatters extends ChainFormatters,\n>(\n  chain: chain,\n  config: ChainConfig<formatters> = {},\n): Assign<chain, ChainConfig<formatters>> {\n  const {\n    fees = chain.fees,\n    formatters = chain.formatters,\n    serializers = chain.serializers,\n  } = config\n  return {\n    ...chain,\n    fees,\n    formatters,\n    serializers,\n  } as unknown as Assign<chain, ChainConfig<formatters>>\n}\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const arbitrum = /*#__PURE__*/ defineChain({\n  id: 42_161,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://arb-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://arb-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://arbitrum-mainnet.infura.io/v3'],\n      webSocket: ['wss://arbitrum-mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n    public: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Arbiscan', url: 'https://arbiscan.io' },\n    default: { name: 'Arbiscan', url: 'https://arbiscan.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7654707,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const arbitrumGoerli = /*#__PURE__*/ defineChain({\n  id: 421_613,\n  name: 'Arbitrum Goerli',\n  network: 'arbitrum-goerli',\n  nativeCurrency: {\n    name: 'Arbitrum Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18,\n  },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://arb-goerli.g.alchemy.com/v2'],\n      webSocket: ['wss://arb-goerli.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://arbitrum-goerli.infura.io/v3'],\n      webSocket: ['wss://arbitrum-goerli.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://goerli-rollup.arbitrum.io/rpc'],\n    },\n    public: {\n      http: ['https://goerli-rollup.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Arbiscan', url: 'https://goerli.arbiscan.io/' },\n    default: { name: 'Arbiscan', url: 'https://goerli.arbiscan.io/' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 88114,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const arbitrumNova = /*#__PURE__*/ defineChain({\n  id: 42_170,\n  name: 'Arbitrum Nova',\n  network: 'arbitrum-nova',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    blast: {\n      http: ['https://arbitrum-nova.public.blastapi.io'],\n      webSocket: ['wss://arbitrum-nova.public.blastapi.io'],\n    },\n    default: {\n      http: ['https://nova.arbitrum.io/rpc'],\n    },\n    public: {\n      http: ['https://nova.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Arbiscan', url: 'https://nova.arbiscan.io' },\n    blockScout: {\n      name: 'BlockScout',\n      url: 'https://nova-explorer.arbitrum.io/',\n    },\n    default: { name: 'Arbiscan', url: 'https://nova.arbiscan.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1746963,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const aurora = /*#__PURE__*/ defineChain({\n  id: 1313161554,\n  name: 'Aurora',\n  network: 'aurora',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    infura: { http: ['https://aurora-mainnet.infura.io/v3'] },\n    default: { http: ['https://mainnet.aurora.dev'] },\n    public: { http: ['https://mainnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Aurorascan', url: 'https://aurorascan.dev' },\n    default: { name: 'Aurorascan', url: 'https://aurorascan.dev' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const auroraTestnet = /*#__PURE__*/ defineChain({\n  id: 1313161555,\n  name: 'Aurora Testnet',\n  network: 'aurora-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    infura: { http: ['https://aurora-testnet.infura.io/v3'] },\n    default: { http: ['https://testnet.aurora.dev'] },\n    public: { http: ['https://testnet.aurora.dev'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Aurorascan', url: 'https://testnet.aurorascan.dev' },\n    default: { name: 'Aurorascan', url: 'https://testnet.aurorascan.dev' },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const avalanche = /*#__PURE__*/ defineChain({\n  id: 43_114,\n  name: 'Avalanche',\n  network: 'avalanche',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n    public: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'SnowTrace', url: 'https://snowtrace.io' },\n    default: { name: 'SnowTrace', url: 'https://snowtrace.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 11907934,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const avalancheFuji = /*#__PURE__*/ defineChain({\n  id: 43_113,\n  name: 'Avalanche Fuji',\n  network: 'avalanche-fuji',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche Fuji',\n    symbol: 'AVAX',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.avax-test.network/ext/bc/C/rpc'] },\n    public: { http: ['https://api.avax-test.network/ext/bc/C/rpc'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'SnowTrace', url: 'https://testnet.snowtrace.io' },\n    default: { name: 'SnowTrace', url: 'https://testnet.snowtrace.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7096959,\n    },\n  },\n  testnet: true,\n})\n", "import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport class DataLengthTooLongError extends BaseError {\n  override name = 'DataLengthTooLongError'\n  constructor({ consumed, length }: { consumed: number; length: number }) {\n    super(\n      `Consumed bytes (${consumed}) is shorter than data length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport class DataLengthTooShortError extends BaseError {\n  override name = 'DataLengthTooShortError'\n  constructor({ length, dataLength }: { length: number; dataLength: number }) {\n    super(\n      `Data length (${dataLength - 1}) is shorter than prefix length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport class IntegerOutOfRangeError extends BaseError {\n  override name = 'IntegerOutOfRangeError'\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string\n    min: string\n    signed?: boolean\n    size?: number\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n    )\n  }\n}\n\nexport class InvalidBytesBooleanError extends BaseError {\n  override name = 'InvalidBytesBooleanError'\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n    )\n  }\n}\n\nexport class InvalidHexBooleanError extends BaseError {\n  override name = 'InvalidHexBooleanError'\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n    )\n  }\n}\n\nexport class InvalidHexValueError extends BaseError {\n  override name = 'InvalidHexValueError'\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n    )\n  }\n}\n\nexport class OffsetOutOfBoundsError extends BaseError {\n  override name = 'OffsetOutOfBoundsError'\n  constructor({ nextOffset, offset }: { nextOffset: number; offset: number }) {\n    super(\n      `Next offset (${nextOffset}) is greater than previous offset + consumed bytes (${offset})`,\n    )\n  }\n}\n\nexport class SizeOverflowError extends BaseError {\n  override name = 'SizeOverflowError'\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n    )\n  }\n}\n", "import type { Hex } from '../../types/misc.js'\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n", "import type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { isHex } from './isHex.js'\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n", "import type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right'\n}\nexport type TrimReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport function trim<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<TValue> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<TValue>\n  }\n  return data as TrimReturnType<TValue>\n}\n", "import { BaseError } from './base.js'\n\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  override name = 'SliceOffsetOutOfBoundsError'\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n    )\n  }\n}\n\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  override name = 'SizeExceedsPaddingSizeError'\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n    )\n  }\n}\n", "import { SizeExceedsPaddingSizeError } from '../../errors/data.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right'\n  size?: number | null\n}\nexport type PadReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport function pad<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<TValue> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n}\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n", "import { IntegerOutOfRangeError } from '../../errors/encoding.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { pad } from '../data/pad.js'\n\nimport { assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html\n * - Example: https://viem.sh/docs/utilities/toHex.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let hexString = ''\n  for (let i = 0; i < value.length; i++) {\n    hexString += hexes[value[i]]\n  }\n\n  const hex: Hex = `0x${hexString}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: never\n      /** The size (in bytes) of the output hex value. */\n      size?: number\n    }\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(signed && value < 0\n    ? (1n << BigInt(size * 8)) + BigInt(value)\n    : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n", "import { BaseError } from '../../errors/base.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { isHex } from '../data/isHex.js'\nimport { pad } from '../data/pad.js'\n\nimport { assertSize } from './fromHex.js'\nimport { type NumberToHexOpts, numberToHex } from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html\n * - Example: https://viem.sh/docs/utilities/toBytes.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToHexOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const bytes = new Uint8Array(hexString.length / 2)\n  for (let index = 0; index < bytes.length; index++) {\n    const start = index * 2\n    const hexByte = hexString.slice(start, start + 2)\n    const byte = Number.parseInt(hexByte, 16)\n    if (Number.isNaN(byte) || byte < 0)\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexByte}\" in \"${hexString}\").`,\n      )\n    bytes[index] = byte\n  }\n  return bytes\n}\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value: bigint | number, opts?: NumberToHexOpts) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n", "import {\n  InvalidHexBooleanError,\n  SizeOverflowError,\n} from '../../errors/encoding.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { size as size_ } from '../data/size.js'\nimport { trim } from '../data/trim.js'\n\nimport { hexToBytes } from './toBytes.js'\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | TTo\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number\n      /** Type to convert to. */\n      to: TTo\n    }\n\nexport type FromHexReturnType<TTo> = TTo extends 'string'\n  ? string\n  : TTo extends 'bigint'\n  ? bigint\n  : TTo extends 'number'\n  ? number\n  : TTo extends 'bytes'\n  ? ByteArray\n  : TTo extends 'boolean'\n  ? boolean\n  : never\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html\n * - Example: https://viem.sh/docs/utilities/fromHex.html#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<TTo>): FromHexReturnType<TTo> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<TTo>\n  return hexToBytes(hex, opts) as FromHexReturnType<TTo>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n", "import type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineFormatter<TType extends string, TParameters, TReturnType>(\n  type: TType,\n  format: (_: TParameters) => TReturnType,\n) {\n  return <\n    TOverrideParameters,\n    TOverrideReturnType,\n    TExclude extends (keyof TParameters)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: TExclude\n    format: (_: TOverrideParameters) => TOverrideReturnType\n  }) => {\n    return {\n      exclude,\n      format: (args: Assign<TParameters, TOverrideParameters>) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<Assign<TReturnType, TOverrideReturnType>> & {\n          [K in TExclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n", "import type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n} as const\n\nexport function formatTransaction(transaction: Partial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type ? transactionType[transaction.type] : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  }\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  return transaction_ as Transaction\n}\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n", "import type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\n\nimport { defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [K in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport function formatBlock(block: Partial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n", "import type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\n\nexport function formatLog(\n  log: Partial<RpcLog>,\n  { args, eventName }: { args?: unknown; eventName?: string } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n", "import type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nconst statuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport function formatTransactionReceipt(\n  transactionReceipt: Partial<RpcTransactionReceipt>,\n) {\n  return {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? statuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n}\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n", "import { type ChainFormatters } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport { type RpcTransaction } from '../../types/rpc.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { defineBlock } from '../../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport type {\n  OptimismBlockOverrides,\n  OptimismRpcBlockOverrides,\n  OptimismRpcTransaction,\n  OptimismRpcTransactionReceiptOverrides,\n  OptimismTransaction,\n  OptimismTransactionReceiptOverrides,\n} from './types.js'\n\nexport const formattersOptimism = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: OptimismRpcBlockOverrides & {\n        transactions: Hash[] | OptimismRpcTransaction[]\n      },\n    ): OptimismBlockOverrides & {\n      transactions: Hash[] | OptimismTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatTransaction(\n          transaction as RpcTransaction,\n        ) as OptimismTransaction\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx\n          formatted.mint = transaction.mint\n            ? hexToBigInt(transaction.mint)\n            : undefined\n          formatted.sourceHash = transaction.sourceHash\n          formatted.type = 'deposit'\n        }\n        return formatted\n      }) as Hash[] | OptimismTransaction[]\n      return {\n        transactions,\n        stateRoot: args.stateRoot,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: OptimismRpcTransaction): OptimismTransaction {\n      const transaction = {} as OptimismTransaction\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined\n        transaction.sourceHash = args.sourceHash\n        transaction.type = 'deposit'\n      }\n      return transaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: OptimismRpcTransactionReceiptOverrides,\n    ): OptimismTransactionReceiptOverrides {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n      }\n    },\n  }),\n} as const satisfies ChainFormatters\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const base = /*#__PURE__*/ defineChain(\n  {\n    id: 8453,\n    network: 'base',\n    name: 'Base',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n      alchemy: {\n        http: ['https://base-mainnet.g.alchemy.com/v2'],\n        webSocket: ['wss://base-mainnet.g.alchemy.com/v2'],\n      },\n      default: {\n        http: ['https://mainnet.base.org'],\n      },\n      public: {\n        http: ['https://mainnet.base.org'],\n      },\n    },\n    blockExplorers: {\n      blockscout: {\n        name: 'Basescout',\n        url: 'https://base.blockscout.com',\n      },\n      default: {\n        name: 'Basescan',\n        url: 'https://basescan.org',\n      },\n      etherscan: {\n        name: 'Basescan',\n        url: 'https://basescan.org',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xca11bde05977b3631167028862be2a173976ca11',\n        blockCreated: 5022,\n      },\n    },\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const baseGoerli = /*#__PURE__*/ defineChain(\n  {\n    id: 84531,\n    network: 'base-goerli',\n    name: 'Base Goerli',\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n      alchemy: {\n        http: ['https://base-goerli.g.alchemy.com/v2'],\n        webSocket: ['wss://base-goerli.g.alchemy.com/v2'],\n      },\n      default: {\n        http: ['https://goerli.base.org'],\n      },\n      public: {\n        http: ['https://goerli.base.org'],\n      },\n    },\n    blockExplorers: {\n      etherscan: {\n        name: 'Basescan',\n        url: 'https://goerli.basescan.org',\n      },\n      default: {\n        name: 'Basescan',\n        url: 'https://goerli.basescan.org',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xca11bde05977b3631167028862be2a173976ca11',\n        blockCreated: 1376988,\n      },\n    },\n    testnet: true,\n    sourceId: 5, // goerli\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bearNetworkChainMainnet = /*#__PURE__*/ defineChain({\n  id: 641230,\n  name: 'Bear Network Chain Mainnet',\n  network: 'BearNetworkChainMainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BearNetworkChain',\n    symbol: 'BRNKC',\n  },\n  rpcUrls: {\n    public: { http: ['https://brnkc-mainnet.bearnetwork.net'] },\n    default: { http: ['https://brnkc-mainnet.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: { name: 'BrnkScan', url: 'https://brnkscan.bearnetwork.net' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bearNetworkChainTestnet = /*#__PURE__*/ defineChain({\n  id: 751230,\n  name: 'Bear Network Chain Testnet',\n  network: 'BearNetworkChainTestnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBRNKC',\n    symbol: 'tBRNKC',\n  },\n  rpcUrls: {\n    public: { http: ['https://brnkc-test.bearnetwork.net'] },\n    default: { http: ['https://brnkc-test.bearnetwork.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'BrnkTestScan',\n      url: 'https://brnktest-scan.bearnetwork.net',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const boba = /*#__PURE__*/ defineChain({\n  id: 288,\n  name: 'Boba Network',\n  network: 'boba',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Boba',\n    symbol: 'BOBA',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.boba.network'] },\n    public: { http: ['https://mainnet.boba.network'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'BOBAScan', url: 'https://bobascan.com' },\n    default: { name: 'BOBAScan', url: 'https://bobascan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 446859,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bronos = /*#__PURE__*/ defineChain({\n  id: 1039,\n  name: 'Bronos',\n  network: 'bronos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BRO',\n    symbol: 'BRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.bronos.org'] },\n    public: { http: ['https://evm.bronos.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'BronoScan', url: 'https://broscan.bronos.org' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bronosTestnet = /*#__PURE__*/ defineChain({\n  id: 1038,\n  name: 'Bronos Testnet',\n  network: 'bronos-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Bronos Coin',\n    symbol: 'tBRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-testnet.bronos.org'] },\n    public: { http: ['https://evm-testnet.bronos.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'BronoScan', url: 'https://tbroscan.bronos.org' },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bsc = /*#__PURE__*/ defineChain({\n  id: 56,\n  name: 'BNB Smart Chain',\n  network: 'bsc',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'BNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/bsc'] },\n    public: { http: ['https://rpc.ankr.com/bsc'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'BscScan', url: 'https://bscscan.com' },\n    default: { name: 'BscScan', url: 'https://bscscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 15921452,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n  id: 97,\n  name: 'Binance Smart Chain Testnet',\n  network: 'bsc-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'BNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    default: { http: ['https://data-seed-prebsc-1-s1.binance.org:8545'] },\n    public: { http: ['https://data-seed-prebsc-1-s1.binance.org:8545'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'BscScan', url: 'https://testnet.bscscan.com' },\n    default: { name: 'BscScan', url: 'https://testnet.bscscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 17422483,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bxn = /*#__PURE__*/ defineChain({\n  id: 4999,\n  name: 'BlackFort Exchange Network',\n  network: 'bxn',\n  nativeCurrency: { name: 'BlackFort Token', symbol: 'BXN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.blackfort.network/rpc'],\n    },\n    public: {\n      http: ['https://mainnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://explorer.blackfort.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const bxnTestnet = /*#__PURE__*/ defineChain({\n  id: 4777,\n  name: 'BlackFort Exchange Network Testnet',\n  network: 'bxnTestnet',\n  nativeCurrency: {\n    name: 'BlackFort Testnet Token',\n    symbol: 'TBXN',\n    decimals: 18,\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.blackfort.network/rpc'],\n    },\n    public: {\n      http: ['https://testnet.blackfort.network/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://testnet-explorer.blackfort.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const canto = /*#__PURE__*/ defineChain({\n  id: 7_700,\n  name: 'Canto',\n  network: 'canto',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Canto',\n    symbol: 'CANTO',\n  },\n  rpcUrls: {\n    default: { http: ['https://canto.gravitychain.io'] },\n    public: { http: ['https://canto.gravitychain.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Tuber.Build (Blockscout)',\n      url: 'https://tuber.build',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2905789,\n    },\n  },\n})\n", "import type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { numberToHex } from '../encoding/toHex.js'\nimport { defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  TChain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n} as const\n\nexport function formatTransactionRequest(\n  transactionRequest: Partial<TransactionRequest>,\n) {\n  return {\n    ...transactionRequest,\n    gas:\n      typeof transactionRequest.gas !== 'undefined'\n        ? numberToHex(transactionRequest.gas)\n        : undefined,\n    gasPrice:\n      typeof transactionRequest.gasPrice !== 'undefined'\n        ? numberToHex(transactionRequest.gasPrice)\n        : undefined,\n    maxFeePerGas:\n      typeof transactionRequest.maxFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxFeePerGas)\n        : undefined,\n    maxPriorityFeePerGas:\n      typeof transactionRequest.maxPriorityFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxPriorityFeePerGas)\n        : undefined,\n    nonce:\n      typeof transactionRequest.nonce !== 'undefined'\n        ? numberToHex(transactionRequest.nonce)\n        : undefined,\n    type:\n      typeof transactionRequest.type !== 'undefined'\n        ? rpcTransactionType[transactionRequest.type]\n        : undefined,\n    value:\n      typeof transactionRequest.value !== 'undefined'\n        ? numberToHex(transactionRequest.value)\n        : undefined,\n  } as RpcTransactionRequest\n}\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n", "import { type ChainFormatters } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { defineBlock } from '../../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { defineTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport type {\n  CeloBlockOverrides,\n  CeloRpcTransaction,\n  CeloRpcTransactionReceiptOverrides,\n  CeloRpcTransactionRequest,\n  CeloTransaction,\n  CeloTransactionReceiptOverrides,\n  CeloTransactionRequest,\n} from './types.js'\n\nexport const formattersCelo = {\n  block: /*#__PURE__*/ defineBlock({\n    exclude: ['difficulty', 'gasLimit', 'mixHash', 'nonce', 'uncles'],\n    format(\n      args: CeloBlockOverrides & {\n        transactions: Hash[] | CeloRpcTransaction[]\n      },\n    ): CeloBlockOverrides & {\n      transactions: Hash[] | CeloTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        return {\n          ...formatTransaction(transaction as RpcTransaction),\n          feeCurrency: transaction.feeCurrency,\n          gatewayFee: transaction.gatewayFee\n            ? hexToBigInt(transaction.gatewayFee)\n            : null,\n          gatewayFeeRecipient: transaction.gatewayFeeRecipient,\n        }\n      }) as Hash[] | CeloTransaction[]\n      return {\n        randomness: args.randomness,\n        transactions,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: CeloRpcTransaction): CeloTransaction {\n      return {\n        feeCurrency: args.feeCurrency,\n        gatewayFee: args.gatewayFee ? hexToBigInt(args.gatewayFee) : null,\n        gatewayFeeRecipient: args.gatewayFeeRecipient,\n      } as CeloTransaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: CeloRpcTransactionReceiptOverrides,\n    ): CeloTransactionReceiptOverrides {\n      return {\n        feeCurrency: args.feeCurrency,\n        gatewayFee: args.gatewayFee ? hexToBigInt(args.gatewayFee) : null,\n        gatewayFeeRecipient: args.gatewayFeeRecipient,\n      }\n    },\n  }),\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    format(args: CeloTransactionRequest): CeloRpcTransactionRequest {\n      const request = {\n        feeCurrency: args.feeCurrency,\n        gatewayFee:\n          typeof args.gatewayFee !== 'undefined'\n            ? numberToHex(args.gatewayFee)\n            : undefined,\n        gatewayFeeRecipient: args.gatewayFeeRecipient,\n      } as CeloRpcTransactionRequest\n      if (args.type === 'cip42') request.type = '0x7c'\n      return request\n    },\n  }),\n} as const satisfies ChainFormatters\n", "import { BaseError } from './base.js'\n\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`)\n  }\n}\n", "export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n", "export function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n", "import { gweiUnits } from '../../constants/unit.js'\n\nimport { formatUnits } from './formatUnits.js'\n\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n", "import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\n\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  override name = 'ExecutionRevertedError'\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError; message?: string } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  override name = 'FeeCapTooHigh'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  override name = 'FeeCapTooLow'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  override name = 'NonceTooHighError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause },\n    )\n  }\n}\n\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  override name = 'NonceTooLowError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause },\n    )\n  }\n}\n\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  override name = 'NonceMaxValueError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause },\n    )\n  }\n}\n\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage = /insufficient funds/\n  override name = 'InsufficientFundsError'\n  constructor({ cause }: { cause?: BaseError } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n      },\n    )\n  }\n}\n\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  override name = 'IntrinsicGasTooHighError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  override name = 'IntrinsicGasTooLowError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  override name = 'TransactionTypeNotSupportedError'\n  constructor({ cause }: { cause?: BaseError }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n    })\n  }\n}\n\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  override name = 'TipAboveFeeCapError'\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError\n    maxPriorityFeePerGas?: bigint\n    maxFeePerGas?: bigint\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport class UnknownNodeError extends BaseError {\n  override name = 'UnknownNodeError'\n\n  constructor({ cause }: { cause?: BaseError }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n    })\n  }\n}\n", "import type { Address } from 'abitype'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\nexport function isAddress(address: string): address is Address {\n  return addressRegex.test(address)\n}\n", "import type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<TValue extends Hex | ByteArray> =\n  TValue extends Hex ? Hex : ByteArray\n\nexport function concat<TValue extends Hex | ByteArray>(\n  values: TValue[],\n): ConcatReturnType<TValue> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as Hex[]) as ConcatReturnType<TValue>\n  return concatBytes(values as ByteArray[]) as ConcatReturnType<TValue>\n}\n\nexport function concatBytes(values: ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport function concatHex(values: Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n", "import type { ByteArray, Hex } from '../../types/misc.js'\nimport { concat } from '../data/concat.js'\n\nimport { toBytes } from './toBytes.js'\nimport { bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\nexport type ToRlpReturnType<TTo extends To> = TTo extends 'bytes'\n  ? ByteArray\n  : TTo extends 'hex'\n  ? Hex\n  : never\n\nexport function toRlp<TTo extends To = 'hex'>(\n  hexOrBytes: RecursiveArray<Hex> | RecursiveArray<ByteArray>,\n  to_?: TTo,\n) {\n  const to = to_ || ('hex' as const)\n  return format(bytesToRlp(parse(hexOrBytes)), to) as ToRlpReturnType<TTo>\n}\n\nfunction parse(\n  hexOrBytes: RecursiveArray<Hex> | RecursiveArray<ByteArray>,\n): RecursiveArray<ByteArray> {\n  if (Array.isArray(hexOrBytes)) return hexOrBytes.map(parse)\n  return typeof hexOrBytes === 'string' ? toBytes(hexOrBytes) : hexOrBytes\n}\n\nfunction format(bytes: ByteArray, type: 'hex' | 'bytes' = 'bytes') {\n  return type === 'hex' ? bytesToHex(bytes) : bytes\n}\n\nexport function bytesToRlp(bytes: RecursiveArray<ByteArray>): ByteArray {\n  if (Array.isArray(bytes)) {\n    const encoded = concat(bytes.map(bytesToRlp))\n    return new Uint8Array([...encodeLength(encoded.length, 0xc0), ...encoded])\n  }\n\n  if (bytes.length === 1 && bytes[0] < 0x80) return bytes\n  return new Uint8Array([...encodeLength(bytes.length, 0x80), ...bytes])\n}\n\nfunction encodeLength(length: number, offset: number) {\n  if (length < 56) return [offset + length]\n  return [toBytes(length).length + offset + 55, ...toBytes(length)]\n}\n", "import { etherUnits } from '../../constants/unit.js'\n\nimport { formatUnits } from './formatUnits.js'\n\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n", "import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport class FeeConflictError extends BaseError {\n  override name = 'FeeConflictError'\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport class InvalidLegacyVError extends BaseError {\n  override name = 'InvalidLegacyVError'\n\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`)\n  }\n}\n\nexport class InvalidSerializableTransactionError extends BaseError {\n  override name = 'InvalidSerializableTransactionError'\n\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n    })\n  }\n}\n\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  override name = 'InvalidSerializedTransactionType'\n\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`)\n\n    this.serializedType = serializedType\n  }\n}\n\nexport class InvalidSerializedTransactionError extends BaseError {\n  override name = 'InvalidSerializedTransactionError'\n\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport class InvalidStorageKeySizeError extends BaseError {\n  override name = 'InvalidStorageKeySizeError'\n\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n    )\n  }\n}\n\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'TransactionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport class TransactionNotFoundError extends BaseError {\n  override name = 'TransactionNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n    blockTag?: BlockTag\n    hash?: Hash\n    index?: number\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n\nexport class TransactionReceiptNotFoundError extends BaseError {\n  override name = 'TransactionReceiptNotFoundError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n    )\n  }\n}\n\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  override name = 'WaitForTransactionReceiptTimeoutError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n    )\n  }\n}\n", "import { InvalidAddressError } from '../../errors/address.js'\nimport { InvalidStorageKeySizeError } from '../../errors/transaction.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { type RecursiveArray } from '../encoding/toRlp.js'\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList: RecursiveArray<Hex> = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address)) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n", "import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid EIP-1559 Transaction attribute.',\n    )\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n", "import { InvalidSerializableTransactionError } from '../../errors/transaction.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\n\nexport type GetTransactionType<\n  TTransactionSerializable extends TransactionSerializable = TransactionSerializable,\n> =\n  | (TTransactionSerializable extends TransactionSerializableLegacy\n      ? 'legacy'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP1559\n      ? 'eip1559'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP2930\n      ? 'eip2930'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableGeneric\n      ? TTransactionSerializable['type']\n      : never)\n\nexport function getTransactionType<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n): GetTransactionType<TTransactionSerializable> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<TTransactionSerializable>\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  )\n    return 'eip1559' as GetTransactionType<TTransactionSerializable>\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined')\n      return 'eip2930' as GetTransactionType<TTransactionSerializable>\n    return 'legacy' as GetTransactionType<TTransactionSerializable>\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n", "import { InvalidLegacyVError } from '../../errors/transaction.js'\nimport type { Signature } from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { toHex } from '../encoding/toHex.js'\nimport { toRlp } from '../encoding/toRlp.js'\n\nimport {\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport { serializeAccessList } from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  TTransactionSerializable extends TransactionSerializable = TransactionSerializable,\n  TTransactionType extends TransactionType = GetTransactionType<TTransactionSerializable>,\n> = TransactionSerialized<TTransactionType>\n\nexport type SerializeTransactionFn<\n  TTransactionSerializable extends TransactionSerializable = TransactionSerializable,\n> = typeof serializeTransaction<TTransactionSerializable>\n\nexport function serializeTransaction<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n  signature?: Signature,\n): SerializedTransactionReturnType<TTransactionSerializable> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature,\n  ) as SerializedTransactionReturnType<TTransactionSerializable>\n}\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature)\n    serializedTransaction.push(\n      signature.v === 27n ? '0x' : toHex(1), // yParity\n      trim(signature.r),\n      trim(signature.s),\n    )\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature)\n    serializedTransaction.push(\n      signature.v === 27n ? '0x' : toHex(1), // yParity\n      signature.r,\n      signature.s,\n    )\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: Signature,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    let v = 27n + (signature.v === 27n ? 0n : 1n)\n    if (chainId > 0) v = BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n    else if (signature.v !== v)\n      throw new InvalidLegacyVError({ v: signature.v })\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction)\n}\n", "import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js'\nimport type { ChainSerializers } from '../../types/chain.js'\nimport type { Signature } from '../../types/misc.js'\nimport type { TransactionSerializable } from '../../types/transaction.js'\nimport { isAddress } from '../../utils/address/isAddress.js'\nimport { concatHex } from '../../utils/data/concat.js'\nimport { trim } from '../../utils/data/trim.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\nimport { toRlp } from '../../utils/encoding/toRlp.js'\nimport { serializeAccessList } from '../../utils/transaction/serializeAccessList.js'\nimport {\n  type SerializeTransactionFn,\n  serializeTransaction,\n} from '../../utils/transaction/serializeTransaction.js'\nimport type {\n  CeloTransactionSerializable,\n  TransactionSerializableCIP42,\n  TransactionSerializedCIP42,\n} from './types.js'\n\nexport const serializeTransactionCelo: SerializeTransactionFn<\n  CeloTransactionSerializable\n> = (tx, signature) => {\n  // Handle CIP-42 transactions\n  if (isCIP42(tx))\n    return serializeTransactionCIP42(\n      tx as TransactionSerializableCIP42,\n      signature,\n    )\n\n  // Handle other transaction types\n  return serializeTransaction(tx as TransactionSerializable, signature)\n}\n\nexport const serializersCelo = {\n  transaction: serializeTransactionCelo,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionCIP42ReturnType = TransactionSerializedCIP42\n\n// There shall be a typed transaction with the code 0x7c that has the following format:\n// 0x7c || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, feecurrency, gatewayFeeRecipient, gatewayfee, destination, amount, data, access_list, signature_y_parity, signature_r, signature_s]).\n// This will be in addition to the type 0x02 transaction as specified in EIP-1559.\nfunction serializeTransactionCIP42(\n  transaction: TransactionSerializableCIP42,\n  signature?: Signature,\n): SerializeTransactionCIP42ReturnType {\n  assertTransactionCIP42(transaction)\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    feeCurrency,\n    gatewayFeeRecipient,\n    gatewayFee,\n    data,\n  } = transaction\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    feeCurrency ?? '0x',\n    gatewayFeeRecipient ?? '0x',\n    gatewayFee ? toHex(gatewayFee) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializeAccessList(accessList),\n  ]\n\n  if (signature) {\n    serializedTransaction.push(\n      signature.v === 27n ? '0x' : toHex(1), // yParity\n      trim(signature.r),\n      trim(signature.s),\n    )\n  }\n\n  return concatHex([\n    '0x7c',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionCIP42ReturnType\n}\n\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\n\n// process as CIP42 if any of these fields are present. realistically gatewayfee is not used but is part of spec\nfunction isCIP42(transaction: CeloTransactionSerializable) {\n  if (\n    'maxFeePerGas' in transaction &&\n    'maxPriorityFeePerGas' in transaction &&\n    ('feeCurrency' in transaction ||\n      'gatewayFee' in transaction ||\n      'gatewayFeeRecipient' in transaction)\n  )\n    return true\n  return false\n}\n\n// maxFeePerGas must be less than 2^256 - 1: however writing like that caused exceptions to be raised\nconst MAX_MAX_FEE_PER_GAS =\n  115792089237316195423570985008687907853269984665640564039457584007913129639935n\n\nexport function assertTransactionCIP42(\n  transaction: TransactionSerializableCIP42,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    feeCurrency,\n    gatewayFee,\n    gatewayFeeRecipient,\n  } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid CIP-42 Transaction attribute.',\n    )\n\n  if (maxFeePerGas && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n\n  if (\n    (gatewayFee && !gatewayFeeRecipient) ||\n    (gatewayFeeRecipient && !gatewayFee)\n  ) {\n    throw new BaseError(\n      '`gatewayFee` and `gatewayFeeRecipient` must be provided together.',\n    )\n  }\n\n  if (feeCurrency && !feeCurrency?.startsWith('0x')) {\n    throw new BaseError(\n      '`feeCurrency` MUST be a token address for CIP-42 transactions.',\n    )\n  }\n\n  if (!feeCurrency && !gatewayFeeRecipient) {\n    throw new BaseError(\n      'Either `feeCurrency` or `gatewayFeeRecipient` must be provided for CIP-42 transactions.',\n    )\n  }\n}\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersCelo } from '../celo/formatters.js'\nimport { serializersCelo } from '../celo/serializers.js'\n\nexport const celo = /*#__PURE__*/ defineChain(\n  {\n    id: 42_220,\n    name: 'Celo',\n    network: 'celo',\n    nativeCurrency: {\n      decimals: 18,\n      name: 'CELO',\n      symbol: 'CELO',\n    },\n    rpcUrls: {\n      default: { http: ['https://forno.celo.org'] },\n      infura: {\n        http: ['https://celo-mainnet.infura.io/v3'],\n      },\n      public: {\n        http: ['https://forno.celo.org'],\n      },\n    },\n    blockExplorers: {\n      default: {\n        name: 'Celo Explorer',\n        url: 'https://explorer.celo.org/mainnet',\n      },\n      etherscan: { name: 'CeloScan', url: 'https://celoscan.io' },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        blockCreated: 13112599,\n      },\n    },\n    testnet: false,\n  },\n  {\n    formatters: formattersCelo,\n    serializers: serializersCelo,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersCelo } from '../celo/formatters.js'\nimport { serializersCelo } from '../celo/serializers.js'\n\nexport const celoAlfajores = /*#__PURE__*/ defineChain(\n  {\n    id: 44_787,\n    name: 'Alfajores',\n    network: 'celo-alfajores',\n    nativeCurrency: {\n      decimals: 18,\n      name: 'CELO',\n      symbol: 'A-CELO',\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://alfajores-forno.celo-testnet.org'],\n      },\n      infura: {\n        http: ['https://celo-alfajores.infura.io/v3'],\n      },\n      public: {\n        http: ['https://alfajores-forno.celo-testnet.org'],\n      },\n    },\n    blockExplorers: {\n      default: {\n        name: 'Celo Explorer',\n        url: 'https://explorer.celo.org/alfajores',\n      },\n      etherscan: { name: 'CeloScan', url: 'https://alfajores.celoscan.io/' },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        blockCreated: 14569001,\n      },\n    },\n    testnet: true,\n  },\n  {\n    formatters: formattersCelo,\n    serializers: serializersCelo,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersCelo } from '../celo/formatters.js'\nimport { serializersCelo } from '../celo/serializers.js'\n\nexport const celoCannoli = /*#__PURE__*/ defineChain(\n  {\n    id: 17_323,\n    name: 'Cannoli',\n    network: 'celo-cannoli',\n    nativeCurrency: {\n      decimals: 18,\n      name: 'CELO',\n      symbol: 'C-CELO',\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://forno.cannoli.celo-testnet.org'],\n      },\n      public: {\n        http: ['https://forno.cannoli.celo-testnet.org'],\n      },\n    },\n    blockExplorers: {\n      default: {\n        name: 'Celo Explorer',\n        url: 'https://explorer.celo.org/cannoli',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0x5Acb0aa8BF4E8Ff0d882Ee187140713C12BF9718',\n        blockCreated: 87429,\n      },\n    },\n    testnet: true,\n  },\n  {\n    formatters: formattersCelo,\n    serializers: serializersCelo,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const classic = /*#__PURE__*/ defineChain({\n  id: 61,\n  name: 'Ethereum Classic',\n  network: 'classic',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETC',\n    symbol: 'ETC',\n  },\n  rpcUrls: {\n    default: { http: ['https://etc.rivet.link'] },\n    public: { http: ['https://etc.rivet.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.com/etc/mainnet',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const confluxESpace = /*#__PURE__*/ defineChain({\n  id: 1_030,\n  name: 'Conflux eSpace',\n  network: 'cfx-espace',\n  nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://evm.confluxrpc.org'],\n    },\n    public: {\n      http: ['https://evm.confluxrpc.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ConfluxScan',\n      url: 'https://evm.confluxscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n      blockCreated: 68602935,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const cronos = /*#__PURE__*/ defineChain({\n  id: 25,\n  name: 'Cronos Mainnet',\n  network: 'cronos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Cronos',\n    symbol: 'CRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm.cronos.org'] },\n    public: { http: ['https://evm.cronos.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'Cronoscan', url: 'https://cronoscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1963112,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const cronosTestnet = /*#__PURE__*/ defineChain({\n  id: 338,\n  name: 'Cronos Testnet',\n  network: 'cronos-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CRO',\n    symbol: 'tCRO',\n  },\n  rpcUrls: {\n    default: { http: ['https://evm-t3.cronos.org'] },\n    public: { http: ['https://evm-t3.cronos.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Cronos Explorer',\n      url: 'https://cronos.org/explorer/testnet3',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 10191251,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const crossbell = /*#__PURE__*/ defineChain({\n  id: 3_737,\n  network: 'crossbell',\n  name: 'Crossbell',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'CSB',\n    symbol: 'CSB',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.crossbell.io'],\n    },\n    public: {\n      http: ['https://rpc.crossbell.io'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'CrossScan', url: 'https://scan.crossbell.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 38_246_031,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const dfk = /*#__PURE__*/ defineChain({\n  id: 53_935,\n  name: 'DFK Chain',\n  network: 'dfk',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Jewel',\n    symbol: 'JEWEL',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc'],\n    },\n    public: {\n      http: ['https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'DFKSubnetScan',\n      url: 'https://subnets.avax.network/defi-kingdoms',\n    },\n    default: {\n      name: 'DFKSubnetScan',\n      url: 'https://subnets.avax.network/defi-kingdoms',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const dogechain = /*#__PURE__*/ defineChain({\n  id: 2_000,\n  name: 'Dogechain',\n  network: 'dogechain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Dogechain',\n    symbol: 'DC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.dogechain.dog'] },\n    public: { http: ['https://rpc.dogechain.dog'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'DogeChainExplorer',\n      url: 'https://explorer.dogechain.dog',\n    },\n    default: {\n      name: 'DogeChainExplorer',\n      url: 'https://explorer.dogechain.dog',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const edgeware = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Edgeware EdgeEVM Mainnet',\n  network: 'edgeware',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Edgeware',\n    symbol: 'EDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://edgeware-evm.jelliedowl.net'] },\n    public: { http: ['https://edgeware-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Edgscan by Bharathcoorg', url: 'https://edgscan.live' },\n    default: { name: 'Edgscan by Bharathcoorg', url: 'https://edgscan.live' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18117872,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const edgewareTestnet = /*#__PURE__*/ defineChain({\n  id: 2022,\n  name: 'Beresheet BereEVM Testnet',\n  network: 'edgewareTestnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Testnet EDG',\n    symbol: 'tEDG',\n  },\n  rpcUrls: {\n    default: { http: ['https://beresheet-evm.jelliedowl.net'] },\n    public: { http: ['https://beresheet-evm.jelliedowl.net'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://testnet.edgscan.live',\n    },\n    default: {\n      name: 'Edgscan by Bharathcoorg',\n      url: 'https://testnet.edgscan.live',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const eos = /*#__PURE__*/ defineChain({\n  id: 17777,\n  name: 'EOS EVM',\n  network: 'eos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.evm.eosnetwork.com'] },\n    public: { http: ['https://api.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'EOS EVM Explorer',\n      url: 'https://explorer.evm.eosnetwork.com',\n    },\n    default: {\n      name: 'EOS EVM Explorer',\n      url: 'https://explorer.evm.eosnetwork.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7943933,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const eosTestnet = /*#__PURE__*/ defineChain({\n  id: 15557,\n  name: 'EOS EVM Testnet',\n  network: 'eos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EOS',\n    symbol: 'EOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.testnet.evm.eosnetwork.com'] },\n    public: { http: ['https://api.testnet.evm.eosnetwork.com'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'EOS EVM Testnet Explorer',\n      url: 'https://explorer.testnet.evm.eosnetwork.com',\n    },\n    default: {\n      name: 'EOS EVM Testnet Explorer',\n      url: 'https://explorer.testnet.evm.eosnetwork.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9067940,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const evmos = /*#__PURE__*/ defineChain({\n  id: 9_001,\n  name: 'Evmos',\n  network: 'evmos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.org:8545'] },\n    public: { http: ['https://eth.bd.evmos.org:8545'] },\n  },\n  blockExplorers: {\n    default: { name: 'Evmos Block Explorer', url: 'https://escan.live' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const evmosTestnet = /*#__PURE__*/ defineChain({\n  id: 9_000,\n  name: 'Evmos Testnet',\n  network: 'evmos-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Evmos',\n    symbol: 'EVMOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://eth.bd.evmos.dev:8545'] },\n    public: { http: ['https://eth.bd.evmos.dev:8545'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Evmos Testnet Block Explorer',\n      url: 'https://evm.evmos.dev/',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const ekta = /*#__PURE__*/ defineChain({\n  id: 1994,\n  name: 'Ekta',\n  network: 'ekta',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    public: { http: ['https://main.ekta.io'] },\n    default: { http: ['https://main.ekta.io'] },\n  },\n  blockExplorers: {\n    default: { name: 'Ektascan', url: 'https://ektascan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const ektaTestnet = /*#__PURE__*/ defineChain({\n  id: 1004,\n  name: 'Ekta Testnet',\n  network: 'ekta-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'EKTA',\n    symbol: 'EKTA',\n  },\n  rpcUrls: {\n    public: { http: ['https://test.ekta.io:8545'] },\n    default: { http: ['https://test.ekta.io:8545'] },\n  },\n  blockExplorers: {\n    default: { name: 'Test Ektascan', url: 'https://test.ektascan.io' },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const fantom = /*#__PURE__*/ defineChain({\n  id: 250,\n  name: 'Fantom',\n  network: 'fantom',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.ankr.com/fantom'] },\n    public: { http: ['https://rpc.ankr.com/fantom'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'FTMScan', url: 'https://ftmscan.com' },\n    default: { name: 'FTMScan', url: 'https://ftmscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 33001987,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const fantomTestnet = /*#__PURE__*/ defineChain({\n  id: 4_002,\n  name: 'Fantom Testnet',\n  network: 'fantom-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.fantom.network'] },\n    public: { http: ['https://rpc.testnet.fantom.network'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'FTMScan', url: 'https://testnet.ftmscan.com' },\n    default: { name: 'FTMScan', url: 'https://testnet.ftmscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 8328688,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const fibo = /*#__PURE__*/ defineChain({\n  id: 12306,\n  name: 'Fibo Chain',\n  network: 'fibochain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'fibo',\n    symbol: 'FIBO',\n  },\n  rpcUrls: {\n    default: { http: ['https://network.hzroc.art'] },\n    public: { http: ['https://network.hzroc.art'] },\n  },\n  blockExplorers: {\n    default: { name: 'FiboScan', url: 'https://scan.fibochain.org' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const filecoin = /*#__PURE__*/ defineChain({\n  id: 314,\n  name: 'Filecoin Mainnet',\n  network: 'filecoin-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'filecoin',\n    symbol: 'FIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.node.glif.io/rpc/v1'] },\n    public: { http: ['https://api.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: { name: 'Filfox', url: 'https://filfox.info/en' },\n    filscan: { name: 'Filscan', url: 'https://filscan.io' },\n    filscout: { name: 'Filscout', url: 'https://filscout.io/en' },\n    glif: { name: 'Glif', url: 'https://explorer.glif.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const filecoinCalibration = /*#__PURE__*/ defineChain({\n  id: 314_159,\n  name: 'Filecoin Calibration',\n  network: 'filecoin-calibration',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.calibration.node.glif.io/rpc/v1'] },\n    public: { http: ['https://api.calibration.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: { name: 'Filscan', url: 'https://calibration.filscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const filecoinHyperspace = /*#__PURE__*/ defineChain({\n  id: 314_1,\n  name: 'Filecoin Hyperspace',\n  network: 'filecoin-hyperspace',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'testnet filecoin',\n    symbol: 'tFIL',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.hyperspace.node.glif.io/rpc/v1'] },\n    public: { http: ['https://api.hyperspace.node.glif.io/rpc/v1'] },\n  },\n  blockExplorers: {\n    default: { name: 'Filfox', url: 'https://hyperspace.filfox.info/en' },\n    filscan: { name: 'Filscan', url: 'https://hyperspace.filscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const flare = /*#__PURE__*/ defineChain({\n  id: 14,\n  name: 'Flare Mainnet',\n  network: 'flare-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'flare',\n    symbol: 'FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://flare-api.flare.network/ext/C/rpc'] },\n    public: { http: ['https://flare-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Flare Explorer',\n      url: 'https://flare-explorer.flare.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const flareTestnet = /*#__PURE__*/ defineChain({\n  id: 114,\n  name: 'Coston2',\n  network: 'coston2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'coston2flare',\n    symbol: 'C2FLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston2-api.flare.network/ext/C/rpc'] },\n    public: { http: ['https://coston2-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston2 Explorer',\n      url: 'https://coston2-explorer.flare.network',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const foundry = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Foundry',\n  network: 'foundry',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n    public: {\n      http: ['http://127.0.0.1:8545'],\n      webSocket: ['ws://127.0.0.1:8545'],\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const fuse = /*#__PURE__*/ defineChain({\n  id: 122,\n  name: 'Fuse',\n  network: 'fuse',\n  nativeCurrency: { name: 'Fuse', symbol: 'FUSE', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fuse.io'] },\n    public: { http: ['https://fuse-mainnet.chainstacklabs.com'] },\n  },\n  blockExplorers: {\n    default: { name: 'Fuse Explorer', url: 'https://explorer.fuse.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const fuseSparknet = /*#__PURE__*/ defineChain({\n  id: 123,\n  name: 'Fuse Sparknet',\n  network: 'fuse',\n  nativeCurrency: { name: 'Spark', symbol: 'SPARK', decimals: 18 },\n  rpcUrls: {\n    default: { http: ['https://rpc.fusespark.io'] },\n    public: { http: ['https://rpc.fusespark.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Sparkent Explorer',\n      url: 'https://explorer.fusespark.io',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const iotex = /*#__PURE__*/ defineChain({\n  id: 4_689,\n  name: 'IoTeX',\n  network: 'iotex',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.mainnet.iotex.io'],\n      webSocket: ['wss://babel-api.mainnet.iotex.io'],\n    },\n    public: {\n      http: ['https://babel-api.mainnet.iotex.io'],\n      webSocket: ['wss://babel-api.mainnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'IoTeXScan', url: 'https://iotexscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const iotexTestnet = /*#__PURE__*/ defineChain({\n  id: 4_690,\n  name: 'IoTeX Testnet',\n  network: 'iotex-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'IoTeX',\n    symbol: 'IOTX',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://babel-api.testnet.iotex.io'],\n      webSocket: ['wss://babel-api.testnet.iotex.io'],\n    },\n    public: {\n      http: ['https://babel-api.testnet.iotex.io'],\n      webSocket: ['wss://babel-api.testnet.iotex.io'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'IoTeXScan', url: 'https://testnet.iotexscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const gobi = /*#__PURE__*/ defineChain({\n  id: 1_663,\n  name: 'Horizen Gobi Testnet',\n  network: 'gobi',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Test ZEN',\n    symbol: 'tZEN',\n  },\n  rpcUrls: {\n    public: { http: ['https://gobi-testnet.horizenlabs.io/ethv1'] },\n    default: { http: ['https://gobi-testnet.horizenlabs.io/ethv1'] },\n  },\n  blockExplorers: {\n    default: { name: 'Gobi Explorer', url: 'https://gobi-explorer.horizen.io' },\n  },\n  contracts: {},\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const goerli = /*#__PURE__*/ defineChain({\n  id: 5,\n  network: 'goerli',\n  name: 'Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-goerli.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-goerli.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://goerli.infura.io/v3'],\n      webSocket: ['wss://goerli.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n    public: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0x56522D00C410a43BFfDF00a9A569489297385790',\n      blockCreated: 8765204,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6507670,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const gnosis = /*#__PURE__*/ defineChain({\n  id: 100,\n  name: 'Gnosis',\n  network: 'gnosis',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.gnosischain.com'] },\n    public: { http: ['https://rpc.gnosischain.com'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Gnosisscan',\n      url: 'https://gnosisscan.io',\n    },\n    default: {\n      name: 'Gnosis Chain Explorer',\n      url: 'https://blockscout.com/xdai/mainnet',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 21022491,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const gnosisChiado = /*#__PURE__*/ defineChain({\n  id: 10_200,\n  name: 'Gnosis Chiado',\n  network: 'chiado',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Gnosis',\n    symbol: 'xDAI',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.chiadochain.net'] },\n    public: { http: ['https://rpc.chiadochain.net'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.chiadochain.net',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const hardhat = /*#__PURE__*/ defineChain({\n  id: 31_337,\n  name: 'Hardhat',\n  network: 'hardhat',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n    public: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const harmonyOne = /*#__PURE__*/ defineChain({\n  id: 1_666_600_000,\n  name: 'Harmony One',\n  network: 'harmony',\n  nativeCurrency: {\n    name: 'Harmony',\n    symbol: 'ONE',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: { http: ['https://rpc.ankr.com/harmony'] },\n    default: { http: ['https://rpc.ankr.com/harmony'] },\n  },\n  blockExplorers: {\n    default: { name: 'Harmony Explorer', url: 'https://explorer.harmony.one' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 24185753,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const haqqMainnet = /*#__PURE__*/ defineChain({\n  id: 11235,\n  name: 'HAQQ Mainnet',\n  network: 'haqq-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLM',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.haqq.network'],\n    },\n    public: {\n      http: ['https://rpc.eth.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.haqq.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const haqqTestedge2 = /*#__PURE__*/ defineChain({\n  id: 54211,\n  name: 'HAQQ Testedge 2',\n  network: 'haqq-testedge-2',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Islamic Coin',\n    symbol: 'ISLMT',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.eth.testedge2.haqq.network'],\n    },\n    public: {\n      http: ['https://rpc.eth.testedge2.haqq.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'HAQQ Explorer',\n      url: 'https://explorer.testedge2.haqq.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const holesky = /*#__PURE__*/ defineChain({\n  id: 17000,\n  network: 'holesky',\n  name: 'Holesky',\n  nativeCurrency: { name: 'Holesky Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.holesky.ethpandaops.io'],\n    },\n    public: {\n      http: ['https://rpc.holesky.ethpandaops.io'],\n    },\n  },\n  contracts: {},\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const klaytn = /*#__PURE__*/ defineChain({\n  id: 8_217,\n  name: 'Klaytn',\n  network: 'klaytn',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Klaytn',\n    symbol: 'KLAY',\n  },\n  rpcUrls: {\n    default: { http: ['https://cypress.fautor.app/archive'] },\n    public: { http: ['https://cypress.fautor.app/archive'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'KlaytnScope', url: 'https://scope.klaytn.com' },\n    default: { name: 'KlaytnScope', url: 'https://scope.klaytn.com' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const kroma = /*#__PURE__*/ defineChain({\n  id: 255,\n  network: 'kroma',\n  name: 'Kroma',\n  nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.kroma.network'],\n    },\n    public: {\n      http: ['https://api.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Explorer',\n      url: 'https://blockscout.kroma.network',\n    },\n  },\n  testnet: false,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const kromaSepolia = /*#__PURE__*/ defineChain({\n  id: 2358,\n  network: 'kroma-sepolia',\n  name: 'Kroma Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.sepolia.kroma.network'],\n    },\n    public: {\n      http: ['https://api.sepolia.kroma.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Kroma Sepolia Explorer',\n      url: 'https://blockscout.sepolia.kroma.network',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const linea = /*#__PURE__*/ defineChain({\n  id: 59_144,\n  name: 'Linea Mainnet',\n  network: 'linea-mainnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    infura: {\n      http: ['https://linea-mainnet.infura.io/v3'],\n      webSocket: ['wss://linea-mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.linea.build'],\n      webSocket: ['wss://rpc.linea.build'],\n    },\n    public: {\n      http: ['https://rpc.linea.build'],\n      webSocket: ['wss://rpc.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://lineascan.build',\n    },\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://lineascan.build',\n    },\n    blockscout: {\n      name: 'Blockscout',\n      url: 'https://explorer.linea.build',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 42,\n    },\n  },\n  testnet: false,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const lineaTestnet = /*#__PURE__*/ defineChain({\n  id: 59_140,\n  name: 'Linea Goerli Testnet',\n  network: 'linea-testnet',\n  nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    infura: {\n      http: ['https://linea-goerli.infura.io/v3'],\n      webSocket: ['wss://linea-goerli.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n    public: {\n      http: ['https://rpc.goerli.linea.build'],\n      webSocket: ['wss://rpc.goerli.linea.build'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n    },\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://goerli.lineascan.build',\n    },\n    blockscout: {\n      name: 'Blockscout',\n      url: 'https://explorer.goerli.linea.build',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 498623,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const localhost = /*#__PURE__*/ defineChain({\n  id: 1_337,\n  name: 'Localhost',\n  network: 'localhost',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['http://127.0.0.1:8545'] },\n    public: { http: ['http://127.0.0.1:8545'] },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const mainnet = /*#__PURE__*/ defineChain({\n  id: 1,\n  network: 'homestead',\n  name: 'Ethereum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://mainnet.infura.io/v3'],\n      webSocket: ['wss://mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://cloudflare-eth.com'],\n    },\n    public: {\n      http: ['https://cloudflare-eth.com'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62',\n      blockCreated: 16966585,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const mantle = /*#__PURE__*/ defineChain({\n  id: 5000,\n  name: 'Mantle',\n  network: 'mantle',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.mantle.xyz'] },\n    public: { http: ['https://rpc.mantle.xyz'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Mantle Explorer',\n      url: 'https://explorer.mantle.xyz',\n    },\n    default: {\n      name: 'Mantle Explorer',\n      url: 'https://explorer.mantle.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 304717,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const mantleTestnet = /*#__PURE__*/ defineChain({\n  id: 5001,\n  name: 'Mantle Testnet',\n  network: 'mantle',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MNT',\n    symbol: 'MNT',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.testnet.mantle.xyz'] },\n    public: { http: ['https://rpc.testnet.mantle.xyz'] },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.testnet.mantle.xyz',\n    },\n    default: {\n      name: 'Mantle Testnet Explorer',\n      url: 'https://explorer.testnet.mantle.xyz',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const meter = /*#__PURE__*/ defineChain({\n  id: 82,\n  name: 'Meter',\n  network: 'meter',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.meter.io'] },\n    public: { http: ['https://rpc.meter.io'] },\n  },\n  blockExplorers: {\n    default: { name: 'MeterScan', url: 'https://scan.meter.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const meterTestnet = /*#__PURE__*/ defineChain({\n  id: 83,\n  name: 'Meter Testnet',\n  network: 'meter-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MTR',\n    symbol: 'MTR',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpctest.meter.io'] },\n    public: { http: ['https://rpctest.meter.io'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'MeterTestnetScan',\n      url: 'https://scan-warringstakes.meter.io',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const metis = /*#__PURE__*/ defineChain({\n  id: 1_088,\n  name: 'Metis',\n  network: 'andromeda',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://andromeda.metis.io/?owner=1088'] },\n    public: { http: ['https://andromeda.metis.io/?owner=1088'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Andromeda Explorer',\n      url: 'https://andromeda-explorer.metis.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 2338552,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const metisGoerli = /*#__PURE__*/ defineChain({\n  id: 599,\n  name: 'Metis Goerli',\n  network: 'metis-goerli',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Metis Goerli',\n    symbol: 'METIS',\n  },\n  rpcUrls: {\n    default: { http: ['https://goerli.gateway.metisdevops.link'] },\n    public: { http: ['https://goerli.gateway.metisdevops.link'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Metis Goerli Explorer',\n      url: 'https://goerli.explorer.metisdevops.link',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1006207,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const mev = /*#__PURE__*/ defineChain({\n  id: 7518,\n  network: 'MEVerse',\n  name: 'MEVerse Chain Mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversemainnet.io'],\n    },\n    public: {\n      http: ['https://rpc.meversemainnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://www.meversescan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 86881340,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const mevTestnet = /*#__PURE__*/ defineChain({\n  id: 4759,\n  network: 'MEVerse Testnet',\n  name: 'MEVerse Chain Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MEVerse',\n    symbol: 'MEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.meversetestnet.io'],\n    },\n    public: {\n      http: ['https://rpc.meversetestnet.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Explorer',\n      url: 'https://testnet.meversescan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 64371115,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const modeTestnet = /*#__PURE__*/ defineChain({\n  id: 919,\n  name: 'Mode Testnet',\n  network: 'mode-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.mode.network'],\n    },\n    public: {\n      http: ['https://sepolia.mode.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia.explorer.mode.network',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const moonbaseAlpha = /*#__PURE__*/ defineChain({\n  id: 1287,\n  name: 'Moonbase Alpha',\n  network: 'moonbase-alpha',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'DEV',\n    symbol: 'DEV',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.api.moonbase.moonbeam.network'],\n      webSocket: ['wss://wss.api.moonbase.moonbeam.network'],\n    },\n    public: {\n      http: ['https://rpc.api.moonbase.moonbeam.network'],\n      webSocket: ['wss://wss.api.moonbase.moonbeam.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonbase.moonscan.io',\n    },\n    etherscan: {\n      name: 'Moonscan',\n      url: 'https://moonbase.moonscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1850686,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const moonbeam = /*#__PURE__*/ defineChain({\n  id: 1284,\n  name: 'Moonbeam',\n  network: 'moonbeam',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'GLMR',\n    symbol: 'GLMR',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://moonbeam.public.blastapi.io'],\n      webSocket: ['wss://moonbeam.public.blastapi.io'],\n    },\n    default: {\n      http: ['https://moonbeam.public.blastapi.io'],\n      webSocket: ['wss://moonbeam.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonscan.io',\n    },\n    etherscan: {\n      name: 'Moonscan',\n      url: 'https://moonscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 609002,\n    },\n  },\n  testnet: false,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const moonriver = /*#__PURE__*/ defineChain({\n  id: 1285,\n  name: 'Moonriver',\n  network: 'moonriver',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'MOVR',\n    symbol: 'MOVR',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://moonriver.public.blastapi.io'],\n      webSocket: ['wss://moonriver.public.blastapi.io'],\n    },\n    default: {\n      http: ['https://moonriver.public.blastapi.io'],\n      webSocket: ['wss://moonriver.public.blastapi.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Moonscan',\n      url: 'https://moonriver.moonscan.io',\n    },\n    etherscan: {\n      name: 'Moonscan',\n      url: 'https://moonriver.moonscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1597904,\n    },\n  },\n  testnet: false,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const neonDevnet = /*#__PURE__*/ defineChain({\n  id: 245_022_926,\n  network: 'neonDevnet',\n  name: 'Neon EVM DevNet',\n  nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://devnet.neonevm.org'],\n    },\n    public: {\n      http: ['https://devnet.neonevm.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Neonscan',\n      url: 'https://neonscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 205206112,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const nexi = /*#__PURE__*/ defineChain({\n  id: 4242,\n  name: 'Nexi',\n  network: 'nexi',\n  nativeCurrency: { name: 'Nexi', symbol: 'NEXI', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.chain.nexi.technology'],\n    },\n    public: {\n      http: ['https://rpc.chain.nexi.technology'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'NexiScan',\n      url: 'https://www.nexiscan.com',\n    },\n    default: {\n      name: 'NexiScan',\n      url: 'https://www.nexiscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0277A46Cc69A57eE3A6C8c158bA874832F718B8E',\n      blockCreated: 25770160,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const nexilix = /*#__PURE__*/ defineChain({\n  id: 240,\n  name: 'Nexilix Smart Chain',\n  network: 'nexilix',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Nexilix',\n    symbol: 'NEXILIX',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpcurl.pos.nexilix.com'] },\n    public: { http: ['https://rpcurl.pos.nexilix.com'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'NexilixScan', url: 'https://scan.nexilix.com' },\n    default: { name: 'NexilixScan', url: 'https://scan.nexilix.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x58381c8e2BF9d0C2C4259cA14BdA9Afe02831244',\n      blockCreated: 74448,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const oasys = /*#__PURE__*/ defineChain({\n  id: 248,\n  name: 'Oasys',\n  network: 'oasys',\n  nativeCurrency: { name: 'Oasys', symbol: 'OAS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.oasys.games'],\n    },\n    public: {\n      http: ['https://rpc.mainnet.oasys.games'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'OasysScan',\n      url: 'https://scan.oasys.games',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const okc = /*#__PURE__*/ defineChain({\n  id: 66,\n  name: 'OKC',\n  network: 'okc',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'OKT',\n    symbol: 'OKT',\n  },\n  rpcUrls: {\n    default: { http: ['https://exchainrpc.okex.org'] },\n    public: { http: ['https://exchainrpc.okex.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'oklink', url: 'https://www.oklink.com/okc' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 10364792,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const optimism = /*#__PURE__*/ defineChain(\n  {\n    id: 10,\n    name: 'OP Mainnet',\n    network: 'optimism',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n      alchemy: {\n        http: ['https://opt-mainnet.g.alchemy.com/v2'],\n        webSocket: ['wss://opt-mainnet.g.alchemy.com/v2'],\n      },\n      infura: {\n        http: ['https://optimism-mainnet.infura.io/v3'],\n        webSocket: ['wss://optimism-mainnet.infura.io/ws/v3'],\n      },\n      default: {\n        http: ['https://mainnet.optimism.io'],\n      },\n      public: {\n        http: ['https://mainnet.optimism.io'],\n      },\n    },\n    blockExplorers: {\n      etherscan: {\n        name: 'Etherscan',\n        url: 'https://optimistic.etherscan.io',\n      },\n      default: {\n        name: 'Optimism Explorer',\n        url: 'https://explorer.optimism.io',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xca11bde05977b3631167028862be2a173976ca11',\n        blockCreated: 4286263,\n      },\n    },\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const optimismGoerli = /*#__PURE__*/ defineChain(\n  {\n    id: 420,\n    name: 'Optimism Goerli',\n    network: 'optimism-goerli',\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n      alchemy: {\n        http: ['https://opt-goerli.g.alchemy.com/v2'],\n        webSocket: ['wss://opt-goerli.g.alchemy.com/v2'],\n      },\n      infura: {\n        http: ['https://optimism-goerli.infura.io/v3'],\n        webSocket: ['wss://optimism-goerli.infura.io/ws/v3'],\n      },\n      default: {\n        http: ['https://goerli.optimism.io'],\n      },\n      public: {\n        http: ['https://goerli.optimism.io'],\n      },\n    },\n    blockExplorers: {\n      etherscan: {\n        name: 'Etherscan',\n        url: 'https://goerli-optimism.etherscan.io',\n      },\n      default: {\n        name: 'Etherscan',\n        url: 'https://goerli-optimism.etherscan.io',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xca11bde05977b3631167028862be2a173976ca11',\n        blockCreated: 49461,\n      },\n    },\n    testnet: true,\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const opBNB = /*#__PURE__*/ defineChain({\n  id: 204,\n  name: 'opBNB',\n  network: 'opBNB Mainnet',\n  nativeCurrency: {\n    name: 'BNB',\n    symbol: 'BNB',\n    decimals: 18,\n  },\n  rpcUrls: {\n    public: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n    default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'opbnbscan', url: 'https://mainnet.opbnbscan.com' },\n  },\n\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 512881,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const opBNBTestnet = /*#__PURE__*/ defineChain({\n  id: 5611,\n  name: 'opBNB Testnet',\n  network: 'opBNB Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'tBNB',\n    symbol: 'tBNB',\n  },\n  rpcUrls: {\n    public: { http: ['https://opbnb-testnet-rpc.bnbchain.org'] },\n    default: { http: ['https://opbnb-testnet-rpc.bnbchain.org'] },\n  },\n  blockExplorers: {\n    default: { name: 'opbnbscan', url: 'https://opbnbscan.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3705108,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const plinga = /*#__PURE__*/ defineChain({\n  id: 242,\n  name: 'Plinga',\n  network: 'plinga',\n  nativeCurrency: { name: 'Plinga', symbol: 'PLINGA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpcurl.mainnet.plgchain.com'],\n    },\n    public: {\n      http: ['https://rpcurl.mainnet.plgchain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Plgscan',\n      url: 'https://www.plgscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x0989576160f2e7092908BB9479631b901060b6e4',\n      blockCreated: 204489,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const polygon = /*#__PURE__*/ defineChain({\n  id: 137,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://polygon-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://polygon-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://polygon-mainnet.infura.io/v3'],\n      webSocket: ['wss://polygon-mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://polygon-rpc.com'],\n    },\n    public: {\n      http: ['https://polygon-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n    },\n    default: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const polygonMumbai = /*#__PURE__*/ defineChain({\n  id: 80_001,\n  name: 'Polygon Mumbai',\n  network: 'maticmum',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://polygon-mumbai.g.alchemy.com/v2'],\n      webSocket: ['wss://polygon-mumbai.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://polygon-mumbai.infura.io/v3'],\n      webSocket: ['wss://polygon-mumbai.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.ankr.com/polygon_mumbai'],\n    },\n    public: {\n      http: ['https://rpc.ankr.com/polygon_mumbai'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'PolygonScan',\n      url: 'https://mumbai.polygonscan.com',\n    },\n    default: {\n      name: 'PolygonScan',\n      url: 'https://mumbai.polygonscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const polygonZkEvmTestnet = /*#__PURE__*/ defineChain({\n  id: 1442,\n  name: 'Polygon zkEVM Testnet',\n  network: 'polygon-zkevm-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.public.zkevm-test.net'],\n    },\n    public: {\n      http: ['https://rpc.public.zkevm-test.net'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'Blockscout',\n      url: 'https://explorer.public.zkevm-test.net',\n    },\n    default: {\n      name: 'PolygonScan',\n      url: 'https://testnet-zkevm.polygonscan.com',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 525686,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n  id: 1101,\n  name: 'Polygon zkEVM',\n  network: 'polygon-zkevm',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://zkevm-rpc.com'],\n    },\n    public: {\n      http: ['https://zkevm-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PolygonScan',\n      url: 'https://zkevm.polygonscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 57746,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const pulsechain = /*#__PURE__*/ defineChain({\n  id: 369,\n  network: 'pulsechain',\n  name: 'PulseChain',\n  nativeCurrency: { name: 'Pulse', symbol: 'PLS', decimals: 18 },\n  testnet: false,\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.pulsechain.com'],\n      webSocket: ['wss://ws.pulsechain.com'],\n    },\n    public: {\n      http: ['https://rpc.pulsechain.com'],\n      webSocket: ['wss://ws.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.pulsechain.com',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const pulsechainV4 = /*#__PURE__*/ defineChain({\n  id: 943,\n  network: 'pulsechainV4',\n  name: 'PulseChain V4',\n  testnet: true,\n  nativeCurrency: { name: 'V4 Pulse', symbol: 'v4PLS', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.v4.testnet.pulsechain.com'],\n      webSocket: ['wss://ws.v4.testnet.pulsechain.com'],\n    },\n    public: {\n      http: ['https://rpc.v4.testnet.pulsechain.com'],\n      webSocket: ['wss://ws.v4.testnet.pulsechain.com'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'PulseScan',\n      url: 'https://scan.v4.testnet.pulsechain.com',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const qMainnet = /*#__PURE__*/ defineChain({\n  id: 35441,\n  name: 'Q Mainnet',\n  network: 'q-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.q.org'] },\n    public: { http: ['https://rpc.q.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Mainnet Explorer',\n      url: 'https://explorer.q.org',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const qTestnet = /*#__PURE__*/ defineChain({\n  id: 35443,\n  name: 'Q Testnet',\n  network: 'q-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Q',\n    symbol: 'Q',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.qtestnet.org'] },\n    public: { http: ['https://rpc.qtestnet.org'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Q Testnet Explorer',\n      url: 'https://explorer.qtestnet.org',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const rollux = /*#__PURE__*/ defineChain({\n  id: 570,\n  name: 'Rollux Mainnet',\n  network: 'rollux',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.rollux.com'],\n      webSocket: ['wss://rpc.rollux.com/wss'],\n    },\n    public: { http: ['https://rollux.public-rpc.com'] },\n  },\n  blockExplorers: {\n    default: { name: 'RolluxExplorer', url: 'https://explorer.rollux.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 119222,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const rolluxTestnet = /*#__PURE__*/ defineChain({\n  id: 57000,\n  name: 'Rollux Testnet',\n  network: 'rollux-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-tanenbaum.rollux.com/'],\n      webSocket: ['wss://rpc-tanenbaum.rollux.com/wss'],\n    },\n    public: { http: ['https://rpc-tanenbaum.rollux.com/'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'RolluxTestnetExplorer',\n      url: 'https://rollux.tanenbaum.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1813675,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const ronin = /*#__PURE__*/ defineChain({\n  id: 2020,\n  name: 'Ronin',\n  network: 'ronin',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://api.roninchain.com/rpc'],\n    },\n    public: {\n      http: ['https://api.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'Ronin Explorer', url: 'https://app.roninchain.com' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 26023535,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const saigon = /*#__PURE__*/ defineChain({\n  id: 2021,\n  name: 'Saigon Testnet',\n  network: 'saigon',\n  nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://saigon-testnet.roninchain.com/rpc'],\n    },\n    public: {\n      http: ['https://saigon-testnet.roninchain.com/rpc'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Saigon Explorer',\n      url: 'https://saigon-explorer.roninchain.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 18736871,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const scrollSepolia = /*#__PURE__*/ defineChain({\n  id: 534_351,\n  name: 'Scroll Sepolia',\n  network: 'scroll-sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia-rpc.scroll.io'],\n      webSocket: ['wss://sepolia-rpc.scroll.io/ws'],\n    },\n    public: {\n      http: ['https://sepolia-rpc.scroll.io'],\n      webSocket: ['wss://sepolia-rpc.scroll.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://sepolia-blockscout.scroll.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 9473,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const scrollTestnet = /*#__PURE__*/ defineChain({\n  id: 534_353,\n  name: 'Scroll Testnet',\n  network: 'scroll-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://alpha-rpc.scroll.io/l2'],\n      webSocket: ['wss://alpha-rpc.scroll.io/l2/ws'],\n    },\n    public: {\n      http: ['https://alpha-rpc.scroll.io/l2'],\n      webSocket: ['wss://alpha-rpc.scroll.io/l2/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Blockscout',\n      url: 'https://blockscout.scroll.io',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const sepolia = /*#__PURE__*/ defineChain({\n  id: 11_155_111,\n  network: 'sepolia',\n  name: 'Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'SEP', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-sepolia.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-sepolia.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://sepolia.infura.io/v3'],\n      webSocket: ['wss://sepolia.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.sepolia.org'],\n    },\n    public: {\n      http: ['https://rpc.sepolia.org'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6507670,\n    },\n    ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n    ensUniversalResolver: {\n      address: '0x21B000Fd62a880b2125A61e36a284BB757b76025',\n      blockCreated: 3914906,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleBlockBrawlers = /*#__PURE__*/ defineChain({\n  id: 391_845_894,\n  name: 'SKALE | Block Brawlers',\n  network: 'skale-brawl',\n  nativeCurrency: { name: 'BRAWL', symbol: 'BRAWL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/frayed-decent-antares'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/frayed-decent-antares'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://frayed-decent-antares.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://frayed-decent-antares.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleCalypso = /*#__PURE__*/ defineChain({\n  id: 1_564_830_818,\n  name: 'SKALE | Calypso NFT Hub',\n  network: 'skale-calypso',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague',\n      ],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3107626,\n    },\n  },\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleCalypsoTestnet = /*#__PURE__*/ defineChain({\n  id: 344_106_930,\n  name: 'SKALE | Calypso NFT Hub Testnet',\n  network: 'skale-calypso-testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-utter-unripe-menkar',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-utter-unripe-menkar',\n      ],\n    },\n    public: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-utter-unripe-menkar',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-utter-unripe-menkar',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2131424,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleChaosTestnet = /*#__PURE__*/ defineChain({\n  id: 1_351_057_110,\n  name: 'SKALE | Chaos Testnet',\n  network: 'skale-chaos-testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-fast-active-bellatrix',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-fast-active-bellatrix',\n      ],\n    },\n    public: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-fast-active-bellatrix',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-fast-active-bellatrix',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-fast-active-bellatrix.explorer.staging-v3.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-fast-active-bellatrix.explorer.staging-v3.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 1192202,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleCryptoBlades = /*#__PURE__*/ defineChain({\n  id: 1_026_062_157,\n  name: 'SKALE | CryptoBlades',\n  network: 'skale-cryptoblades',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux',\n      ],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux'],\n      webSocket: [\n        'wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleCryptoColosseum = /*#__PURE__*/ defineChain({\n  id: 2_046_399_126,\n  name: 'SKALE | Crypto Colosseum',\n  network: 'skale-crypto-coloseeum',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/haunting-devoted-deneb'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/haunting-devoted-deneb'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleEuropa = /*#__PURE__*/ defineChain({\n  id: 2_046_399_126,\n  name: 'SKALE | Europa Liquidity Hub',\n  network: 'skale-europa',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/elated-tan-skat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/elated-tan-skat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://elated-tan-skat.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://elated-tan-skat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 3113495,\n    },\n  },\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleEuropaTestnet = /*#__PURE__*/ defineChain({\n  id: 476_158_412,\n  name: 'SKALE | Europa Liquidity Hub Testnet',\n  network: 'skale-europa-testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://staging-v3.skalenodes.com/v1/staging-legal-crazy-castor'],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-legal-crazy-castor',\n      ],\n    },\n    public: {\n      http: ['https://staging-v3.skalenodes.com/v1/staging-legal-crazy-castor'],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-legal-crazy-castor',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-legal-crazy-castor.explorer.staging-v3.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-legal-crazy-castor.explorer.staging-v3.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2071911,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleExorde = /*#__PURE__*/ defineChain({\n  id: 2_139_927_552,\n  name: 'SKALE | Exorde',\n  network: 'skale-exorde',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/light-vast-diphda'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/light-vast-diphda'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://light-vast-diphda.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://light-vast-diphda.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleHumanProtocol = /*#__PURE__*/ defineChain({\n  id: 1_273_227_453,\n  name: 'SKALE | Human Protocol',\n  network: 'skale-human-protocol',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/wan-red-ain'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/wan-red-ain'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/wan-red-ain'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/wan-red-ain'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://wan-red-ain.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://wan-red-ain.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleNebula = /*#__PURE__*/ defineChain({\n  id: 1_482_601_649,\n  name: 'SKALE | Nebula Gaming Hub',\n  network: 'skale-nebula',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/green-giddy-denebola'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/green-giddy-denebola'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://green-giddy-denebola.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://green-giddy-denebola.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2372986,\n    },\n  },\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleNebulaTestnet = /*#__PURE__*/ defineChain({\n  id: 503_129_905,\n  name: 'SKALE | Nebula Gaming Hub Testnet',\n  network: 'skale-nebula-testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://staging-v3.skalenodes.com/v1/staging-faint-slimy-achird'],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-faint-slimy-achird',\n      ],\n    },\n    public: {\n      http: ['https://staging-v3.skalenodes.com/v1/staging-faint-slimy-achird'],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-faint-slimy-achird',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-faint-slimy-achird.explorer.staging-v3.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-faint-slimy-achird.explorer.staging-v3.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2205882,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleRazor = /*#__PURE__*/ defineChain({\n  id: 278_611_351,\n  name: 'SKALE | Razor Network',\n  network: 'skale-razor',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/turbulent-unique-scheat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/turbulent-unique-scheat'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {},\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleTitan = /*#__PURE__*/ defineChain({\n  id: 1_350_216_234,\n  name: 'SKALE | Titan Community Hub',\n  network: 'skale-titan',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.skalenodes.com/v1/parallel-stormy-spica'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica'],\n    },\n    public: {\n      http: ['https://mainnet.skalenodes.com/v1/parallel-stormy-spica'],\n      webSocket: ['wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica'],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://parallel-stormy-spica.explorer.mainnet.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://parallel-stormy-spica.explorer.mainnet.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2076458,\n    },\n  },\n})\n", "import { defineChain } from '../../../utils/chain.js'\n\nexport const skaleTitanTestnet = /*#__PURE__*/ defineChain({\n  id: 1_517_929_550,\n  name: 'SKALE | Titan Community Hub Testnet',\n  network: 'skale-titan-testnet',\n  nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-aware-chief-gianfar',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-aware-chief-gianfar',\n      ],\n    },\n    public: {\n      http: [\n        'https://staging-v3.skalenodes.com/v1/staging-aware-chief-gianfar',\n      ],\n      webSocket: [\n        'wss://staging-v3.skalenodes.com/v1/ws/staging-aware-chief-gianfar',\n      ],\n    },\n  },\n  blockExplorers: {\n    blockscout: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-aware-chief-gianfar.explorer.staging-v3.skalenodes.com',\n    },\n    default: {\n      name: 'SKALE Explorer',\n      url: 'https://staging-aware-chief-gianfar.explorer.staging-v3.skalenodes.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 2085155,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const songbird = /*#__PURE__*/ defineChain({\n  id: 19,\n  name: 'Songbird Mainnet',\n  network: 'songbird-mainnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'songbird',\n    symbol: 'SGB',\n  },\n  rpcUrls: {\n    default: { http: ['https://songbird-api.flare.network/ext/C/rpc'] },\n    public: { http: ['https://songbird-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Songbird Explorer',\n      url: 'https://songbird-explorer.flare.network',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const songbirdTestnet = /*#__PURE__*/ defineChain({\n  id: 16,\n  name: 'Coston',\n  network: 'coston',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'costonflare',\n    symbol: 'CFLR',\n  },\n  rpcUrls: {\n    default: { http: ['https://coston-api.flare.network/ext/C/rpc'] },\n    public: { http: ['https://coston-api.flare.network/ext/C/rpc'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Coston Explorer',\n      url: 'https://coston-explorer.flare.network',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const shardeumSphinx = /*#__PURE__*/ defineChain({\n  id: 8082,\n  name: 'Shardeum Sphinx',\n  network: 'shmSphinx',\n  nativeCurrency: { name: 'SHARDEUM', symbol: 'SHM', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sphinx.shardeum.org'],\n    },\n    public: {\n      http: ['https://sphinx.shardeum.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Shardeum Explorer',\n      url: 'https://explorer-sphinx.shardeum.org',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const syscoin = /*#__PURE__*/ defineChain({\n  id: 57,\n  name: 'Syscoin Mainnet',\n  network: 'syscoin',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.syscoin.org'],\n      webSocket: ['wss://rpc.syscoin.org/wss'],\n    },\n    public: {\n      http: ['https://rpc.syscoin.org'],\n      webSocket: ['wss://rpc.syscoin.org/wss'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'SyscoinExplorer', url: 'https://explorer.syscoin.org' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 287139,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const syscoinTestnet = /*#__PURE__*/ defineChain({\n  id: 5700,\n  name: 'Syscoin Tanenbaum Testnet',\n  network: 'syscoin-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Syscoin',\n    symbol: 'SYS',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.tanenbaum.io'],\n      webSocket: ['wss://rpc.tanenbaum.io/wss'],\n    },\n    public: {\n      http: ['https://rpc.tanenbaum.io'],\n      webSocket: ['wss://rpc.tanenbaum.io/wss'],\n    },\n  },\n  blockExplorers: {\n    default: { name: 'SyscoinTestnetExplorer', url: 'https://tanenbaum.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 271288,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const taraxa = /*#__PURE__*/ defineChain({\n  id: 841,\n  name: 'Taraxa Mainnet',\n  network: 'taraxa',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.mainnet.taraxa.io'],\n    },\n    public: {\n      http: ['https://rpc.mainnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.mainnet.taraxa.io',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const taikoJolnir = /*#__PURE__*/ defineChain({\n  id: 167007,\n  name: 'Taiko Jolnir L2',\n  network: 'tko-jolnir',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://jolnir.taiko.xyz'],\n    },\n    public: {\n      http: ['https://jolnir.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.jolnir.taiko.xyz',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const taikoTestnetSepolia = /*#__PURE__*/ defineChain({\n  id: 167005,\n  name: 'Taiko (Alpha-3 Testnet)',\n  network: 'taiko-sepolia',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.test.taiko.xyz'],\n    },\n    public: {\n      http: ['https://rpc.test.taiko.xyz'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'blockscout',\n      url: 'https://explorer.test.taiko.xyz',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const taraxaTestnet = /*#__PURE__*/ defineChain({\n  id: 842,\n  name: 'Taraxa Testnet',\n  network: 'taraxa-testnet',\n  nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.testnet.taraxa.io'],\n    },\n    public: {\n      http: ['https://rpc.testnet.taraxa.io'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Taraxa Explorer',\n      url: 'https://explorer.testnet.taraxa.io',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const telos = /*#__PURE__*/ defineChain({\n  id: 40,\n  name: 'Telos',\n  network: 'telos',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://mainnet.telos.net/evm'] },\n    public: { http: ['https://mainnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan',\n      url: 'https://www.teloscan.io/',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n      blockCreated: 246530709,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const telosTestnet = /*#__PURE__*/ defineChain({\n  id: 41,\n  name: 'Telos',\n  network: 'telosTestnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Telos',\n    symbol: 'TLOS',\n  },\n  rpcUrls: {\n    default: { http: ['https://testnet.telos.net/evm'] },\n    public: { http: ['https://testnet.telos.net/evm'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Teloscan (testnet)',\n      url: 'https://testnet.teloscan.io/',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const thunderTestnet = /*#__PURE__*/ defineChain({\n  id: 997,\n  name: '5ireChain Thunder Testnet',\n  network: '5ireChain',\n  nativeCurrency: { name: '5ire Token', symbol: '5IRE', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc-testnet.5ire.network'],\n    },\n    public: {\n      http: ['https://rpc-testnet.5ire.network'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: '5ireChain Explorer',\n      url: 'https://explorer.5ire.network',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const vechain = /*#__PURE__*/ defineChain({\n  id: 100009,\n  name: 'Vechain',\n  network: 'vechain',\n  nativeCurrency: { name: 'VeChain', symbol: 'VET', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.vechain.org'],\n    },\n    public: {\n      http: ['https://mainnet.vechain.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Vechain Explorer',\n      url: 'https://explore.vechain.org',\n    },\n    vechainStats: {\n      name: 'Vechain Stats',\n      url: 'https://vechainstats.com',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const wanchain = /*#__PURE__*/ defineChain({\n  id: 888,\n  name: 'Wanchain',\n  network: 'wanchain',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WAN', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: [\n        'https://gwan-ssl.wandevs.org:56891',\n        'https://gwan2-ssl.wandevs.org',\n      ],\n    },\n    public: {\n      http: [\n        'https://gwan-ssl.wandevs.org:56891',\n        'https://gwan2-ssl.wandevs.org',\n      ],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'WanScan',\n      url: 'https://wanscan.org',\n    },\n    default: {\n      name: 'WanScan',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xcDF6A1566e78EB4594c86Fe73Fcdc82429e97fbB',\n      blockCreated: 25312390,\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const wanchainTestnet = /*#__PURE__*/ defineChain({\n  id: 999,\n  name: 'Wanchain Testnet',\n  network: 'wanchainTestnet',\n  nativeCurrency: { name: 'WANCHAIN', symbol: 'WANt', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://gwan-ssl.wandevs.org:46891'],\n    },\n    public: {\n      http: ['https://gwan-ssl.wandevs.org:46891'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'WanScanTest',\n      url: 'https://wanscan.org',\n    },\n    default: {\n      name: 'WanScanTest',\n      url: 'https://wanscan.org',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0x11c89bF4496c39FB80535Ffb4c92715839CC5324',\n      blockCreated: 24743448,\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const xdc = /*#__PURE__*/ defineChain({\n  id: 50,\n  name: 'XinFin Network',\n  network: 'xdc',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'XDC',\n    symbol: 'XDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://rpc.xinfin.network'] },\n    public: { http: ['https://rpc.xinfin.network'] },\n  },\n  blockExplorers: {\n    xinfin: { name: 'XinFin', url: 'https://explorer.xinfin.network' },\n    default: { name: 'Blocksscan', url: 'https://xdc.blocksscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const xdcTestnet = /*#__PURE__*/ defineChain({\n  id: 51,\n  name: 'Apothem Network',\n  network: 'xdc-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'TXDC',\n    symbol: 'TXDC',\n  },\n  rpcUrls: {\n    default: { http: ['https://erpc.apothem.network'] },\n    public: { http: ['https://erpc.apothem.network'] },\n  },\n  blockExplorers: {\n    xinfin: { name: 'XinFin', url: 'https://explorer.apothem.network' },\n    default: { name: 'Blocksscan', url: 'https://apothem.blocksscan.io' },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const zhejiang = /*#__PURE__*/ defineChain({\n  id: 1_337_803,\n  network: 'zhejiang',\n  name: 'Zhejiang',\n  nativeCurrency: { name: 'Zhejiang Ether', symbol: 'ZhejETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://rpc.zhejiang.ethpandaops.io'],\n    },\n    public: {\n      http: ['https://rpc.zhejiang.ethpandaops.io'],\n    },\n  },\n  blockExplorers: {\n    beaconchain: {\n      name: 'Etherscan',\n      url: 'https://zhejiang.beaconcha.in',\n    },\n    blockscout: {\n      name: 'Blockscout',\n      url: 'https://blockscout.com/eth/zhejiang-testnet',\n    },\n    default: {\n      name: 'Beaconchain',\n      url: 'https://zhejiang.beaconcha.in',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const zkSync = /*#__PURE__*/ defineChain({\n  id: 324,\n  name: 'zkSync Era',\n  network: 'zksync-era',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.era.zksync.io'],\n      webSocket: ['wss://mainnet.era.zksync.io/ws'],\n    },\n    public: {\n      http: ['https://mainnet.era.zksync.io'],\n      webSocket: ['wss://mainnet.era.zksync.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://explorer.zksync.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const zkSyncTestnet = /*#__PURE__*/ defineChain({\n  id: 280,\n  name: 'zkSync Era Testnet',\n  network: 'zksync-era-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://testnet.era.zksync.dev'],\n      webSocket: ['wss://testnet.era.zksync.dev/ws'],\n    },\n    public: {\n      http: ['https://testnet.era.zksync.dev'],\n      webSocket: ['wss://testnet.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'zkExplorer',\n      url: 'https://goerli.explorer.zksync.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\n\nexport const zetachainAthensTestnet = /*#__PURE__*/ defineChain({\n  id: 7001,\n  name: 'ZetaChain Athens Testnet',\n  network: 'zetachain-athens-testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Zeta',\n    symbol: 'aZETA',\n  },\n  rpcUrls: {\n    public: {\n      http: ['https://zetachain-athens-evm.blockpi.network/v1/rpc/public'],\n    },\n    default: {\n      http: ['https://zetachain-athens-evm.blockpi.network/v1/rpc/public'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'ZetaScan',\n      url: 'https://athens3.explorer.zetachain.com',\n    },\n  },\n  testnet: true,\n})\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const zora = /*#__PURE__*/ defineChain(\n  {\n    id: 7777777,\n    name: 'Zora',\n    network: 'zora',\n    nativeCurrency: {\n      decimals: 18,\n      name: 'Ether',\n      symbol: 'ETH',\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://rpc.zora.energy'],\n        webSocket: ['wss://rpc.zora.energy'],\n      },\n      public: {\n        http: ['https://rpc.zora.energy'],\n        webSocket: ['wss://rpc.zora.energy'],\n      },\n    },\n    blockExplorers: {\n      default: { name: 'Explorer', url: 'https://explorer.zora.energy' },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        blockCreated: 5882,\n      },\n    },\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "import { defineChain } from '../../utils/chain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const zoraTestnet = /*#__PURE__*/ defineChain(\n  {\n    id: 999,\n    name: 'Zora Goerli Testnet',\n    network: 'zora-testnet',\n    nativeCurrency: {\n      decimals: 18,\n      name: 'Zora Goerli',\n      symbol: 'ETH',\n    },\n    rpcUrls: {\n      default: {\n        http: ['https://testnet.rpc.zora.energy'],\n        webSocket: ['wss://testnet.rpc.zora.energy'],\n      },\n      public: {\n        http: ['https://testnet.rpc.zora.energy'],\n        webSocket: ['wss://testnet.rpc.zora.energy'],\n      },\n    },\n    blockExplorers: {\n      default: {\n        name: 'Explorer',\n        url: 'https://testnet.explorer.zora.energy',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        blockCreated: 189123,\n      },\n    },\n    testnet: true,\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n", "export type { Chain } from '../types/chain.js'\n\nexport { arbitrum } from './definitions/arbitrum.js'\nexport { arbitrumGoerli } from './definitions/arbitrumGoerli.js'\nexport { arbitrumNova } from './definitions/arbitrumNova.js'\nexport { aurora } from './definitions/aurora.js'\nexport { auroraTestnet } from './definitions/auroraTestnet.js'\nexport { avalanche } from './definitions/avalanche.js'\nexport { avalancheFuji } from './definitions/avalancheFuji.js'\nexport { base } from './definitions/base.js'\nexport { baseGoerli } from './definitions/baseGoerli.js'\nexport { bearNetworkChainMainnet } from './definitions/bearNetworkChainMainnet.js'\nexport { bearNetworkChainTestnet } from './definitions/bearNetworkChainTestnet.js'\nexport { boba } from './definitions/boba.js'\nexport { bronos } from './definitions/bronos.js'\nexport { bronosTestnet } from './definitions/bronosTestnet.js'\nexport { bsc } from './definitions/bsc.js'\nexport { bscTestnet } from './definitions/bscTestnet.js'\nexport { bxn } from './definitions/bxn.js'\nexport { bxnTestnet } from './definitions/bxnTestnet.js'\nexport { canto } from './definitions/canto.js'\nexport { celo } from './definitions/celo.js'\nexport { celoAlfajores } from './definitions/celoAlfajores.js'\nexport { celoCannoli } from './definitions/celoCannoli.js'\nexport { classic } from './definitions/classic.js'\nexport { confluxESpace } from './definitions/confluxESpace.js'\nexport { cronos } from './definitions/cronos.js'\nexport { cronosTestnet } from './definitions/cronosTestnet.js'\nexport { crossbell } from './definitions/crossbell.js'\nexport { dfk } from './definitions/dfk.js'\nexport { dogechain } from './definitions/dogechain.js'\nexport { edgeware } from './definitions/edgeware.js'\nexport { edgewareTestnet } from './definitions/edgewareTestnet.js'\nexport { eos } from './definitions/eos.js'\nexport { eosTestnet } from './definitions/eosTestnet.js'\nexport { evmos } from './definitions/evmos.js'\nexport { evmosTestnet } from './definitions/evmosTestnet.js'\nexport { ekta } from './definitions/ekta.js'\nexport { ektaTestnet } from './definitions/ektaTestnet.js'\nexport { fantom } from './definitions/fantom.js'\nexport { fantomTestnet } from './definitions/fantomTestnet.js'\nexport { fibo } from './definitions/fibo.js'\nexport { filecoin } from './definitions/filecoin.js'\nexport { filecoinCalibration } from './definitions/filecoinCalibration.js'\nexport { filecoinHyperspace } from './definitions/filecoinHyperspace.js'\nexport { flare } from './definitions/flare.js'\nexport { flareTestnet } from './definitions/flareTestnet.js'\nexport { foundry } from './definitions/foundry.js'\nexport { fuse } from './definitions/fuse.js'\nexport { fuseSparknet } from './definitions/fuseSparknet.js'\nexport { iotex } from './definitions/iotex.js'\nexport { iotexTestnet } from './definitions/iotexTestnet.js'\nexport { gobi } from './definitions/gobi.js'\nexport { goerli } from './definitions/goerli.js'\nexport { gnosis } from './definitions/gnosis.js'\nexport { gnosisChiado } from './definitions/gnosisChiado.js'\nexport { hardhat } from './definitions/hardhat.js'\nexport { harmonyOne } from './definitions/harmonyOne.js'\nexport { haqqMainnet } from './definitions/haqqMainnet.js'\nexport { haqqTestedge2 } from './definitions/haqqTestedge2.js'\nexport { holesky } from './definitions/holesky.js'\nexport { klaytn } from './definitions/klaytn.js'\nexport { kroma } from './definitions/kroma.js'\nexport { kromaSepolia } from './definitions/kromaSepolia.js'\nexport { linea } from './definitions/linea.js'\nexport { lineaTestnet } from './definitions/lineaTestnet.js'\nexport { localhost } from './definitions/localhost.js'\nexport { mainnet } from './definitions/mainnet.js'\nexport { mantle } from './definitions/mantle.js'\nexport { mantleTestnet } from './definitions/mantleTestnet.js'\nexport { meter } from './definitions/meter.js'\nexport { meterTestnet } from './definitions/meterTestnet.js'\nexport { metis } from './definitions/metis.js'\nexport { metisGoerli } from './definitions/metisGoerli.js'\nexport { mev } from './definitions/mev.js'\nexport { mevTestnet } from './definitions/mevTestnet.js'\nexport { modeTestnet } from './definitions/modeTestnet.js'\nexport { moonbaseAlpha } from './definitions/moonbaseAlpha.js'\nexport { moonbeam } from './definitions/moonbeam.js'\nexport { moonriver } from './definitions/moonriver.js'\nexport { neonDevnet } from './definitions/neonDevnet.js'\nexport { nexi } from './definitions/nexi.js'\nexport { nexilix } from './definitions/nexilix.js'\nexport { oasys } from './definitions/oasys.js'\nexport { okc } from './definitions/okc.js'\nexport { optimism } from './definitions/optimism.js'\nexport { optimismGoerli } from './definitions/optimismGoerli.js'\nexport { opBNB } from './definitions/opBNB.js'\nexport { opBNBTestnet } from './definitions/opBNBTestnet.js'\nexport { plinga } from './definitions/plinga.js'\nexport { polygon } from './definitions/polygon.js'\nexport { polygonMumbai } from './definitions/polygonMumbai.js'\nexport { polygonZkEvmTestnet } from './definitions/polygonZkEvmTestnet.js'\nexport { polygonZkEvm } from './definitions/polygonZkEvm.js'\nexport { pulsechain } from './definitions/pulsechain.js'\nexport { pulsechainV4 } from './definitions/pulsechainV4.js'\nexport { qMainnet } from './definitions/qMainnet.js'\nexport { qTestnet } from './definitions/qTestnet.js'\nexport { rollux } from './definitions/rollux.js'\nexport { rolluxTestnet } from './definitions/rolluxTestnet.js'\nexport { ronin } from './definitions/ronin.js'\nexport { saigon } from './definitions/saigon.js'\nexport { scrollSepolia } from './definitions/scrollSepolia.js'\nexport { scrollTestnet } from './definitions/scrollTestnet.js'\nexport { sepolia } from './definitions/sepolia.js'\nexport { skaleBlockBrawlers } from './definitions/skale/brawl.js'\nexport { skaleCalypso } from './definitions/skale/calypso.js'\nexport { skaleCalypsoTestnet } from './definitions/skale/calypsoTestnet.js'\nexport { skaleChaosTestnet } from './definitions/skale/chaosTestnet.js'\nexport { skaleCryptoBlades } from './definitions/skale/cryptoBlades.js'\nexport { skaleCryptoColosseum } from './definitions/skale/cryptoColosseum.js'\nexport { skaleEuropa } from './definitions/skale/europa.js'\nexport { skaleEuropaTestnet } from './definitions/skale/europaTestnet.js'\nexport { skaleExorde } from './definitions/skale/exorde.js'\nexport { skaleHumanProtocol } from './definitions/skale/humanProtocol.js'\nexport { skaleNebula } from './definitions/skale/nebula.js'\nexport { skaleNebulaTestnet } from './definitions/skale/nebulaTestnet.js'\nexport { skaleRazor } from './definitions/skale/razor.js'\nexport { skaleTitan } from './definitions/skale/titan.js'\nexport { skaleTitanTestnet } from './definitions/skale/titanTestnet.js'\nexport { songbird } from './definitions/songbird.js'\nexport { songbirdTestnet } from './definitions/songbirdTestnet.js'\nexport { shardeumSphinx } from './definitions/shardeumSphinx.js'\nexport { syscoin } from './definitions/syscoin.js'\nexport { syscoinTestnet } from './definitions/syscoinTestnet.js'\nexport { taraxa } from './definitions/taraxa.js'\nexport { taikoJolnir } from './definitions/taikoJolnir.js'\nexport { taikoTestnetSepolia } from './definitions/taikoTestnetSepolia.js'\nexport { taraxaTestnet } from './definitions/taraxaTestnet.js'\nexport { telos } from './definitions/telos.js'\nexport { telosTestnet } from './definitions/telosTestnet.js'\nexport { thunderTestnet } from './definitions/thunderTestnet.js'\nexport { vechain } from './definitions/vechain.js'\nexport { wanchain } from './definitions/wanchain.js'\nexport { wanchainTestnet } from './definitions/wanchainTestnet.js'\nexport { xdc } from './definitions/xdc.js'\nexport { xdcTestnet } from './definitions/xdcTestnet.js'\nexport { zhejiang } from './definitions/zhejiang.js'\nexport { zkSync } from './definitions/zkSync.js'\nexport { zkSyncTestnet } from './definitions/zkSyncTestnet.js'\nexport { zetachainAthensTestnet } from './definitions/zetachainAthensTestnet.js'\nexport { zora } from './definitions/zora.js'\nexport { zoraTestnet } from './definitions/zoraTestnet.js'\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/index.ts\nvar _chains = require('viem/chains');\n\n\n\n\nexports.mainnet = _chains.mainnet; exports.sepolia = _chains.sepolia;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/errors.ts\nvar ChainNotConfiguredForConnectorError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    this.name = \"ChainNotConfiguredForConnectorError\";\n  }\n};\nvar ConnectorNotFoundError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorNotFoundError\";\n    this.message = \"Connector not found\";\n  }\n};\n\n\n\n\nexports.ChainNotConfiguredForConnectorError = ChainNotConfiguredForConnectorError; exports.ConnectorNotFoundError = ConnectorNotFoundError;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/utils/normalizeChainId.ts\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\")\n    return Number.parseInt(\n      chainId,\n      chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10\n    );\n  if (typeof chainId === \"bigint\")\n    return Number(chainId);\n  return chainId;\n}\n\n\n\nexports.normalizeChainId = normalizeChainId;\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/base.ts\nvar _eventemitter3 = require('eventemitter3'); var _eventemitter32 = _interopRequireDefault(_eventemitter3);\nvar _chains = require('viem/chains');\nvar Connector = class extends _eventemitter32.default {\n  constructor({\n    chains = [_chains.mainnet, _chains.goerli],\n    options\n  }) {\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const { default: blockExplorer, ...blockExplorers } = _nullishCoalesce(chain.blockExplorers, () => ( {}));\n    if (blockExplorer)\n      return [\n        blockExplorer.url,\n        ...Object.values(blockExplorers).map((x) => x.url)\n      ];\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some((x) => x.id === chainId);\n  }\n  setStorage(storage) {\n    this.storage = storage;\n  }\n};\n\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod; exports.Connector = Connector;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkUGBGYVBHjs = require('./chunk-UGBGYVBH.js');\n\n\nvar _chunkOQILYQDOjs = require('./chunk-OQILYQDO.js');\n\n\nvar _chunkW65LBPLTjs = require('./chunk-W65LBPLT.js');\n\n\n\n\n\nexports.ChainNotConfiguredForConnectorError = _chunkUGBGYVBHjs.ChainNotConfiguredForConnectorError; exports.Connector = _chunkW65LBPLTjs.Connector; exports.ConnectorNotFoundError = _chunkUGBGYVBHjs.ConnectorNotFoundError; exports.normalizeChainId = _chunkOQILYQDOjs.normalizeChainId;\n", "export const version = '0.9.8'\n", "import type { OneOf, Pretty } from './types.js'\nimport { version } from './version.js'\n\ntype BaseErrorArgs = Pretty<\n  {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n  } & OneOf<{ details?: string | undefined } | { cause?: BaseError | Error }>\n>\n\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'AbiTypeError'\n\n  constructor(shortMessage: string, args: BaseErrorArgs = {}) {\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n        ? args.cause.message\n        : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: abitype@${version}`,\n    ].join('\\n')\n\n    super(message)\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n}\n", "/**\n * Infers embedded primitive type of any type\n *\n * @param T - Type to infer\n * @returns Embedded type of {@link TType}\n *\n * @example\n * type Result = Narrow<['foo', 'bar', 1]>\n */\n// s/o https://twitter.com/hd_nvim/status/1578567206190780417\nexport type Narrow<TType> =\n  | (unknown extends TType ? unknown : never)\n  | (TType extends Function ? TType : never)\n  | (TType extends bigint | boolean | number | string ? TType : never)\n  | (TType extends [] ? [] : never)\n  | { [K in keyof TType]: Narrow<TType[K]> }\n\n/**\n * Infers embedded primitive type of any type\n * Same as `as const` but without setting the object as readonly and without needing the user to use it.\n *\n * @param value - Value to infer\n * @returns Value with embedded type inferred\n *\n * @example\n * const result = narrow(['foo', 'bar', 1])\n */\nexport function narrow<TType>(value: Narrow<TType>) {\n  return value\n}\n", "// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped<T>(regex: RegExp, string: string) {\n  const match = regex.exec(string)\n  return match?.groups as T | undefined\n}\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const isTupleRegex = /^\\(.+?\\).*?$/\n", "import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport { execTyped } from '../regex.js'\nimport type { IsNarrowable, Join } from '../types.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param TAbiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * type Result = FormatAbiParameter<{ type: 'address'; name: 'from'; }>\n * //   ^? type Result = 'address from'\n */\nexport type FormatAbiParameter<\n  TAbiParameter extends AbiParameter | AbiEventParameter,\n> = TAbiParameter extends {\n  name?: infer Name extends string\n  type: `tuple${infer Array}`\n  components: infer Components extends readonly AbiParameter[]\n  indexed?: infer Indexed extends boolean\n}\n  ? FormatAbiParameter<\n      {\n        type: `(${Join<\n          {\n            [K in keyof Components]: FormatAbiParameter<\n              {\n                type: Components[K]['type']\n              } & (IsNarrowable<Components[K]['name'], string> extends true\n                ? { name: Components[K]['name'] }\n                : unknown) &\n                (Components[K] extends { components: readonly AbiParameter[] }\n                  ? { components: Components[K]['components'] }\n                  : unknown)\n            >\n          },\n          ', '\n        >})${Array}`\n      } & (IsNarrowable<Name, string> extends true ? { name: Name } : unknown) &\n        (IsNarrowable<Indexed, boolean> extends true\n          ? { indexed: Indexed }\n          : unknown)\n    >\n  : `${TAbiParameter['type']}${TAbiParameter extends { indexed: true }\n      ? ' indexed'\n      : ''}${TAbiParameter['name'] extends infer Name extends string\n      ? Name extends ''\n        ? ''\n        : ` ${AssertName<Name>}`\n      : ''}`\n\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter<\n  const TAbiParameter extends AbiParameter | AbiEventParameter,\n>(abiParameter: TAbiParameter): FormatAbiParameter<TAbiParameter> {\n  type Result = FormatAbiParameter<TAbiParameter>\n\n  let type = abiParameter.type\n  if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n    type = '('\n    const length = abiParameter.components.length as number\n    for (let i = 0; i < length; i++) {\n      const component = abiParameter.components[i]!\n      type += formatAbiParameter(component)\n      if (i < length - 1) type += ', '\n    }\n    const result = execTyped<{ array?: string }>(tupleRegex, abiParameter.type)\n    type += `)${result?.array ?? ''}`\n    return formatAbiParameter({\n      ...abiParameter,\n      type,\n    }) as Result\n  }\n  // Add `indexed` to type if in `abiParameter`\n  if ('indexed' in abiParameter && abiParameter.indexed)\n    type = `${type} indexed`\n  // Return human-readable ABI parameter\n  if (abiParameter.name) return `${type} ${abiParameter.name}` as Result\n  return type as Result\n}\n", "import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport type { Join } from '../types.js'\nimport {\n  type FormatAbiParameter,\n  formatAbiParameter,\n} from './formatAbiParameter.js'\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameter.\n *\n * @param TAbiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * type Result = FormatAbiParameters<[\n *   // ^? type Result = 'address from, uint256 tokenId'\n *   { type: 'address'; name: 'from'; },\n *   { type: 'uint256'; name: 'tokenId'; },\n * ]>\n */\nexport type FormatAbiParameters<\n  TAbiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n> = Join<\n  {\n    [K in keyof TAbiParameters]: FormatAbiParameter<TAbiParameters[K]>\n  },\n  ', '\n>\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters<\n  const TAbiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n>(abiParameters: TAbiParameters): FormatAbiParameters<TAbiParameters> {\n  let params = ''\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    params += formatAbiParameter(abiParameter)\n    if (i !== length - 1) params += ', '\n  }\n  return params as FormatAbiParameters<TAbiParameters>\n}\n", "import type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiParameter,\n  AbiReceive,\n  AbiStateMutability,\n} from '../abi.js'\nimport {\n  type FormatAbiParameters as FormatAbiParameters_,\n  formatAbiParameters,\n} from './formatAbiParameters.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param TAbiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport type FormatAbiItem<TAbiItem extends Abi[number]> =\n  Abi[number] extends TAbiItem\n    ? string\n    :\n        | (TAbiItem extends AbiFunction\n            ? AbiFunction extends TAbiItem\n              ? string\n              : `function ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})${TAbiItem['stateMutability'] extends Exclude<\n                  AbiStateMutability,\n                  'nonpayable'\n                >\n                  ? ` ${TAbiItem['stateMutability']}`\n                  : ''}${TAbiItem['outputs']['length'] extends 0\n                  ? ''\n                  : ` returns (${FormatAbiParameters<TAbiItem['outputs']>})`}`\n            : never)\n        | (TAbiItem extends AbiEvent\n            ? AbiEvent extends TAbiItem\n              ? string\n              : `event ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})`\n            : never)\n        | (TAbiItem extends AbiError\n            ? AbiError extends TAbiItem\n              ? string\n              : `error ${AssertName<TAbiItem['name']>}(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})`\n            : never)\n        | (TAbiItem extends AbiConstructor\n            ? AbiConstructor extends TAbiItem\n              ? string\n              : `constructor(${FormatAbiParameters<\n                  TAbiItem['inputs']\n                >})${TAbiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (TAbiItem extends AbiFallback\n            ? AbiFallback extends TAbiItem\n              ? string\n              : 'fallback()'\n            : never)\n        | (TAbiItem extends AbiReceive\n            ? AbiReceive extends TAbiItem\n              ? string\n              : 'receive() external payable'\n            : never)\n\ntype FormatAbiParameters<\n  TAbiParameters extends readonly (AbiParameter | AbiEventParameter)[],\n> = TAbiParameters['length'] extends 0\n  ? ''\n  : FormatAbiParameters_<\n      TAbiParameters extends readonly [\n        AbiParameter | AbiEventParameter,\n        ...(readonly (AbiParameter | AbiEventParameter)[]),\n      ]\n        ? TAbiParameters\n        : never\n    >\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem<const TAbiItem extends Abi[number]>(\n  abiItem: TAbiItem,\n): FormatAbiItem<TAbiItem> {\n  type Result = FormatAbiItem<TAbiItem>\n  type Params = readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ]\n\n  if (abiItem.type === 'function')\n    return `function ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})${\n      abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n        ? ` ${abiItem.stateMutability}`\n        : ''\n    }${\n      abiItem.outputs.length\n        ? ` returns (${formatAbiParameters(abiItem.outputs as Params)})`\n        : ''\n    }`\n  else if (abiItem.type === 'event')\n    return `event ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  else if (abiItem.type === 'error')\n    return `error ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  else if (abiItem.type === 'constructor')\n    return `constructor(${formatAbiParameters(abiItem.inputs as Params)})${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }`\n  else if (abiItem.type === 'fallback') return 'fallback()' as Result\n  return 'receive() external payable' as Result\n}\n", "import type { Abi } from '../abi.js'\nimport { type FormatAbiItem, formatAbiItem } from './formatAbiItem.js'\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param TAbi - ABI\n * @returns Human-readable ABI\n */\nexport type FormatAbi<TAbi extends Abi | readonly unknown[]> = Abi extends TAbi\n  ? readonly string[]\n  : TAbi extends readonly []\n  ? never\n  : TAbi extends Abi\n  ? {\n      [K in keyof TAbi]: FormatAbiItem<TAbi[K]>\n    }\n  : readonly string[]\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport function formatAbi<const TAbi extends Abi | readonly unknown[]>(\n  abi: TAbi,\n): FormatAbi<TAbi> {\n  const signatures = []\n  const length = abi.length\n  for (let i = 0; i < length; i++) {\n    const abiItem = abi[i]!\n    const signature = formatAbiItem(abiItem as Abi[number])\n    signatures.push(signature)\n  }\n  return signatures as unknown as FormatAbi<TAbi>\n}\n", "import type { AbiStateMutability } from '../../abi.js'\nimport { execTyped } from '../../regex.js'\nimport type {\n  EventModifier,\n  FunctionModifier,\n  Modifier,\n} from '../types/signatures.js'\n\n// https://regexr.com/7gmok\nconst errorSignatureRegex =\n  /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isErrorSignature(signature: string) {\n  return errorSignatureRegex.test(signature)\n}\nexport function execErrorSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    errorSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmoq\nconst eventSignatureRegex =\n  /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isEventSignature(signature: string) {\n  return eventSignatureRegex.test(signature)\n}\nexport function execEventSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    eventSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmot\nconst functionSignatureRegex =\n  /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$/\nexport function isFunctionSignature(signature: string) {\n  return functionSignatureRegex.test(signature)\n}\nexport function execFunctionSignature(signature: string) {\n  return execTyped<{\n    name: string\n    parameters: string\n    stateMutability?: AbiStateMutability\n    returns?: string\n  }>(functionSignatureRegex, signature)\n}\n\n// https://regexr.com/7gmp3\nconst structSignatureRegex =\n  /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$/\nexport function isStructSignature(signature: string) {\n  return structSignatureRegex.test(signature)\n}\nexport function execStructSignature(signature: string) {\n  return execTyped<{ name: string; properties: string }>(\n    structSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/78u01\nconst constructorSignatureRegex =\n  /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isConstructorSignature(signature: string) {\n  return constructorSignatureRegex.test(signature)\n}\nexport function execConstructorSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(constructorSignatureRegex, signature)\n}\n\n// https://regexr.com/78u18\nconst fallbackSignatureRegex = /^fallback\\(\\)$/\nexport function isFallbackSignature(signature: string) {\n  return fallbackSignatureRegex.test(signature)\n}\n\n// https://regexr.com/78u1k\nconst receiveSignatureRegex = /^receive\\(\\) external payable$/\nexport function isReceiveSignature(signature: string) {\n  return receiveSignatureRegex.test(signature)\n}\n\nexport const modifiers = new Set<Modifier>([\n  'memory',\n  'indexed',\n  'storage',\n  'calldata',\n])\nexport const eventModifiers = new Set<EventModifier>(['indexed'])\nexport const functionModifiers = new Set<FunctionModifier>([\n  'calldata',\n  'memory',\n  'storage',\n])\n", "import { BaseError } from '../../errors.js'\n\nexport class InvalidAbiItemError extends BaseError {\n  override name = 'InvalidAbiItemError'\n\n  constructor({ signature }: { signature: string | object }) {\n    super('Failed to parse ABI item.', {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: '/api/human.html#parseabiitem-1',\n    })\n  }\n}\n\nexport class UnknownTypeError extends BaseError {\n  override name = 'UnknownTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [\n        `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,\n      ],\n    })\n  }\n}\n\nexport class UnknownSolidityTypeError extends BaseError {\n  override name = 'UnknownSolidityTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [`Type \"${type}\" is not a valid ABI type.`],\n    })\n  }\n}\n", "import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n", "import type { AbiItemType } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\n\nexport class InvalidSignatureError extends BaseError {\n  override name = 'InvalidSignatureError'\n\n  constructor({\n    signature,\n    type,\n  }: {\n    signature: string\n    type: AbiItemType | 'struct'\n  }) {\n    super(`Invalid ${type} signature.`, {\n      details: signature,\n    })\n  }\n}\n\nexport class UnknownSignatureError extends BaseError {\n  override name = 'UnknownSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Unknown signature.', {\n      details: signature,\n    })\n  }\n}\n\nexport class InvalidStructSignatureError extends BaseError {\n  override name = 'InvalidStructSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Invalid struct signature.', {\n      details: signature,\n      metaMessages: ['No properties exist.'],\n    })\n  }\n}\n", "import { BaseError } from '../../errors.js'\n\nexport class CircularReferenceError extends BaseError {\n  override name = 'CircularReferenceError'\n\n  constructor({ type }: { type: string }) {\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`],\n    })\n  }\n}\n", "import { BaseError } from '../../errors.js'\n\nexport class InvalidParenthesisError extends BaseError {\n  override name = 'InvalidParenthesisError'\n\n  constructor({ current, depth }: { current: string; depth: number }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [\n        `\"${current.trim()}\" has too many ${\n          depth > 0 ? 'opening' : 'closing'\n        } parentheses.`,\n      ],\n      details: `Depth \"${depth}\"`,\n    })\n  }\n}\n", "import type { AbiItemType, AbiParameter } from '../../abi.js'\n\n/**\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\n * @param param ABI parameter string\n * @param type ABI parameter type\n * @returns Cache key for {@link parameterCache}\n */\nexport function getParameterCacheKey(\n  param: string,\n  type?: AbiItemType | 'struct',\n) {\n  if (type) return `${type}:${param}`\n  return param\n}\n\n/**\n * Basic cache seeded with common ABI parameter strings.\n *\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\n */\nexport const parameterCache = new Map<\n  string,\n  AbiParameter & { indexed?: boolean }\n>([\n  // Unnamed\n  ['address', { type: 'address' }],\n  ['bool', { type: 'bool' }],\n  ['bytes', { type: 'bytes' }],\n  ['bytes32', { type: 'bytes32' }],\n  ['int', { type: 'int256' }],\n  ['int256', { type: 'int256' }],\n  ['string', { type: 'string' }],\n  ['uint', { type: 'uint256' }],\n  ['uint8', { type: 'uint8' }],\n  ['uint16', { type: 'uint16' }],\n  ['uint24', { type: 'uint24' }],\n  ['uint32', { type: 'uint32' }],\n  ['uint64', { type: 'uint64' }],\n  ['uint96', { type: 'uint96' }],\n  ['uint112', { type: 'uint112' }],\n  ['uint160', { type: 'uint160' }],\n  ['uint192', { type: 'uint192' }],\n  ['uint256', { type: 'uint256' }],\n\n  // Named\n  ['address owner', { type: 'address', name: 'owner' }],\n  ['address to', { type: 'address', name: 'to' }],\n  ['bool approved', { type: 'bool', name: 'approved' }],\n  ['bytes _data', { type: 'bytes', name: '_data' }],\n  ['bytes data', { type: 'bytes', name: 'data' }],\n  ['bytes signature', { type: 'bytes', name: 'signature' }],\n  ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\n  ['bytes32 r', { type: 'bytes32', name: 'r' }],\n  ['bytes32 root', { type: 'bytes32', name: 'root' }],\n  ['bytes32 s', { type: 'bytes32', name: 's' }],\n  ['string name', { type: 'string', name: 'name' }],\n  ['string symbol', { type: 'string', name: 'symbol' }],\n  ['string tokenURI', { type: 'string', name: 'tokenURI' }],\n  ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint8 v', { type: 'uint8', name: 'v' }],\n  ['uint256 balance', { type: 'uint256', name: 'balance' }],\n  ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint256 value', { type: 'uint256', name: 'value' }],\n\n  // Indexed\n  [\n    'event:address indexed from',\n    { type: 'address', name: 'from', indexed: true },\n  ],\n  ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\n  [\n    'event:uint indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n  [\n    'event:uint256 indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n])\n", "import type {\n  AbiItemType,\n  AbiType,\n  SolidityArray,\n  SolidityBytes,\n  SolidityString,\n  SolidityTuple,\n} from '../../abi.js'\nimport {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex,\n} from '../../regex.js'\nimport { UnknownSolidityTypeError } from '../errors/abiItem.js'\nimport {\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  SolidityProtectedKeywordError,\n} from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from '../errors/signature.js'\nimport { InvalidParenthesisError } from '../errors/splitParameters.js'\nimport type { FunctionModifier, Modifier } from '../types/signatures.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { getParameterCacheKey, parameterCache } from './cache.js'\nimport {\n  eventModifiers,\n  execConstructorSignature,\n  execErrorSignature,\n  execEventSignature,\n  execFunctionSignature,\n  functionModifiers,\n  isConstructorSignature,\n  isErrorSignature,\n  isEventSignature,\n  isFallbackSignature,\n  isFunctionSignature,\n  isReceiveSignature,\n} from './signatures.js'\n\nexport function parseSignature(signature: string, structs: StructLookup = {}) {\n  if (isFunctionSignature(signature)) {\n    const match = execFunctionSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'function' })\n\n    const inputParams = splitParameters(match.parameters)\n    const inputs = []\n    const inputLength = inputParams.length\n    for (let i = 0; i < inputLength; i++) {\n      inputs.push(\n        parseAbiParameter(inputParams[i]!, {\n          modifiers: functionModifiers,\n          structs,\n          type: 'function',\n        }),\n      )\n    }\n\n    const outputs = []\n    if (match.returns) {\n      const outputParams = splitParameters(match.returns)\n      const outputLength = outputParams.length\n      for (let i = 0; i < outputLength; i++) {\n        outputs.push(\n          parseAbiParameter(outputParams[i]!, {\n            modifiers: functionModifiers,\n            structs,\n            type: 'function',\n          }),\n        )\n      }\n    }\n\n    return {\n      name: match.name,\n      type: 'function',\n      stateMutability: match.stateMutability ?? 'nonpayable',\n      inputs,\n      outputs,\n    }\n  }\n\n  if (isEventSignature(signature)) {\n    const match = execEventSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'event' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, {\n          modifiers: eventModifiers,\n          structs,\n          type: 'event',\n        }),\n      )\n    }\n    return { name: match.name, type: 'event', inputs: abiParameters }\n  }\n\n  if (isErrorSignature(signature)) {\n    const match = execErrorSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'error' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, { structs, type: 'error' }),\n      )\n    }\n    return { name: match.name, type: 'error', inputs: abiParameters }\n  }\n\n  if (isConstructorSignature(signature)) {\n    const match = execConstructorSignature(signature)\n    if (!match)\n      throw new InvalidSignatureError({ signature, type: 'constructor' })\n\n    const params = splitParameters(match.parameters)\n    const abiParameters = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i]!, { structs, type: 'constructor' }),\n      )\n    }\n    return {\n      type: 'constructor',\n      stateMutability: match.stateMutability ?? 'nonpayable',\n      inputs: abiParameters,\n    }\n  }\n\n  if (isFallbackSignature(signature)) return { type: 'fallback' }\n  if (isReceiveSignature(signature))\n    return {\n      type: 'receive',\n      stateMutability: 'payable',\n    }\n\n  throw new UnknownSignatureError({ signature })\n}\n\nconst abiParameterWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst abiParameterWithTupleRegex =\n  /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst dynamicIntegerRegex = /^u?int$/\n\ntype ParseOptions = {\n  modifiers?: Set<Modifier>\n  structs?: StructLookup\n  type?: AbiItemType | 'struct'\n}\n\nexport function parseAbiParameter(param: string, options?: ParseOptions) {\n  // optional namespace cache by `type`\n  const parameterCacheKey = getParameterCacheKey(param, options?.type)\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey)!\n\n  const isTuple = isTupleRegex.test(param)\n  const match = execTyped<{\n    array?: string\n    modifier?: Modifier\n    name?: string\n    type: string\n  }>(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param,\n  )\n  if (!match) throw new InvalidParameterError({ param })\n\n  if (match.name && isSolidityKeyword(match.name))\n    throw new SolidityProtectedKeywordError({ param, name: match.name })\n\n  const name = match.name ? { name: match.name } : {}\n  const indexed = match.modifier === 'indexed' ? { indexed: true } : {}\n  const structs = options?.structs ?? {}\n  let type: string\n  let components = {}\n  if (isTuple) {\n    type = 'tuple'\n    const params = splitParameters(match.type)\n    const components_ = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      // remove `modifiers` from `options` to prevent from being added to tuple components\n      components_.push(parseAbiParameter(params[i]!, { structs }))\n    }\n    components = { components: components_ }\n  } else if (match.type in structs) {\n    type = 'tuple'\n    components = { components: structs[match.type] }\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`\n  } else {\n    type = match.type\n    if (!(options?.type === 'struct') && !isSolidityType(type))\n      throw new UnknownSolidityTypeError({ type })\n  }\n\n  if (match.modifier) {\n    // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new InvalidModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n\n    // Check if resolved `type` is valid if there is a function modifier\n    if (\n      functionModifiers.has(match.modifier as FunctionModifier) &&\n      !isValidDataLocation(type, !!match.array)\n    )\n      throw new InvalidFunctionModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n  }\n\n  const abiParameter = {\n    type: `${type}${match.array ?? ''}`,\n    ...name,\n    ...indexed,\n    ...components,\n  }\n  parameterCache.set(parameterCacheKey, abiParameter)\n  return abiParameter\n}\n\n// s/o latika for this\nexport function splitParameters(\n  params: string,\n  result: string[] = [],\n  current = '',\n  depth = 0,\n): readonly string[] {\n  if (params === '') {\n    if (current === '') return result\n    if (depth !== 0) throw new InvalidParenthesisError({ current, depth })\n\n    result.push(current.trim())\n    return result\n  }\n\n  const length = params.length\n  // rome-ignore lint/correctness/noUnreachable: recursive\n  for (let i = 0; i < length; i++) {\n    const char = params[i]\n    const tail = params.slice(i + 1)\n    switch (char) {\n      case ',':\n        return depth === 0\n          ? splitParameters(tail, [...result, current.trim()])\n          : splitParameters(tail, result, `${current}${char}`, depth)\n      case '(':\n        return splitParameters(tail, result, `${current}${char}`, depth + 1)\n      case ')':\n        return splitParameters(tail, result, `${current}${char}`, depth - 1)\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth)\n    }\n  }\n\n  return []\n}\n\nexport function isSolidityType(\n  type: string,\n): type is Exclude<AbiType, SolidityTuple | SolidityArray> {\n  return (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'function' ||\n    type === 'string' ||\n    bytesRegex.test(type) ||\n    integerRegex.test(type)\n  )\n}\n\nconst protectedKeywordsRegex =\n  /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/\n\nexport function isSolidityKeyword(name: string) {\n  return (\n    name === 'address' ||\n    name === 'bool' ||\n    name === 'function' ||\n    name === 'string' ||\n    name === 'tuple' ||\n    bytesRegex.test(name) ||\n    integerRegex.test(name) ||\n    protectedKeywordsRegex.test(name)\n  )\n}\n\nexport function isValidDataLocation(\n  type: string,\n  isArray: boolean,\n): type is Exclude<\n  AbiType,\n  SolidityString | Extract<SolidityBytes, 'bytes'> | SolidityArray\n> {\n  return isArray || type === 'bytes' || type === 'string' || type === 'tuple'\n}\n", "import type { AbiParameter } from '../../abi.js'\nimport { execTyped, isTupleRegex } from '../../regex.js'\nimport { UnknownTypeError } from '../errors/abiItem.js'\nimport { InvalidAbiTypeParameterError } from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n} from '../errors/signature.js'\nimport { CircularReferenceError } from '../errors/struct.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { execStructSignature, isStructSignature } from './signatures.js'\nimport { isSolidityType, parseAbiParameter } from './utils.js'\n\nexport function parseStructs(signatures: readonly string[]) {\n  // Create \"shallow\" version of each struct (and filter out non-structs or invalid structs)\n  const shallowStructs: StructLookup = {}\n  const signaturesLength = signatures.length\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i]!\n    if (!isStructSignature(signature)) continue\n\n    const match = execStructSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'struct' })\n\n    const properties = match.properties.split(';')\n\n    const components: AbiParameter[] = []\n    const propertiesLength = properties.length\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k]!\n      const trimmed = property.trim()\n      if (!trimmed) continue\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: 'struct',\n      })\n      components.push(abiParameter)\n    }\n\n    if (!components.length) throw new InvalidStructSignatureError({ signature })\n    shallowStructs[match.name] = components\n  }\n\n  // Resolve nested structs inside each parameter\n  const resolvedStructs: StructLookup = {}\n  const entries = Object.entries(shallowStructs)\n  const entriesLength = entries.length\n  for (let i = 0; i < entriesLength; i++) {\n    const [name, parameters] = entries[i]!\n    resolvedStructs[name] = resolveStructs(parameters, shallowStructs)\n  }\n\n  return resolvedStructs\n}\n\nconst typeWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/\n\nfunction resolveStructs(\n  abiParameters: readonly (AbiParameter & { indexed?: true })[],\n  structs: StructLookup,\n  ancestors = new Set<string>(),\n) {\n  const components: AbiParameter[] = []\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    const isTuple = isTupleRegex.test(abiParameter.type)\n    if (isTuple) components.push(abiParameter)\n    else {\n      const match = execTyped<{ array?: string; type: string }>(\n        typeWithoutTupleRegex,\n        abiParameter.type,\n      )\n      if (!match?.type) throw new InvalidAbiTypeParameterError({ abiParameter })\n\n      const { array, type } = match\n      if (type in structs) {\n        if (ancestors.has(type)) throw new CircularReferenceError({ type })\n\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? ''}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            new Set([...ancestors, type]),\n          ),\n        })\n      } else {\n        if (isSolidityType(type)) components.push(abiParameter)\n        else throw new UnknownTypeError({ type })\n      }\n    }\n  }\n\n  return components\n}\n", "import type { Abi } from '../abi.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param TSignatures - Human-readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * type Result = ParseAbi<\n *   // ^? type Result = readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   [\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'event Transfer(address indexed from, address indexed to, uint256 amount)',\n *   ]\n * >\n */\nexport type ParseAbi<TSignatures extends readonly string[]> =\n  string[] extends TSignatures\n    ? Abi // If `T` was not able to be inferred (e.g. just `string[]`), return `Abi`\n    : TSignatures extends readonly string[]\n    ? TSignatures extends Signatures<TSignatures> // Validate signatures\n      ? ParseStructs<TSignatures> extends infer Structs\n        ? {\n            [K in keyof TSignatures]: TSignatures[K] extends string\n              ? ParseSignature<TSignatures[K], Structs>\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never> extends infer Result\n            ? Result extends readonly []\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never\n    : never\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-Readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * const abi = parseAbi([\n *   //  ^? const abi: readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   'function balanceOf(address owner) view returns (uint256)',\n *   'event Transfer(address indexed from, address indexed to, uint256 amount)',\n * ])\n */\nexport function parseAbi<const TSignatures extends readonly string[]>(\n  signatures: TSignatures['length'] extends 0\n    ? Error<'At least one signature required'>\n    : Signatures<TSignatures> extends TSignatures\n    ? TSignatures\n    : Signatures<TSignatures>,\n): ParseAbi<TSignatures> {\n  const structs = parseStructs(signatures as readonly string[])\n  const abi = []\n  const length = signatures.length as number\n  for (let i = 0; i < length; i++) {\n    const signature = (signatures as readonly string[])[i]!\n    if (isStructSignature(signature)) continue\n    abi.push(parseSignature(signature, structs))\n  }\n  return abi as unknown as ParseAbi<TSignatures>\n}\n", "import type { Abi } from '../abi.js'\nimport { InvalidAbiItemError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signature, Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param TSignature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * type Result = ParseAbiItem<'function balanceOf(address owner) view returns (uint256)'>\n * //   ^? type Result = { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * type Result = ParseAbiItem<\n *   // ^? type Result = { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   ['function foo(Baz bar) view returns (string)', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiItem<\n  TSignature extends string | readonly string[] | readonly unknown[],\n> =\n  | (TSignature extends string\n      ? string extends TSignature\n        ? Abi[number]\n        : TSignature extends Signature<TSignature> // Validate signature\n        ? ParseSignature<TSignature>\n        : never\n      : never)\n  | (TSignature extends readonly string[]\n      ? string[] extends TSignature\n        ? Abi[number] // Return generic Abi item since type was no inferrable\n        : TSignature extends Signatures<TSignature> // Validate signature\n        ? ParseStructs<TSignature> extends infer Structs\n          ? {\n              [K in keyof TSignature]: ParseSignature<\n                TSignature[K] extends string ? TSignature[K] : never,\n                Structs\n              >\n            } extends infer Mapped extends readonly unknown[]\n            ? // Filter out `never` since those are structs\n              Filter<Mapped, never>[0] extends infer Result\n              ? Result extends undefined // convert `undefined` to `never` (e.g. `ParseAbiItem<['struct Foo { string name; }']>`)\n                ? never\n                : Result\n              : never\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\n * //    ^? const abiItem: { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * const abiItem = parseAbiItem([\n *   //  ^? const abiItem: { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   'function foo(Baz bar) view returns (string)',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiItem<\n  TSignature extends string | readonly string[] | readonly unknown[],\n>(\n  signature: Narrow<TSignature> &\n    (\n      | (TSignature extends string\n          ? string extends TSignature\n            ? unknown\n            : Signature<TSignature>\n          : never)\n      | (TSignature extends readonly string[]\n          ? TSignature extends readonly [] // empty array\n            ? Error<'At least one signature required.'>\n            : string[] extends TSignature\n            ? unknown\n            : Signatures<TSignature>\n          : never)\n    ),\n): ParseAbiItem<TSignature> {\n  let abiItem\n  if (typeof signature === 'string')\n    abiItem = parseSignature(signature) as ParseAbiItem<TSignature>\n  else {\n    const structs = parseStructs(signature as readonly string[])\n    const length = signature.length as number\n    for (let i = 0; i < length; i++) {\n      const signature_ = (signature as readonly string[])[i]!\n      if (isStructSignature(signature_)) continue\n      abiItem = parseSignature(signature_, structs)\n      break\n    }\n  }\n\n  if (!abiItem) throw new InvalidAbiItemError({ signature })\n  return abiItem as ParseAbiItem<TSignature>\n}\n", "import type { AbiParameter } from '../abi.js'\nimport { InvalidAbiParameterError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseAbiParameter as ParseAbiParameter_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param TParam - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * type Result = ParseAbiParameter<'address from'>\n * //   ^? type Result = { type: \"address\"; name: \"from\"; }\n *\n * @example\n * type Result = ParseAbiParameter<\n *   // ^? type Result = { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameter<\n  TParam extends string | readonly string[] | readonly unknown[],\n> =\n  | (TParam extends string\n      ? TParam extends ''\n        ? never\n        : string extends TParam\n        ? AbiParameter\n        : ParseAbiParameter_<TParam, { Modifier: Modifier }>\n      : never)\n  | (TParam extends readonly string[]\n      ? string[] extends TParam\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<TParam> extends infer Structs\n        ? {\n            [K in keyof TParam]: TParam[K] extends string\n              ? IsStructSignature<TParam[K]> extends true\n                ? never\n                : ParseAbiParameter_<\n                    TParam[K],\n                    { Modifier: Modifier; Structs: Structs }\n                  >\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never>[0] extends infer Result\n            ? Result extends undefined\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI parameter into {@link AbiParameter}\n *\n * @param param - Human-readable ABI parameter\n * @returns Parsed {@link AbiParameter}\n *\n * @example\n * const abiParameter = parseAbiParameter('address from')\n * //    ^? const abiParameter: { type: \"address\"; name: \"from\"; }\n *\n * @example\n * const abiParameter = parseAbiParameter([\n *   //  ^? const abiParameter: { type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameter<\n  TParam extends string | readonly string[] | readonly unknown[],\n>(\n  param: Narrow<TParam> &\n    (\n      | (TParam extends string\n          ? TParam extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (TParam extends readonly string[]\n          ? TParam extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends TParam\n            ? unknown\n            : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameter<TParam> {\n  let abiParameter\n  if (typeof param === 'string')\n    abiParameter = parseAbiParameter_(param, {\n      modifiers,\n    }) as ParseAbiParameter<TParam>\n  else {\n    const structs = parseStructs(param as readonly string[])\n    const length = param.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (param as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      abiParameter = parseAbiParameter_(signature, { modifiers, structs })\n      break\n    }\n  }\n\n  if (!abiParameter) throw new InvalidAbiParameterError({ param })\n\n  return abiParameter as ParseAbiParameter<TParam>\n}\n", "import type { AbiParameter } from '../abi.js'\nimport { InvalidAbiParametersError } from '../index.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { splitParameters } from './runtime/utils.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { SplitParameters } from './types/utils.js'\nimport type { ParseAbiParameters as ParseAbiParameters_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param TParams - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * type Result = ParseAbiParameters('address from, address to, uint256 amount')\n * //   ^? type Result: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * type Result = ParseAbiParameters<\n *   // ^? type Result: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameters<\n  TParams extends string | readonly string[] | readonly unknown[],\n> =\n  | (TParams extends string\n      ? TParams extends ''\n        ? never\n        : string extends TParams\n        ? readonly AbiParameter[]\n        : ParseAbiParameters_<SplitParameters<TParams>, { Modifier: Modifier }>\n      : never)\n  | (TParams extends readonly string[]\n      ? string[] extends TParams\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<TParams> extends infer Structs\n        ? {\n            [K in keyof TParams]: TParams[K] extends string\n              ? IsStructSignature<TParams[K]> extends true\n                ? never\n                : ParseAbiParameters_<\n                    SplitParameters<TParams[K]>,\n                    { Modifier: Modifier; Structs: Structs }\n                  >\n              : never\n          } extends infer Mapped extends readonly unknown[]\n          ? Filter<Mapped, never>[0] extends infer Result\n            ? Result extends undefined\n              ? never\n              : Result\n            : never\n          : never\n        : never\n      : never)\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * const abiParameters = parseAbiParameters('address from, address to, uint256 amount')\n * //    ^? const abiParameters: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * const abiParameters = parseAbiParameters([\n *   //  ^? const abiParameters: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameters<\n  TParams extends string | readonly string[] | readonly unknown[],\n>(\n  params: Narrow<TParams> &\n    (\n      | (TParams extends string\n          ? TParams extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (TParams extends readonly string[]\n          ? TParams extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends TParams\n            ? unknown\n            : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameters<TParams> {\n  const abiParameters: AbiParameter[] = []\n  if (typeof params === 'string') {\n    const parameters = splitParameters(params)\n    const length = parameters.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter_(parameters[i]!, { modifiers }))\n    }\n  } else {\n    const structs = parseStructs(params as readonly string[])\n    const length = params.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (params as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      const parameters = splitParameters(signature)\n      const length = parameters.length\n      for (let k = 0; k < length; k++) {\n        abiParameters.push(\n          parseAbiParameter_(parameters[k]!, { modifiers, structs }),\n        )\n      }\n    }\n  }\n\n  if (abiParameters.length === 0)\n    throw new InvalidAbiParametersError({ params })\n\n  return abiParameters as ParseAbiParameters<TParams>\n}\n", "export type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiInternalType,\n  AbiItemType,\n  AbiParameter,\n  AbiParameterKind,\n  AbiReceive,\n  AbiStateMutability,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArray,\n  SolidityArrayWithoutTuple,\n  SolidityArrayWithTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityFixedArrayRange,\n  SolidityFixedArraySizeLookup,\n  SolidityFunction,\n  SolidityInt,\n  SolidityString,\n  SolidityTuple,\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from './abi.js'\n\nexport type { Config, DefaultConfig, ResolvedConfig } from './config.js'\n\nexport { BaseError } from './errors.js'\n\nexport type { Narrow } from './narrow.js'\nexport { narrow } from './narrow.js'\n\nexport type {\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n  AbiTypeToPrimitiveType,\n  ExtractAbiError,\n  ExtractAbiErrorNames,\n  ExtractAbiErrors,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiEvents,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n  ExtractAbiFunctions,\n  IsAbi,\n  IsTypedData,\n  TypedDataToPrimitiveTypes,\n} from './utils.js'\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// Human-Readable\n\nexport {\n  formatAbi,\n  type FormatAbi,\n} from './human-readable/formatAbi.js'\n\nexport {\n  formatAbiItem,\n  type FormatAbiItem,\n} from './human-readable/formatAbiItem.js'\n\nexport {\n  formatAbiParameter,\n  type FormatAbiParameter,\n} from './human-readable/formatAbiParameter.js'\n\nexport {\n  formatAbiParameters,\n  type FormatAbiParameters,\n} from './human-readable/formatAbiParameters.js'\n\nexport { parseAbi, type ParseAbi } from './human-readable/parseAbi.js'\n\nexport {\n  parseAbiItem,\n  type ParseAbiItem,\n} from './human-readable/parseAbiItem.js'\n\nexport {\n  parseAbiParameter,\n  type ParseAbiParameter,\n} from './human-readable/parseAbiParameter.js'\n\nexport {\n  parseAbiParameters,\n  type ParseAbiParameters,\n} from './human-readable/parseAbiParameters.js'\n\nexport {\n  UnknownTypeError,\n  InvalidAbiItemError,\n  UnknownSolidityTypeError,\n} from './human-readable/errors/abiItem.js'\n\nexport {\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  SolidityProtectedKeywordError,\n  InvalidParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiParameterError,\n} from './human-readable/errors/abiParameter.js'\n\nexport {\n  InvalidStructSignatureError,\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from './human-readable/errors/signature.js'\n\nexport { InvalidParenthesisError } from './human-readable/errors/splitParameters.js'\n\nexport { CircularReferenceError } from './human-readable/errors/struct.js'\n", "import type { AbiParameter } from 'abitype'\n\nimport { InvalidDefinitionTypeError } from '../../errors/abi.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n", "import type { AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport class AbiConstructorNotFoundError extends BaseError {\n  override name = 'AbiConstructorNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  override name = 'AbiConstructorParamsNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  override name = 'AbiDecodingDataSizeInvalidError'\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      { metaMessages: [`Data: ${data} (${size} bytes)`] },\n    )\n  }\n}\n\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  override name = 'AbiDecodingDataSizeTooSmallError'\n\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport class AbiDecodingZeroDataError extends BaseError {\n  override name = 'AbiDecodingZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  override name = 'AbiEncodingBytesSizeMismatchError'\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  override name = 'AbiErrorInputsNotFoundError'\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiErrorNotFoundError extends BaseError {\n  override name = 'AbiErrorNotFoundError'\n  constructor(errorName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  override name = 'AbiErrorSignatureNotFoundError'\n\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  override name = 'AbiEventSignatureEmptyTopicsError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n    })\n  }\n}\n\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  override name = 'AbiEventSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiEventNotFoundError extends BaseError {\n  override name = 'AbiEventNotFoundError'\n  constructor(eventName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiFunctionNotFoundError extends BaseError {\n  override name = 'AbiFunctionNotFoundError'\n  constructor(functionName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  override name = 'AbiFunctionOutputsNotFoundError'\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  override name = 'AbiFunctionSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport class BytesSizeMismatchError extends BaseError {\n  override name = 'BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`)\n  }\n}\n\nexport class DecodeLogDataMismatch extends BaseError {\n  override name = 'DecodeLogDataMismatch'\n\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport class DecodeLogTopicsMismatch extends BaseError {\n  override name = 'DecodeLogTopicsMismatch'\n\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  override name = 'InvalidAbiEncodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  override name = 'InvalidAbiDecodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport class InvalidArrayError extends BaseError {\n  override name = 'InvalidArrayError'\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'))\n  }\n}\n\nexport class InvalidDefinitionTypeError extends BaseError {\n  override name = 'InvalidDefinitionTypeError'\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport class UnsupportedPackedAbiType extends BaseError {\n  override name = 'UnsupportedPackedAbiType'\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`)\n  }\n}\n", "import { BaseError } from './base.js'\n\nexport class FilterTypeNotSupportedError extends BaseError {\n  override name = 'FilterTypeNotSupportedError'\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`)\n  }\n}\n", "const paramsRegex = /((function|event)\\s)?(.*)(\\((.*)\\))/\n\nexport function extractFunctionParts(def: string) {\n  const parts = def.match(paramsRegex)\n  const type = parts?.[2] || undefined\n  const name = parts?.[3]\n  const params = parts?.[5] || undefined\n  return { type, name, params }\n}\n\nexport function extractFunctionName(def: string) {\n  return extractFunctionParts(def).name\n}\n\nexport function extractFunctionParams(def: string) {\n  const params = extractFunctionParts(def).params\n  const splitParams = params?.split(',').map((x) => x.trim().split(' '))\n  return splitParams?.map((param) => ({\n    type: param[0],\n    name: param[1] === 'indexed' ? param[2] : param[1],\n    ...(param[1] === 'indexed' ? { indexed: true } : {}),\n  }))\n}\n\nexport function extractFunctionType(def: string) {\n  return extractFunctionParts(def).type\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { isHex } from '../data/isHex.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport function keccak256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo,\n): Keccak256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<TTo>\n  return toHex(bytes) as Keccak256Hash<TTo>\n}\n", "import type { AbiEvent, AbiFunction } from 'abitype'\nimport { formatAbiItem } from '../abi/formatAbiItem.js'\nimport {\n  extractFunctionName,\n  extractFunctionParams,\n} from '../contract/extractFunctionParts.js'\nimport { toBytes } from '../encoding/toBytes.js'\n\nimport { keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport function hashFunction(def: string) {\n  const name = extractFunctionName(def)\n  const params = extractFunctionParams(def) || []\n  return hash(`${name}(${params.map(({ type }) => type).join(',')})`)\n}\n\nexport function hashAbiItem(abiItem: AbiFunction | AbiEvent) {\n  return hash(formatAbiItem(abiItem))\n}\n", "import type { AbiEvent } from 'abitype'\nimport type { EventDefinition } from '../../types/contract.js'\n\nimport { hashAbiItem, hashFunction } from './hashFunction.js'\n\nexport const getEventSelector = (event: EventDefinition | AbiEvent) => {\n  if (typeof event === 'string') return hashFunction(event)\n  return hashAbiItem(event)\n}\n", "import { SliceOffsetOutOfBoundsError } from '../../errors/data.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { isHex } from './isHex.js'\nimport { size } from './size.js'\n\nexport type SliceReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<TValue extends ByteArray | Hex>(\n  value: TValue,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): SliceReturnType<TValue> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<TValue>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<TValue>\n}\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nfunction assertEndOffset(value: Hex | ByteArray, start?: number, end?: number) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n", "import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  AbiEncodingBytesSizeMismatchError,\n  AbiEncodingLengthMismatchError,\n  InvalidAbiEncodingTypeError,\n  InvalidArrayError,\n} from '../../errors/abi.js'\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { Hex } from '../../types/misc.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { concat } from '../data/concat.js'\nimport { padHex } from '../data/pad.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { boolToHex, numberToHex, stringToHex } from '../encoding/toHex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n */\nexport function encodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: TParams,\n  values: TParams extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<TParams>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\nfunction prepareParams<const TParams extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: TParams\n  values: AbiParametersToPrimitiveTypes<TParams>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\nfunction prepareParam<const TParam extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: TParam\n  value: AbiParameterToPrimitiveType<TParam>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    return encodeNumber(value as unknown as number, { signed })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\nfunction encodeArray<const TParam extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: TParam\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nfunction encodeBytes<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\nfunction encodeBool(value: boolean): PreparedParam {\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\nfunction encodeNumber(\n  value: number,\n  { signed }: { signed: boolean },\n): PreparedParam {\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\nfunction encodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  { param }: { param: TParam },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n", "import type { AbiFunction } from 'abitype'\nimport { slice } from '../data/slice.js'\n\nimport { hashAbiItem, hashFunction } from './hashFunction.js'\n\nexport const getFunctionSelector = (fn: string | AbiFunction) => {\n  if (typeof fn === 'string') return slice(hashFunction(fn), 0, 4)\n  return slice(hashAbiItem(fn), 0, 4)\n}\n", "import type { Abi, AbiParameter, Address } from 'abitype'\n\nimport type { GetFunctionArgs, InferItemName } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { isHex } from '../../utils/data/isHex.js'\nimport { getEventSelector } from '../../utils/hash/getEventSelector.js'\nimport { getFunctionSelector } from '../../utils/hash/getFunctionSelector.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type GetAbiItemParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = {\n  abi: TAbi\n  name: InferItemName<TAbi, TItemName> | Hex\n} & Partial<GetFunctionArgs<TAbi, TItemName>>\n\nexport type GetAbiItemReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = Extract<\n  TAbi[number],\n  {\n    name: TItemName\n  }\n>\n\nexport function getAbiItem<\n  const TAbi extends Abi | readonly unknown[],\n  TItemName extends string,\n>({\n  abi,\n  args = [],\n  name,\n}: GetAbiItemParameters<TAbi, TItemName>): GetAbiItemReturnType<\n  TAbi,\n  TItemName\n> {\n  const isSelector = isHex(name, { strict: false })\n\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return getFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return getEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0) return undefined as any\n  if (abiItems.length === 1) return abiItems[0] as any\n\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0) return abiItem as any\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = (args as readonly unknown[]).every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter as AbiParameter)\n    })\n    if (matched) return abiItem as any\n  }\n  return abiItems[0] as any\n}\n\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address)\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n", "import type { Abi, AbiParameter, AbiParameterToPrimitiveType } from 'abitype'\n\nimport { AbiEventNotFoundError } from '../../errors/abi.js'\nimport { FilterTypeNotSupportedError } from '../../errors/log.js'\nimport type {\n  AbiItem,\n  EventDefinition,\n  GetEventArgs,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { getEventSelector } from '../hash/getEventSelector.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nexport type EncodeEventTopicsParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  _EventName = InferEventName<TAbi, TEventName>,\n> = {\n  eventName?: _EventName\n} & (TEventName extends string\n  ? { abi: TAbi; args?: GetEventArgs<TAbi, TEventName> }\n  : _EventName extends string\n  ? { abi: [TAbi[number]]; args?: GetEventArgs<TAbi, _EventName> }\n  : never)\n\nexport function encodeEventTopics<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n>({ abi, eventName, args }: EncodeEventTopicsParameters<TAbi, TEventName>) {\n  let abiItem = abi[0] as AbiItem\n  if (eventName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: eventName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiEventNotFoundError(eventName, {\n        docsPath: '/docs/contract/encodeEventTopics',\n      })\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeEventTopics',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getEventSelector(definition as EventDefinition)\n\n  let topics: Hex[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n      ? indexedInputs?.map((x: any) => (args as any)[x.name]) ?? []\n      : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) =>\n          Array.isArray(args_[i])\n            ? args_[i].map((_: any, j: number) =>\n                encodeArg({ param, value: args_[i][j] }),\n              )\n            : args_[i]\n            ? encodeArg({ param, value: args_[i] })\n            : null,\n        ) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PublicRpcSchema } from '../../types/eip1193.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  InferEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  abi: TAbi\n  eventName?: InferEventName<TAbi, TEventName>\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: TStrict\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (undefined extends TEventName\n  ? {\n      args?: never\n    }\n  : MaybeExtractEventArgsFromAbi<\n      TAbi,\n      TEventName\n    > extends infer TEventFilterArgs\n  ? {\n      args?: TEventFilterArgs | (TArgs extends TEventFilterArgs ? TArgs : never)\n    }\n  : {\n      args?: never\n    })\n\nexport type CreateContractEventFilterReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', TAbi, TEventName, TArgs, TStrict, TFromBlock, TToBlock>\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined,\n  TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    abi,\n    args,\n    eventName,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateContractEventFilterParameters<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict,\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../types.js'\n\nexport function parseAccount(account: Address | Account): Account {\n  if (typeof account === 'string') return { address: account, type: 'json-rpc' }\n  return account\n}\n", "import type { Abi } from 'abitype'\n\nimport { AbiFunctionNotFoundError } from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport { concatHex } from '../data/concat.js'\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nexport type EncodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi } & GetFunctionArgs<TAbi, TFunctionName>\n  : _FunctionName extends string\n  ? { abi: [TAbi[number]] } & GetFunctionArgs<TAbi, _FunctionName>\n  : never)\n\nexport function encodeFunctionData<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n}: EncodeFunctionDataParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionData',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionData',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, (args ?? []) as readonly unknown[])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n", "import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n", "import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport { stringToBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\nimport { isAddress } from './isAddress.js'\n\nexport function checksumAddress(address_: Address, chainId?: number): Address {\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  return `0x${address.join('')}`\n}\n\nexport function getAddress(address: string, chainId?: number): Address {\n  if (!isAddress(address)) throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n", "import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  AbiDecodingZeroDataError,\n  InvalidAbiDecodingTypeError,\n} from '../../errors/abi.js'\nimport type { Hex } from '../../types/misc.js'\nimport { checksumAddress } from '../address/getAddress.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { trim } from '../data/trim.js'\nimport {\n  hexToBigInt,\n  hexToBool,\n  hexToNumber,\n  hexToString,\n} from '../encoding/fromHex.js'\n\nimport { getArrayComponents } from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  TParams extends\n    | readonly AbiParameter[]\n    | readonly unknown[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  TParams extends readonly AbiParameter[] ? TParams : AbiParameter[]\n>\n\nexport function decodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(params: TParams, data: Hex): DecodeAbiParametersReturnType<TParams> {\n  if (data === '0x' && (params as unknown[]).length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data,\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n  return decodeParams({\n    data,\n    params: params as readonly AbiParameter[],\n  }) as unknown as DecodeAbiParametersReturnType<TParams>\n}\n\n////////////////////////////////////////////////////////////////////\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\nfunction decodeParams<const TParams extends readonly AbiParameter[]>({\n  data,\n  params,\n}: { data: Hex; params: TParams }) {\n  const decodedValues: unknown[] = []\n  let position = 0\n\n  for (let i = 0; i < params.length; i++) {\n    if (position >= size(data))\n      throw new AbiDecodingDataSizeTooSmallError({\n        data,\n        params,\n        size: size(data),\n      })\n\n    const param = params[i]\n    const { consumed, value } = decodeParam({ data, param, position })\n    decodedValues.push(value)\n    // Step across the data by the amount of data consumed by this parameter.\n    position += consumed\n  }\n\n  return decodedValues as unknown as AbiParametersToPrimitiveTypes<TParams>\n}\n\nfunction decodeParam({\n  data,\n  param,\n  position,\n}: { data: Hex; param: AbiParameter; position: number }): {\n  consumed: number\n  value: any\n} {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(data, {\n      length,\n      param: { ...param, type: type } as AbiParameter,\n      position,\n    })\n  }\n  if (param.type === 'tuple') {\n    return decodeTuple(data, { param: param as TupleAbiParameter, position })\n  }\n  if (param.type === 'string') {\n    return decodeString(data, { position })\n  }\n  if (param.type.startsWith('bytes')) {\n    return decodeBytes(data, { param, position })\n  }\n\n  const value = slice(data, position, position + 32, { strict: true }) as Hex\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return decodeNumber(value, { param })\n  }\n  if (param.type === 'address') {\n    return decodeAddress(value)\n  }\n  if (param.type === 'bool') {\n    return decodeBool(value)\n  }\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n\nfunction decodeAddress(value: Hex) {\n  return { consumed: 32, value: checksumAddress(slice(value, -20)) }\n}\n\nfunction decodeArray<const TParam extends AbiParameter>(\n  data: Hex,\n  {\n    param,\n    length,\n    position,\n  }: {\n    param: TParam\n    length: number | null\n    position: number\n  },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // we will need to decode the offset of the array data.\n  if (!length) {\n    // Get the offset of the array data.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Get the length of the array from the offset.\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const decodedChild = decodeParam({\n        data: slice(data, offset + 32),\n        param,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Get the child type of the array.\n    const arrayComponents = getArrayComponents(param.type)\n    // If the child type is not known, the array is dynamic.\n    const dynamicChild = !arrayComponents?.[0]\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const offset = hexToNumber(\n        slice(data, position, position + 32, { strict: true }),\n      )\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param,\n        position: dynamicChild ? consumed : i * 32,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of each element in the array is known,\n  // the array data is encoded contiguously after the array.\n  let consumed = 0\n  const value: AbiParameterToPrimitiveType<TParam>[] = []\n  for (let i = 0; i < length; ++i) {\n    const decodedChild = decodeParam({\n      data,\n      param,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value.push(decodedChild.value)\n  }\n  return { value, consumed }\n}\n\nfunction decodeBool(value: Hex) {\n  return { consumed: 32, value: hexToBool(value) }\n}\n\nfunction decodeBytes<const TParam extends AbiParameter>(\n  data: Hex,\n  { param, position }: { param: TParam; position: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // If we don't have a size, we're dealing with a dynamic-size array\n    // so we need to read the offset of the data part first.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n    // If there is no length, we have zero data.\n    if (length === 0) return { consumed: 32, value: '0x' }\n    const value = slice(data, offset + 32, offset + 32 + length, {\n      strict: true,\n    })\n    return { consumed: 32, value }\n  }\n\n  const value = slice(data, position, position + parseInt(size), {\n    strict: true,\n  })\n  return { consumed: 32, value }\n}\n\nfunction decodeNumber<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n) {\n  const signed = param.type.startsWith('int')\n  const size = parseInt(param.type.split('int')[1] || '256')\n  return {\n    consumed: 32,\n    value:\n      size > 48\n        ? hexToBigInt(value, { signed })\n        : hexToNumber(value, { signed }),\n  }\n}\n\nfunction decodeString(data: Hex, { position }: { position: number }) {\n  const offset = hexToNumber(\n    slice(data, position, position + 32, { strict: true }),\n  )\n  const length = hexToNumber(slice(data, offset, offset + 32, { strict: true }))\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) return { consumed: 32, value: '' }\n  const value = hexToString(\n    trim(slice(data, offset + 32, offset + 32 + length, { strict: true })),\n  )\n  return { consumed: 32, value }\n}\n\nfunction decodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(data: Hex, { param, position }: { param: TParam; position: number }) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Decode each component of the tuple, starting at the offset.\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param: component,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n    }\n    return { consumed: 32, value }\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const decodedChild = decodeParam({\n      data,\n      param: component,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n  }\n  return { consumed, value }\n}\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n", "import type { Abi, ExtractAbiError, ExtractAbiErrorNames } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  AbiErrorSignatureNotFoundError,\n} from '../../errors/abi.js'\nimport type { AbiItem, GetErrorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { slice } from '../data/slice.js'\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js'\n\nimport { decodeAbiParameters } from './decodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = { abi?: TAbi; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  _ErrorNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiErrorNames<TAbi>\n    : string,\n> = {\n  [TName in _ErrorNames]: {\n    abiItem: TAbi extends Abi ? ExtractAbiError<TAbi, TName> : AbiItem\n    args: GetErrorArgs<TAbi, TName>['args']\n    errorName: TName\n  }\n}[_ErrorNames]\n\nexport function decodeErrorResult<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  data,\n}: DecodeErrorResultParameters<TAbi>): DecodeErrorResultReturnType<TAbi> {\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...((abi as Abi) || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === getFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args: ('inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n      ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<TAbi>\n}\n", "export const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n", "import type { AbiParameter } from 'abitype'\n\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean\n  includeName?: boolean\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'CallExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: CallParameters & { chain?: Chain; docsPath?: string },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[]\n  override cause: BaseError\n  contractAddress?: Address\n  formattedArgs?: string\n  functionName: string\n  sender?: Address\n\n  override name = 'ContractFunctionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any\n      contractAddress?: Address\n      docsPath?: string\n      functionName: string\n      sender?: Address\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport class ContractFunctionRevertedError extends BaseError {\n  override name = 'ContractFunctionRevertedError'\n\n  data?: DecodeErrorResultReturnType\n  reason?: string\n  signature?: Hex\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: { abi: Abi; data?: Hex; functionName: string; message?: string }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages\n    let reason\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n      },\n    )\n\n    this.data = decodedData\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport class ContractFunctionZeroDataError extends BaseError {\n  override name = 'ContractFunctionZeroDataError'\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n    })\n  }\n}\n\nexport class RawContractError extends BaseError {\n  code = 3\n  override name = 'RawContractError'\n\n  data?: Hex | { data?: Hex }\n\n  constructor({\n    data,\n    message,\n  }: { data?: Hex | { data?: Hex }; message?: string }) {\n    super(message || '')\n    this.data = data\n  }\n}\n", "import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport class HttpRequestError extends BaseError {\n  override name = 'HttpRequestError'\n\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n  headers?: Headers\n  status?: number\n  url: string\n\n  constructor({\n    body,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n    details?: string\n    headers?: Headers\n    status?: number\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport class WebSocketRequestError extends BaseError {\n  override name = 'WebSocketRequestError'\n\n  constructor({\n    body,\n    details,\n    url,\n  }: {\n    body: { [key: string]: unknown }\n    details: string\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      details,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n\nexport class RpcRequestError extends BaseError {\n  override name = 'RpcRequestError'\n\n  code: number\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n    this.code = error.code\n  }\n}\n\nexport class TimeoutError extends BaseError {\n  override name = 'TimeoutError'\n\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n", "import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<TCode extends number = RpcErrorCode> = {\n  code?: TCode | (number & {})\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport class RpcError<TCode extends number = RpcErrorCode> extends BaseError {\n  override name = 'RpcError'\n\n  code: TCode | (number & {})\n\n  constructor(\n    cause: Error,\n    { code, docsPath, metaMessages, shortMessage }: RpcErrorOptions<TCode>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n    })\n    this.name = cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : code ?? unknownErrorCode\n    ) as TCode\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  override name = 'ProviderRpcError'\n\n  data?: T\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class ParseRpcError extends RpcError {\n  override name = 'ParseRpcError'\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class InvalidRequestRpcError extends RpcError {\n  override name = 'InvalidRequestRpcError'\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class MethodNotFoundRpcError extends RpcError {\n  override name = 'MethodNotFoundRpcError'\n  static code = -32601 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      shortMessage: 'The method does not exist / is not available.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class InvalidParamsRpcError extends RpcError {\n  override name = 'InvalidParamsRpcError'\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class InternalRpcError extends RpcError {\n  override name = 'InternalRpcError'\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class InvalidInputRpcError extends RpcError {\n  override name = 'InvalidInputRpcError'\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class ResourceUnavailableRpcError extends RpcError {\n  override name = 'ResourceUnavailableRpcError'\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class TransactionRejectedRpcError extends RpcError {\n  override name = 'TransactionRejectedRpcError'\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class MethodNotSupportedRpcError extends RpcError {\n  override name = 'MethodNotSupportedRpcError'\n  static code = -32004 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      shortMessage: 'Method is not implemented.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class LimitExceededRpcError extends RpcError {\n  override name = 'LimitExceededRpcError'\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  override name = 'JsonRpcVersionUnsupportedError'\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class UserRejectedRequestError extends ProviderRpcError {\n  override name = 'UserRejectedRequestError'\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  override name = 'UnauthorizedProviderError'\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  override name = 'UnsupportedProviderMethodError'\n  static code = 4200 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      shortMessage: 'The Provider does not support the requested method.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  override name = 'ProviderDisconnectedError'\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class ChainDisconnectedError extends ProviderRpcError {\n  override name = 'ChainDisconnectedError'\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport class SwitchChainError extends ProviderRpcError {\n  override name = 'SwitchChainError'\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport class UnknownRpcError extends RpcError {\n  override name = 'UnknownRpcError'\n\n  constructor(cause: Error) {\n    super(cause, {\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  ContractFunctionRevertedError,\n  ContractFunctionZeroDataError,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport function getContractError(\n  err: BaseError,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address\n    docsPath?: string\n    functionName: string\n    sender?: Address\n  },\n) {\n  const { code, data, message, shortMessage } = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n      ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n      : {}\n  ) as RawContractError\n\n  let cause = err\n  if (err instanceof AbiDecodingZeroDataError) {\n    cause = new ContractFunctionZeroDataError({ functionName })\n  } else if (\n    [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n    (data || message || shortMessage)\n  ) {\n    cause = new ContractFunctionRevertedError({\n      abi,\n      data: typeof data === 'object' ? data.data : data,\n      functionName,\n      message: shortMessage ?? message,\n    })\n  }\n\n  return new ContractFunctionExecutionError(cause, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  })\n}\n", "import { BaseError } from './base.js'\n\nexport class AccountNotFoundError extends BaseError {\n  override name = 'AccountNotFoundError'\n  constructor({ docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n      },\n    )\n  }\n}\n", "import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'EstimateGasExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any, any>, 'account'> & {\n      account?: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n", "import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  FeeCapTooHighError,\n  FeeCapTooLowError,\n  InsufficientFundsError,\n  IntrinsicGasTooHighError,\n  IntrinsicGasTooLowError,\n  NonceMaxValueError,\n  NonceTooHighError,\n  NonceTooLowError,\n  TipAboveFeeCapError,\n  TransactionTypeNotSupportedError,\n  UnknownNodeError,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = Partial<SendTransactionParameters<any>>\n\nexport function getNodeError(err: BaseError, args: GetNodeErrorParameters) {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError = err.walk(\n    (e) => (e as { code: number }).code === ExecutionRevertedError.code,\n  )\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    })\n  } else if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    })\n  else if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    })\n  else if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    })\n  else if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce })\n  else if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce })\n  else if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce })\n  else if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err })\n  else if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas })\n  else if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas })\n  else if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err })\n  else if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    })\n  return new UnknownNodeError({\n    cause: err,\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { EstimateGasExecutionError } from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport { type GetNodeErrorParameters, getNodeError } from './getNodeError.js'\n\nexport function getEstimateGasError(\n  err: BaseError,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account\n    chain?: Chain\n    docsPath?: string\n  },\n) {\n  let cause = getNodeError(err, args as GetNodeErrorParameters)\n  if (cause instanceof UnknownNodeError) cause = err\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  })\n}\n", "import type { ChainFormatter } from '../../types/chain.js'\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter.\n */\nexport function extract(\n  value: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] },\n) {\n  if (!format) return {}\n  const keys = Object.keys(format({}))\n  return keys.reduce((data: Record<string, unknown>, key) => {\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (value?.hasOwnProperty(key)) {\n      data[key] = value[key]\n    }\n    return data\n  }, {})\n}\n", "import { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { InvalidAddressError } from '../../errors/address.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js'\nimport { FeeConflictError } from '../../errors/transaction.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = Partial<SendTransactionParameters<Chain>>\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n", "import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport class BaseFeeScalarError extends BaseError {\n  override name = 'BaseFeeScalarError'\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.')\n  }\n}\n\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  override name = 'Eip1559FeesNotSupportedError'\n  constructor() {\n    super('Chain does not support EIP-1559 fees.')\n  }\n}\n\nexport class MaxFeePerGasTooLowError extends BaseError {\n  override name = 'MaxFeePerGasTooLowError'\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n    )\n  }\n}\n", "import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport class BlockNotFoundError extends BaseError {\n  override name = 'BlockNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: TBlockTag | BlockTag\n    }\n)\n\nexport type GetBlockReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedBlock<TChain, TIncludeTransactions, TBlockTag>\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<TIncludeTransactions, TBlockTag> = {},\n): Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>> {\n  const blockTag = blockTag_ ?? 'latest'\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request({\n      method: 'eth_getBlockByHash',\n      params: [blockHash, includeTransactions],\n    })\n  } else {\n    block = await client.request({\n      method: 'eth_getBlockByNumber',\n      params: [blockNumberHex || blockTag, includeTransactions],\n    })\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type GetGasPriceReturnType = bigint\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { Eip1559FeesNotSupportedError } from '../../errors/fee.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { getBlock } from './getBlock.js'\nimport { getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChain<chain, chainOverride>\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains.html#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters<\n      chain,\n      Account | undefined,\n      chainOverride\n    >\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n  if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n    const block = block_ || (await getBlock(client))\n    return chain.fees.defaultPriorityFee({\n      block,\n      client,\n      request,\n    } as ChainFeesFnParameters)\n  } else if (chain?.fees?.defaultPriorityFee)\n    return chain?.fees?.defaultPriorityFee\n\n  try {\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_ ? Promise.resolve(block_) : getBlock(client),\n      getGasPrice(client),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  Eip1559FeesNotSupportedError,\n} from '../../errors/fee.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n} from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { internal_estimateMaxPriorityFeePerGas } from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType\n} & GetChain<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains.html#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type>,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_ ? block_ : await getBlock(client)\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function')\n    return chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters) as unknown as EstimateFeesPerGasReturnType<type>\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = request?.maxPriorityFeePerGas\n      ? request.maxPriorityFeePerGas\n      : await internal_estimateMaxPriorityFeePerGas(\n          client as Client<Transport, Chain>,\n          {\n            block,\n            chain,\n            request,\n          },\n        )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice = request?.gasPrice ?? multiply(await getGasPrice(client))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n)\nexport type GetTransactionCountReturnType = number\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request({\n    method: 'eth_getTransactionCount',\n    params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\n  })\n  return hexToNumber(count)\n}\n", "import type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport { internal_estimateFeesPerGas } from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport { getBlock } from '../../actions/public/getBlock.js'\nimport { getTransactionCount } from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { TransactionSerializable } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport type { AssertRequestParameters } from '../../utils/transaction/assertRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport { getTransactionType } from '../../utils/transaction/getTransactionType.js'\n\nexport type PrepareTransactionRequestParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type PrepareTransactionRequestReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<\n  TChainOverride extends Chain ? TChainOverride : TChain\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n): Promise<\n  PrepareTransactionRequestReturnType<TChain, TAccount, TChainOverride>\n> {\n  const { account: account_ = client.account, chain, gas, nonce, type } = args\n  if (!account_) throw new AccountNotFoundError()\n  const account = parseAccount(account_)\n\n  const block = await getBlock(client, { blockTag: 'latest' })\n\n  const request = { ...args, from: account.address }\n\n  if (typeof nonce === 'undefined')\n    request.nonce = await getTransactionCount(client, {\n      address: account.address,\n      blockTag: 'pending',\n    })\n\n  if (typeof type === 'undefined') {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      // infer type from block\n      request.type =\n        typeof block.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (request.type === 'eip1559') {\n    // EIP-1559 fees\n    const { maxFeePerGas, maxPriorityFeePerGas } =\n      await internal_estimateFeesPerGas(client, {\n        block,\n        chain,\n        request: request as PrepareTransactionRequestParameters,\n      })\n\n    if (\n      typeof args.maxPriorityFeePerGas === 'undefined' &&\n      args.maxFeePerGas &&\n      args.maxFeePerGas < maxPriorityFeePerGas\n    )\n      throw new MaxFeePerGasTooLowError({\n        maxPriorityFeePerGas,\n      })\n\n    request.maxPriorityFeePerGas = maxPriorityFeePerGas\n    request.maxFeePerGas = maxFeePerGas\n  } else {\n    // Legacy fees\n    if (\n      typeof args.maxFeePerGas !== 'undefined' ||\n      typeof args.maxPriorityFeePerGas !== 'undefined'\n    )\n      throw new Eip1559FeesNotSupportedError()\n\n    const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(client, {\n      block,\n      chain,\n      request: request as PrepareTransactionRequestParameters,\n      type: 'legacy',\n    })\n    request.gasPrice = gasPrice_\n  }\n\n  if (typeof gas === 'undefined')\n    request.gas = await estimateGas(client, {\n      ...request,\n      account: { address: account.address, type: 'json-rpc' },\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  return request as unknown as PrepareTransactionRequestReturnType<\n    TChain,\n    TAccount,\n    TChainOverride\n  >\n}\n", "import type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getEstimateGasError } from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\n\nexport type FormattedEstimateGas<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type EstimateGasParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = UnionOmit<FormattedEstimateGas<TChain>, 'from'> &\n  GetAccountParameter<TAccount> &\n  (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type EstimateGasReturnType = bigint\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: EstimateGasParameters<TChain, TAccount>,\n): Promise<EstimateGasReturnType> {\n  const account_ = args.account ?? client.account\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/public/estimateGas',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    const {\n      accessList,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      ...rest\n    } =\n      account.type === 'local'\n        ? ((await prepareTransactionRequest(\n            client,\n            args as PrepareTransactionRequestParameters,\n          )) as EstimateGasParameters)\n        : args\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    assertRequest(args as AssertRequestParameters)\n\n    const format =\n      client.chain?.formatters?.transactionRequest?.format ||\n      formatTransactionRequest\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format }),\n      from: account.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    const balance = await client.request({\n      method: 'eth_estimateGas',\n      params: block ? [request, block] : [request],\n    })\n    return BigInt(balance)\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\nimport { type EstimateGasParameters, estimateGas } from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<EstimateGasParameters<TChain, TAccount>, 'data' | 'to' | 'value'> &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    EstimateGasParameters<TChain> extends EstimateGasParameters\n      ? EstimateGasParameters<TChain>['value']\n      : EstimateGasParameters['value']\n  >\n\nexport type EstimateContractGasReturnType = bigint\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...request\n  }: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n): Promise<EstimateContractGasReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const gas = await estimateGas(client, {\n      data,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters<TChain>)\n    return gas\n  } catch (err) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n", "import type { Abi, ExtractAbiFunctionNames } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport { decodeAbiParameters } from './decodeAbiParameters.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n  data: Hex\n} & (TFunctionName extends string\n  ? { abi: TAbi } & Partial<GetFunctionArgs<TAbi, TFunctionName>>\n  : _FunctionName extends string\n  ? { abi: [TAbi[number]] } & Partial<GetFunctionArgs<TAbi, _FunctionName>>\n  : never)\n\nexport type DecodeFunctionResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi>[number]\n    : string,\n> = TFunctionName extends string\n  ? ContractFunctionResult<TAbi, TFunctionName>\n  : ContractFunctionResult<TAbi, _FunctionName>\n\nexport function decodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n  data,\n}: DecodeFunctionResultParameters<\n  TAbi,\n  TFunctionName\n>): DecodeFunctionResultReturnType<TAbi, TFunctionName> {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1) return values as any\n  if (values && values.length === 1) return values[0] as any\n  return undefined as any\n}\n", "/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) \u2192 bytes4 magicValue\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) \u2192 bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n] as const\n", "export const aggregate3Signature = '0x82ad56cb'\n", "import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport { type GetNodeErrorParameters, getNodeError } from './getNodeError.js'\n\nexport function getCallError(\n  err: BaseError,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain\n    docsPath?: string\n  },\n) {\n  let cause = getNodeError(err, args as GetNodeErrorParameters)\n  if (cause instanceof UnknownNodeError) cause = err\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  })\n}\n", "type Resolved<TReturnType extends readonly unknown[] = any> = [\n  result: TReturnType[number],\n  results: TReturnType,\n]\n\ntype PendingPromise<TReturnType extends readonly unknown[] = any> = {\n  resolve?: (data: Resolved<TReturnType>) => void\n  reject?: (reason?: unknown) => void\n}\n\ntype SchedulerItem = { args: unknown; pendingPromise: PendingPromise }\n\nexport type CreateBatchSchedulerArguments<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: TParameters[]) => Promise<TReturnType>\n  id: number | string\n  shouldSplitBatch?: (args: TParameters[]) => boolean\n  wait?: number\n}\nexport type CreateBatchSchedulerReturnType<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: TParameters extends undefined\n    ? (args?: TParameters) => Promise<Resolved<TReturnType>>\n    : (args: TParameters) => Promise<Resolved<TReturnType>>\n}\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\nexport function createBatchScheduler<\n  TParameters,\n  TReturnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n}: CreateBatchSchedulerArguments<\n  TParameters,\n  TReturnType\n>): CreateBatchSchedulerReturnType<TParameters, TReturnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as TParameters[])\n      .then((data) => {\n        scheduler.forEach(({ pendingPromise }, i) =>\n          pendingPromise.resolve?.([data[i], data]),\n        )\n      })\n      .catch((err) => {\n        scheduler.forEach(({ pendingPromise }) => pendingPromise.reject?.(err))\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as TParameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: TParameters) {\n      const pendingPromise: PendingPromise<TReturnType> = {}\n      const promise = new Promise<Resolved<TReturnType>>((resolve, reject) => {\n        pendingPromise.resolve = resolve\n        pendingPromise.reject = reject\n      })\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, pendingPromise })\n        return promise\n      }\n\n      setScheduler({ args, pendingPromise })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<TParameters, TReturnType>\n}\n", "import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport class OffchainLookupError extends BaseError {\n  override name = 'OffchainLookupError'\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n      },\n    )\n  }\n}\n\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  override name = 'OffchainLookupResponseMalformedError'\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  override name = 'OffchainLookupSenderMismatchError'\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n      },\n    )\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\n\nimport { isAddress } from './isAddress.js'\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a)) throw new InvalidAddressError({ address: a })\n  if (!isAddress(b)) throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n", "import type { Abi, Address } from 'abitype'\n\nimport { type CallParameters, call } from '../actions/public/call.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport { type BaseError } from '../errors/base.js'\nimport {\n  OffchainLookupError,\n  OffchainLookupResponseMalformedError,\n  OffchainLookupSenderMismatchError,\n} from '../errors/ccip.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport type { Chain } from '../types/chain.js'\nimport type { GetErrorArgs } from '../types/contract.js'\nimport type { Hex } from '../types/misc.js'\n\nimport type { Client } from '../clients/createClient.js'\nimport { decodeErrorResult } from './abi/decodeErrorResult.js'\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js'\nimport { isAddressEqual } from './address/isAddressEqual.js'\nimport { concat } from './data/concat.js'\nimport { isHex } from './data/isHex.js'\nimport { stringify } from './stringify.js'\n\nexport const offchainLookupSignature = '0x556f1830'\nexport const offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [\n    {\n      name: 'sender',\n      type: 'address',\n    },\n    {\n      name: 'urls',\n      type: 'string[]',\n    },\n    {\n      name: 'callData',\n      type: 'bytes',\n    },\n    {\n      name: 'callbackFunction',\n      type: 'bytes4',\n    },\n    {\n      name: 'extraData',\n      type: 'bytes',\n    },\n  ],\n} as const satisfies Abi[number]\n\nexport async function offchainLookup<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    data,\n    to,\n  }: Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    data: Hex\n    to: Address\n  },\n): Promise<Hex> {\n  const { args } = decodeErrorResult({\n    data,\n    abi: [offchainLookupAbiItem],\n  }) as unknown as GetErrorArgs<\n    [typeof offchainLookupAbiItem],\n    'OffchainLookup'\n  >\n  const [sender, urls, callData, callbackSelector, extraData] = args\n\n  try {\n    if (!isAddressEqual(to, sender))\n      throw new OffchainLookupSenderMismatchError({ sender, to })\n\n    const result = await ccipFetch({ data: callData, sender, urls })\n\n    const { data: data_ } = await call(client, {\n      blockNumber,\n      blockTag,\n      data: concat([\n        callbackSelector,\n        encodeAbiParameters(\n          [{ type: 'bytes' }, { type: 'bytes' }],\n          [result, extraData],\n        ),\n      ]),\n      to,\n    } as CallParameters)\n\n    return data_!\n  } catch (err) {\n    throw new OffchainLookupError({\n      callbackSelector,\n      cause: err as BaseError,\n      data,\n      extraData,\n      sender,\n      urls,\n    })\n  }\n}\n\nexport async function ccipFetch({\n  data,\n  sender,\n  urls,\n}: { data: Hex; sender: Address; urls: readonly string[] }) {\n  let error = new Error('An unknown error occurred.')\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const method =\n      url.includes('{sender}') || url.includes('{data}') ? 'GET' : 'POST'\n    const body = method === 'POST' ? { data, sender } : undefined\n\n    try {\n      const response = await fetch(\n        url.replace('{sender}', sender).replace('{data}', data),\n        {\n          body: JSON.stringify(body),\n          method,\n        },\n      )\n\n      let result\n      if (\n        response.headers.get('Content-Type')?.startsWith('application/json')\n      ) {\n        result = (await response.json()).data\n      } else {\n        result = (await response.text()) as any\n      }\n\n      if (!response.ok) {\n        error = new HttpRequestError({\n          body,\n          details: stringify(result.error) || response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url,\n        })\n        continue\n      }\n\n      if (!isHex(result)) {\n        error = new OffchainLookupResponseMalformedError({\n          result,\n          url,\n        })\n        continue\n      }\n\n      return result\n    } catch (err) {\n      error = new HttpRequestError({\n        body,\n        details: (err as Error).message,\n        url,\n      })\n    }\n  }\n\n  throw error\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { decodeFunctionResult } from '../../utils/abi/decodeFunctionResult.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getCallError } from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type { AssertRequestParameters } from '../../utils/transaction/assertRequest.js'\n\nexport type FormattedCall<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type CallParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<TChain>, 'from'> & {\n  account?: Account | Address\n  batch?: boolean\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type CallReturnType = { data: Hex | undefined }\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call.html\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  args: CallParameters<TChain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = 'latest',\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const format =\n      client.chain?.formatters?.transactionRequest?.format ||\n      formatTransactionRequest\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format }),\n      from: account?.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (batch && shouldPerformMulticall({ request })) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<TChain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const response = await client.request({\n      method: 'eth_call',\n      params: block\n        ? [request as Partial<RpcTransactionRequest>, block]\n        : [request as Partial<RpcTransactionRequest>],\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (data?.slice(0, 10) === offchainLookupSignature && to) {\n      return { data: await offchainLookup(client, { data, to }) }\n    }\n    throw getCallError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<TChain extends Chain | undefined> = Pick<\n  CallParameters<TChain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address\n  to: Address\n}\n\nasync function scheduleMulticall<TChain extends Chain | undefined,>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<TChain>,\n) {\n  const { batchSize = 1024, wait = 0 } =\n    typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    data,\n    multicallAddress: multicallAddress_,\n    to,\n  } = args\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain) throw new ClientChainNotConfiguredError()\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            data: calldata,\n            to: multicallAddress,\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error.data === 'object' ? error.data.data : error.data\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n} from '../../types/contract.js'\nimport {\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\n\nimport { type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = Pick<CallParameters, 'account' | 'blockNumber' | 'blockTag'> &\n  ContractFunctionConfig<TAbi, TFunctionName, 'view' | 'pure'>\n\nexport type ReadContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = ContractFunctionResult<TAbi, TFunctionName>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...callRequest\n  }: ReadContractParameters<TAbi, TFunctionName>,\n): Promise<ReadContractReturnType<TAbi, TFunctionName>> {\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await call(client, {\n      data: calldata,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters)\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters<\n      TAbi,\n      TFunctionName\n    >) as ReadContractReturnType<TAbi, TFunctionName>\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n  GetValue,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\n\nimport { type CallParameters, call } from './call.js'\n\nexport type SimulateContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = any,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  chain?: TChainOverride\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex\n} & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<\n    CallParameters<TChainOverride extends Chain ? TChainOverride : TChain>,\n    'batch' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    CallParameters<TChain> extends CallParameters\n      ? CallParameters<TChain>['value']\n      : CallParameters['value']\n  >\n\nexport type SimulateContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  result: ContractFunctionResult<TAbi, TFunctionName>\n  request: UnionOmit<\n    WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      undefined,\n      TChainOverride\n    >,\n    'chain' | 'functionName'\n  > & {\n    chain: TChainOverride\n    functionName: TFunctionName\n  } & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'>\n}\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...callRequest\n  }: SimulateContractParameters<TAbi, TFunctionName, TChain, TChainOverride>,\n): Promise<\n  SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n> {\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : undefined\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await call(client, {\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters<TChain>)\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters)\n    return {\n      result,\n      request: {\n        abi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n      },\n    } as unknown as SimulateContractReturnType<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n", "import type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\nexport const cleanupCache = /*#__PURE__*/ new Map<string, () => void>()\n\ntype EmitFunction<TCallbacks extends Callbacks> = (\n  emit: TCallbacks,\n) => MaybePromise<void | (() => void)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<TCallbacks extends Callbacks>(\n  observerId: string,\n  callbacks: TCallbacks,\n  fn: EmitFunction<TCallbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const cleanup = cleanupCache.get(observerId)\n    if (getListeners().length === 1 && cleanup) cleanup()\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: TCallbacks = {} as TCallbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<TCallbacks[keyof TCallbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      listeners.forEach((listener) => listener.fns[key]?.(...args))\n    }) as TCallbacks[Extract<keyof TCallbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n", "export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n", "import { wait } from './wait.js'\n\ntype PollOptions<TData> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: (data: TData | void) => Promise<number>\n  // The interval (in ms).\n  interval: number\n}\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<TData>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<TData | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<TData>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: TData | void = undefined\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n", "import type { Abi, AbiParameter, ExtractAbiEventNames } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  AbiEventSignatureEmptyTopicsError,\n  AbiEventSignatureNotFoundError,\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type {\n  EventDefinition,\n  GetEventArgsFromTopics,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { getEventSelector } from '../hash/getEventSelector.js'\n\nimport { decodeAbiParameters } from './decodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n> = {\n  abi: TAbi\n  data?: TData\n  eventName?: InferEventName<TAbi, TEventName>\n  strict?: TStrict\n  topics: [signature: Hex, ...args: TTopics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n> = TEventName extends _EventNames[number]\n  ? Prettify<\n      {\n        eventName: TEventName\n      } & GetEventArgsFromTopics<TAbi, TEventName, TTopics, TData, TStrict>\n    >\n  : {\n      [TName in _EventNames]: Prettify<\n        {\n          eventName: TName\n        } & GetEventArgsFromTopics<TAbi, TName, TTopics, TData, TStrict>\n      >\n    }[_EventNames]\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n>({\n  abi,\n  data,\n  strict: strict_,\n  topics,\n}: DecodeEventLogParameters<\n  TAbi,\n  TEventName,\n  TTopics,\n  TData,\n  TStrict\n>): DecodeEventLogReturnType<TAbi, TEventName, TTopics, TData, TStrict> {\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature)\n    throw new AbiEventSignatureEmptyTopicsError({\n      docsPath,\n    })\n  const abiItem = (abi as Abi).find(\n    (x) =>\n      x.type === 'event' &&\n      signature === getEventSelector(formatAbiItem(x) as EventDefinition),\n  )\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, {\n      docsPath,\n    })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  if (argTopics.length > 0) {\n    for (let i = 0; i < indexedInputs.length; i++) {\n      const param = indexedInputs[i]\n      const topic = argTopics[i]\n      if (!topic)\n        throw new DecodeLogTopicsMismatch({\n          abiItem,\n          param: param as AbiParameter & { indexed: boolean },\n        })\n      args[param.name || i] = decodeTopic({ param, value: topic })\n    }\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (err instanceof AbiDecodingDataSizeTooSmallError)\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: err.data,\n              params: err.params,\n              size: err.size,\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<\n    TAbi,\n    TEventName,\n    TTopics,\n    TData,\n    TStrict\n  >\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n", "export const promiseCache = /*#__PURE__*/ new Map()\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport function getCache<TData>(cacheKey: string) {\n  const buildCache = <TData>(cacheKey: string, cache: Map<string, TData>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: TData) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<TData>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: TData }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\nexport type WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<TData>(\n  fn: () => Promise<TData>,\n  { cacheKey, cacheTime = Infinity }: WithCacheParameters,\n) {\n  const cache = getCache<TData>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = new Date().getTime() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getCache, withCache } from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number\n  /** @deprecated use `cacheTime` instead. */\n  maxAge?: number\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { cacheTime = client.cacheTime, maxAge }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime: maxAge ?? cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n", "import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport { formatLog } from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<\n    TFilterType,\n    TAbi,\n    TEventName,\n    any,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n\nexport type GetFilterChangesReturnType<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = TFilterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n  : Hash[]\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TFilterType extends FilterType,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      if (typeof log === 'string') return log\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args undefined if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { formatLog } from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[]\n} & (\n  | {\n      event: TAbiEvent\n      events?: never\n      args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events: TAbiEvents\n      args?: never\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events?: never\n      args?: never\n      strict?: never\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: TFromBlock | BlockNumber | BlockTag\n        /** Block number or tag before which to include logs */\n        toBlock?: TToBlock | BlockNumber | BlockTag\n        blockHash?: never\n      }\n    | {\n        fromBlock?: never\n        toBlock?: never\n        /** Hash of block to include logs from */\n        blockHash?: Hash\n      }\n  )\n\nexport type GetLogsReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, TAbiEvent, TStrict, TAbiEvents, _EventName>[]\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/filters-and-logs/event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  > = {},\n): Promise<\n  GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } = events\n          ? decodeEventLog({\n              abi: events as Abi,\n              data: log.data,\n              topics: log.topics as any,\n              strict,\n            })\n          : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName: eventName as string })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetLogsReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types.html#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n", "import type { Abi, AbiEvent, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetEventArgs, InferEventName } from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\n\nimport {\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport {\n  type CreateContractEventFilterParameters,\n  createContractEventFilter,\n} from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchContractEventOnLogsParameter<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = TAbi extends Abi\n  ? Log<bigint, number, false, ExtractAbiEvent<TAbi, TEventName>, TStrict>[]\n  : Log[]\nexport type WatchContractEventOnLogsFn<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<TAbi, TEventName, TStrict>) => void\n\nexport type WatchContractEventParameters<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** Contract ABI. */\n  abi: TAbi\n  args?: GetEventArgs<TAbi, TEventName>\n  /** Contract event. */\n  eventName?: InferEventName<TAbi, TEventName>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<TAbi, TEventName, TStrict>\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: TStrict\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchContractEventReturnType = () => void\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TStrict extends boolean | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n): WatchContractEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollContractEvent = () => {\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n    ])\n    const strict = strict_ ?? false\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbi, TEventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await createContractEventFilter(client, {\n                abi,\n                address,\n                args,\n                eventName,\n                strict,\n              } as unknown as CreateContractEventFilterParameters)) as Filter<\n                'event',\n                TAbi,\n                TEventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getFilterChanges(client, { filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getBlockNumber(client)\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getLogs(client, {\n                  address,\n                  args,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  event: getAbiItem({\n                    abi,\n                    name: eventName,\n                  } as unknown as GetAbiItemParameters) as AbiEvent,\n                })\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else logs.forEach((log) => emit.onLogs([log] as any))\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter) await uninstallFilter(client, { filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const topics: LogTopic[] = eventName\n          ? encodeEventTopics({\n              abi: abi,\n              eventName: eventName,\n              args,\n            } as EncodeEventTopicsParameters)\n          : []\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict: strict_,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport { TransactionExecutionError } from '../../errors/transaction.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport { type GetNodeErrorParameters, getNodeError } from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account\n  chain?: Chain\n  docsPath?: string\n}\n\nexport function getTransactionError(\n  err: BaseError,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n) {\n  let cause = getNodeError(err, args as GetNodeErrorParameters)\n  if (cause instanceof UnknownNodeError) cause = err\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request({\n    method: 'eth_chainId',\n  })\n  return hexToNumber(chainIdHex)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerialized } from '../../types/transaction.js'\n\nexport type SendRawTransactionParameters = {\n  /**\n   * The signed serialized tranasction.\n   */\n  serializedTransaction: TransactionSerialized\n}\n\nexport type SendRawTransactionReturnType = Hash\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request({\n    method: 'eth_sendRawTransaction',\n    params: [serializedTransaction],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { assertCurrentChain } from '../../utils/chain.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { getChainId } from '../public/getChainId.js'\nimport { prepareTransactionRequest } from './prepareTransactionRequest.js'\nimport { sendRawTransaction } from './sendRawTransaction.js'\n\nexport type SendTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SendTransactionReturnType = Hash\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    let chainId\n    if (chain !== null) {\n      chainId = await getChainId(client)\n      assertCurrentChain({\n        currentChainId: chainId,\n        chain,\n      })\n    }\n\n    if (account.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await prepareTransactionRequest(client, {\n        account,\n        accessList,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value,\n        ...rest,\n      } as any)\n\n      if (!chainId) chainId = await getChainId(client)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(\n        {\n          ...request,\n          chainId,\n        } as TransactionSerializable,\n        { serializer },\n      )) as Hash\n      return await sendRawTransaction(client, {\n        serializedTransaction,\n      })\n    }\n\n    const format =\n      chain?.formatters?.transactionRequest?.format || formatTransactionRequest\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format }),\n      accessList,\n      data,\n      from: account.address,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n    return await client.request({\n      method: 'eth_sendTransaction',\n      params: [request],\n    })\n  } catch (err) {\n    throw getTransactionError(err as BaseError, {\n      ...args,\n      account,\n      chain: args.chain || undefined,\n    })\n  }\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride> &\n  UnionOmit<\n    FormattedTransactionRequest<\n      TChainOverride extends Chain ? TChainOverride : TChain\n    >,\n    'from' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    SendTransactionParameters<\n      TChain,\n      TAccount,\n      TChainOverride\n    > extends SendTransactionParameters\n      ? SendTransactionParameters<TChain, TAccount, TChainOverride>['value']\n      : SendTransactionParameters['value']\n  > & {\n    /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n    dataSuffix?: Hex\n  }\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  }: WriteContractParameters<\n    TAbi,\n    TFunctionName,\n    TChain,\n    TAccount,\n    TChainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  const hash = await sendTransaction(client, {\n    data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n    to: address,\n    ...request,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n  return hash\n}\n", "import type {\n  Abi,\n  AbiEvent,\n  AbiFunction,\n  AbiParametersToPrimitiveTypes,\n  Address,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n} from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { PublicClient } from '../clients/createPublicClient.js'\nimport type { WalletClient } from '../clients/createWalletClient.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  AbiEventParametersToPrimitiveTypes,\n  MaybeExtractEventArgsFromAbi,\n} from '../types/contract.js'\nimport type {\n  IsNarrowable,\n  IsNever,\n  IsUndefined,\n  Or,\n  Prettify,\n  UnionOmit,\n} from '../types/utils.js'\n\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from './public/createContractEventFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from './public/estimateContractGas.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from './public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from './public/simulateContract.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from './public/watchContractEvent.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from './wallet/writeContract.js'\n\nexport type GetContractParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends PublicClient<TTransport, TChain> | unknown = unknown,\n  TWalletClient extends\n    | WalletClient<TTransport, TChain, TAccount>\n    | unknown = unknown,\n  TAddress extends Address = Address,\n> = {\n  /** Contract ABI */\n  abi: TAbi\n  /** Contract address */\n  address: TAddress\n  /**\n   * Public client\n   *\n   * If you pass in a [`publicClient`](https://viem.sh/docs/clients/public.html), the following methods are available:\n   *\n   * - [`createEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`read`](https://viem.sh/docs/contract/readContract.html)\n   * - [`simulate`](https://viem.sh/docs/contract/simulateContract.html)\n   * - [`watchEvent`](https://viem.sh/docs/contract/watchContractEvent.html)\n   */\n  publicClient?: TPublicClient\n  /**\n   * Wallet client\n   *\n   * If you pass in a [`walletClient`](https://viem.sh/docs/clients/wallet.html), the following methods are available:\n   *\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`write`](https://viem.sh/docs/contract/writeContract.html)\n   */\n  walletClient?: TWalletClient\n}\n\nexport type GetContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends PublicClient | unknown = unknown,\n  TWalletClient extends WalletClient | unknown = unknown,\n  TAddress extends Address = Address,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n  _ReadFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'pure' | 'view'>\n    : string,\n  _WriteFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'nonpayable' | 'payable'>\n    : string,\n  _Narrowable extends boolean = IsNarrowable<TAbi, Abi>,\n> = Prettify<\n  (TPublicClient extends PublicClient\n    ? (IsNever<_ReadFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Calls a read-only function on a contract, and returns the response.\n             *\n             * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n             *\n             * Internally, `read` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * @example\n             * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const publicClient = createPublicClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi([\n             *     'function balanceOf(address owner) view returns (uint256)',\n             *   ]),\n             *   publicClient,\n             * })\n             * const result = await contract.read.balanceOf(['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'])\n             * // 424122n\n             */\n            read: {\n              [FunctionName in _ReadFunctionNames]: GetReadFunction<\n                _Narrowable,\n                TAbi,\n                FunctionName\n              >\n            }\n          }) &\n        (IsNever<_WriteFunctionNames> extends true\n          ? unknown\n          : {\n              /**\n               * Estimates the gas necessary to complete a transaction without submitting it to the network.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const gas = await contract.estimateGas.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              estimateGas: {\n                [FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  undefined,\n                  TAbi,\n                  FunctionName\n                >\n              }\n              /**\n               * Simulates/validates a contract interaction. This is useful for retrieving return data and revert reasons of contract write functions.\n               *\n               * This function does not require gas to execute and does not change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n               *\n               * Internally, `simulate` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const result = await contract.simulate.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              simulate: {\n                [FunctionName in _WriteFunctionNames]: GetSimulateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  TAbi,\n                  FunctionName\n                >\n              }\n            }) &\n        (IsNever<_EventNames> extends true\n          ? unknown\n          : {\n              /**\n               * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               */\n              createEventFilter: {\n                [EventName in _EventNames]: GetEventFilter<\n                  _Narrowable,\n                  TAbi,\n                  EventName\n                >\n              }\n              /**\n               * Watches and returns emitted contract event logs.\n               *\n               * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n               *\n               * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               * const unwatch = contract.watchEvent.Transfer(\n               *   { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n               *   { onLogs: (logs) => console.log(logs) },\n               * )\n               */\n              watchEvent: {\n                [EventName in _EventNames]: GetWatchEvent<\n                  _Narrowable,\n                  TAbi,\n                  EventName\n                >\n              }\n            })\n    : unknown) &\n    (TWalletClient extends WalletClient\n      ? IsNever<_WriteFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Estimates the gas necessary to complete a transaction without submitting it to the network.\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint() public']),\n             *   walletClient,\n             * })\n             * const gas = await contract.estimateGas.mint({\n             *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n             * })\n             */\n            estimateGas: {\n              [FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                FunctionName\n              >\n            }\n            /**\n             * Executes a write function on a contract.\n             *\n             * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n             *\n             * Internally, `write` uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n             *   walletClient,\n             * })\n             * const hash = await contract.write.min([69420], {\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             * })\n             */\n            write: {\n              [FunctionName in _WriteFunctionNames]: GetWriteFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                FunctionName\n              >\n            }\n          }\n      : unknown)\n> & { address: TAddress; abi: TAbi }\n\n/**\n * Gets type-safe interface for performing contract-related actions with a specific `abi` and `address`.\n *\n * - Docs https://viem.sh/docs/contract/getContract.html\n *\n * Using Contract Instances can make it easier to work with contracts if you don't want to pass the `abi` and `address` properites every time you perform contract actions, e.g. [`readContract`](https://viem.sh/docs/contract/readContract.html), [`writeContract`](https://viem.sh/docs/contract/writeContract.html), [`estimateContractGas`](https://viem.sh/docs/contract/estimateContractGas.html), etc.\n *\n * @example\n * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const publicClient = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const contract = getContract({\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi([\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'function ownerOf(uint256 tokenId) view returns (address)',\n *     'function totalSupply() view returns (uint256)',\n *   ]),\n *   publicClient,\n * })\n */\nexport function getContract<\n  TTransport extends Transport,\n  TAddress extends Address,\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TPublicClient extends PublicClient<TTransport, TChain> | undefined =\n    | PublicClient<TTransport, TChain>\n    | undefined,\n  TWalletClient extends WalletClient<TTransport, TChain, TAccount> | undefined =\n    | WalletClient<TTransport, TChain, TAccount>\n    | undefined,\n>({\n  abi,\n  address,\n  publicClient,\n  walletClient,\n}: GetContractParameters<\n  TTransport,\n  TChain,\n  TAccount,\n  TAbi,\n  TPublicClient,\n  TWalletClient,\n  TAddress\n>): GetContractReturnType<TAbi, TPublicClient, TWalletClient, TAddress> {\n  const hasPublicClient = publicClient !== undefined && publicClient !== null\n  const hasWalletClient = walletClient !== undefined && walletClient !== null\n\n  const contract: {\n    [_ in\n      | 'abi'\n      | 'address'\n      | 'createEventFilter'\n      | 'estimateGas'\n      | 'read'\n      | 'simulate'\n      | 'watchEvent'\n      | 'write']?: unknown\n  } = {}\n\n  let hasReadFunction = false\n  let hasWriteFunction = false\n  let hasEvent = false\n  for (const item of abi as Abi) {\n    if (item.type === 'function')\n      if (item.stateMutability === 'view' || item.stateMutability === 'pure')\n        hasReadFunction = true\n      else hasWriteFunction = true\n    else if (item.type === 'event') hasEvent = true\n    // Exit early if all flags are `true`\n    if (hasReadFunction && hasWriteFunction && hasEvent) break\n  }\n\n  if (hasPublicClient) {\n    if (hasReadFunction)\n      contract.read = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  ReadContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return readContract(publicClient, {\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as ReadContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasWriteFunction)\n      contract.simulate = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  SimulateContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return simulateContract(publicClient, {\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as SimulateContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasEvent) {\n      contract.createEventFilter = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  CreateContractEventFilterParameters,\n                  'abi' | 'address' | 'eventName' | 'args'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return createContractEventFilter(publicClient, {\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as CreateContractEventFilterParameters)\n            }\n          },\n        },\n      )\n      contract.watchEvent = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  WatchContractEventParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return watchContractEvent(publicClient, {\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as WatchContractEventParameters)\n            }\n          },\n        },\n      )\n    }\n  }\n\n  if (hasWalletClient) {\n    if (hasWriteFunction)\n      contract.write = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  WriteContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return writeContract(walletClient, {\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as unknown as WriteContractParameters<\n                TAbi,\n                typeof functionName,\n                TChain,\n                TAccount\n              >)\n            }\n          },\n        },\n      )\n  }\n\n  if (hasPublicClient || hasWalletClient)\n    if (hasWriteFunction)\n      contract.estimateGas = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  EstimateContractGasParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              const client = (publicClient ?? walletClient)!\n              return estimateContractGas(client, {\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n                account:\n                  (options as EstimateContractGasParameters).account ??\n                  (walletClient as unknown as WalletClient).account,\n              } as any)\n            }\n          },\n        },\n      )\n  contract.address = address\n  contract.abi = abi\n\n  return contract as unknown as GetContractReturnType<\n    TAbi,\n    TPublicClient,\n    TWalletClient,\n    TAddress\n  >\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getFunctionParameters(\n  values: [args?: readonly unknown[], options?: object],\n) {\n  const hasArgs = values.length && Array.isArray(values[0])\n  const args = hasArgs ? values[0]! : []\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getEventParameters(\n  values: [args?: object | unknown[], options?: object],\n  abiEvent: AbiEvent,\n) {\n  let hasArgs = false\n  // If first item is array, must be `args`\n  if (Array.isArray(values[0])) hasArgs = true\n  // Check if first item is `args` or `options`\n  else if (values.length === 1) {\n    // if event has indexed inputs, must have `args`\n    hasArgs = abiEvent.inputs.some((x) => x.indexed)\n    // If there are two items in array, must have `args`\n  } else if (values.length === 2) {\n    hasArgs = true\n  }\n\n  const args = hasArgs ? values[0]! : undefined\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\ntype GetReadFunction<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      ReadContractParameters<TAbi, TFunctionName>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<ReadContractReturnType>\n\ntype GetEstimateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n  // For making `options` parameter required if `TAccount`\n  IsOptionsRequired = IsUndefined<TAccount>,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n  : (\n      ...parameters:\n        | (IsOptionsRequired extends true\n            ? [options: Options]\n            : [options?: Options])\n        | [\n            args: readonly unknown[],\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n\ntype GetSimulateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<\n      SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n    >\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<SimulateContractReturnType>\n\ntype GetWriteFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  // For making `options` parameter required if `TAccount` or `TChain` is undefined\n  IsOptionsRequired = Or<[IsUndefined<TAccount>, IsUndefined<TChain>]>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<WriteContractReturnType>\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n      Rest extends unknown[] = IsOptionsRequired extends true\n        ? [options: Options]\n        : [options?: Options],\n    >(\n      ...parameters: Rest | [args: readonly unknown[], ...parameters: Rest]\n    ) => Promise<WriteContractReturnType>\n\ntype GetEventFilter<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      CreateContractEventFilterParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName' | 'strict'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? <\n      const TArgs extends\n        | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n        | undefined,\n      TStrict extends boolean | undefined = undefined,\n    >(\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: Options & { strict?: TStrict }]\n        : [\n            args: Args | (Args extends TArgs ? Readonly<TArgs> : never),\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<\n      CreateContractEventFilterReturnType<TAbi, TEventName, TArgs, TStrict>\n    >\n  : <TStrict extends boolean | undefined = undefined>(\n      ...parameters:\n        | [options?: Options & { strict?: TStrict }]\n        | [\n            args: readonly unknown[] | CreateContractFilterOptions,\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<CreateContractEventFilterReturnType>\n\ntype GetWatchEvent<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      WatchContractEventParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options: Options]\n        : [args: Args, options: Options]\n    ) => WatchContractEventReturnType\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [\n            args: readonly unknown[] | WatchContractEventOptions,\n            options?: Options,\n          ]\n    ) => WatchContractEventReturnType\n\ntype CreateContractFilterOptions =\n  RemoveProperties<CreateContractEventFilterParameters>\ntype WatchContractEventOptions = RemoveProperties<WatchContractEventParameters>\n\ntype RemoveProperties<T extends object> = Prettify<\n  {\n    [key: string]: unknown\n  } & {\n    [_ in keyof T]?: never\n  }\n>\n", "import type { Address } from 'abitype'\n\nimport type { Hex } from '../../types/misc.js'\nimport { checksumAddress } from '../../utils/address/getAddress.js'\nimport { keccak256 } from '../../utils/hash/keccak256.js'\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n", "// Tree-shaking doesn't work well when we import from an index entrypoint. We don't\n// want to bundle libs like `@noble/curves`, etc within the `/accounts` entrypoint\n// as that will dramatically increase bundle size. So we export the modules directly.\nexport { parseAccount } from '../accounts/utils/parseAccount.js'\nexport { publicKeyToAddress } from '../accounts/utils/publicKeyToAddress.js'\n", "const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account, JsonRpcAccount } from '../accounts/types.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { parseAccount } from '../utils/accounts.js'\nimport { uid } from '../utils/uid.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <const client extends Extended>(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch']\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [K in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\n/**\n * Creates a base client with the given transport.\n */\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n", "import { wait } from '../wait.js'\n\nexport function withRetry<TData>(\n  fn: () => Promise<TData>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: {\n    // The delay (in ms) between retries.\n    delay?: ((config: { count: number; error: Error }) => number) | number\n    // The max number of times to retry.\n    retryCount?: number\n    // Whether or not to retry when an error is thrown.\n    shouldRetry?: ({\n      count,\n      error,\n    }: {\n      count: number\n      error: Error\n    }) => Promise<boolean> | boolean\n  } = {},\n) {\n  return new Promise<TData>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n", "import { BaseError } from '../errors/base.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  InternalRpcError,\n  InvalidInputRpcError,\n  InvalidParamsRpcError,\n  InvalidRequestRpcError,\n  JsonRpcVersionUnsupportedError,\n  LimitExceededRpcError,\n  MethodNotFoundRpcError,\n  MethodNotSupportedRpcError,\n  ParseRpcError,\n  ProviderDisconnectedError,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  ResourceUnavailableRpcError,\n  type RpcError,\n  type RpcErrorCode,\n  SwitchChainError,\n  TransactionRejectedRpcError,\n  UnauthorizedProviderError,\n  UnknownRpcError,\n  UnsupportedProviderMethodError,\n  UserRejectedRequestError,\n} from '../errors/rpc.js'\n\nimport { withRetry } from './promise/withRetry.js'\n\nexport const isDeterministicError = (error: Error) => {\n  if ('code' in error)\n    return (\n      error.code !== -1 &&\n      error.code !== -32004 &&\n      error.code !== -32005 &&\n      error.code !== -32042 &&\n      error.code !== -32603\n    )\n  if (error instanceof HttpRequestError && error.status)\n    return (\n      error.status !== 403 &&\n      error.status !== 408 &&\n      error.status !== 413 &&\n      error.status !== 429 &&\n      error.status !== 500 &&\n      error.status !== 502 &&\n      error.status !== 503 &&\n      error.status !== 504\n    )\n  return false\n}\n\nexport function buildRequest<TRequest extends (args: any) => Promise<any>>(\n  request: TRequest,\n  {\n    retryDelay = 150,\n    retryCount = 3,\n  }: {\n    // The base delay (in ms) between retries.\n    retryDelay?: number\n    // The max number of times to retry.\n    retryCount?: number\n  } = {},\n) {\n  return (async (args: any) =>\n    withRetry(\n      async () => {\n        try {\n          return await request(args)\n        } catch (err_) {\n          const err = err_ as unknown as RpcError<\n            RpcErrorCode | ProviderRpcErrorCode\n          >\n          switch (err.code) {\n            // -32700\n            case ParseRpcError.code:\n              throw new ParseRpcError(err)\n            // -32600\n            case InvalidRequestRpcError.code:\n              throw new InvalidRequestRpcError(err)\n            // -32601\n            case MethodNotFoundRpcError.code:\n              throw new MethodNotFoundRpcError(err)\n            // -32602\n            case InvalidParamsRpcError.code:\n              throw new InvalidParamsRpcError(err)\n            // -32603\n            case InternalRpcError.code:\n              throw new InternalRpcError(err)\n            // -32000\n            case InvalidInputRpcError.code:\n              throw new InvalidInputRpcError(err)\n            // -32001\n            case ResourceNotFoundRpcError.code:\n              throw new ResourceNotFoundRpcError(err)\n            // -32002\n            case ResourceUnavailableRpcError.code:\n              throw new ResourceUnavailableRpcError(err)\n            // -32003\n            case TransactionRejectedRpcError.code:\n              throw new TransactionRejectedRpcError(err)\n            // -32004\n            case MethodNotSupportedRpcError.code:\n              throw new MethodNotSupportedRpcError(err)\n            // -32005\n            case LimitExceededRpcError.code:\n              throw new LimitExceededRpcError(err)\n            // -32006\n            case JsonRpcVersionUnsupportedError.code:\n              throw new JsonRpcVersionUnsupportedError(err)\n            // 4001\n            case UserRejectedRequestError.code:\n              throw new UserRejectedRequestError(err)\n            // 4100\n            case UnauthorizedProviderError.code:\n              throw new UnauthorizedProviderError(err)\n            // 4200\n            case UnsupportedProviderMethodError.code:\n              throw new UnsupportedProviderMethodError(err)\n            // 4900\n            case ProviderDisconnectedError.code:\n              throw new ProviderDisconnectedError(err)\n            // 4901\n            case ChainDisconnectedError.code:\n              throw new ChainDisconnectedError(err)\n            // 4902\n            case SwitchChainError.code:\n              throw new SwitchChainError(err)\n            // CAIP-25: User Rejected Error\n            // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n            case 5000:\n              throw new UserRejectedRequestError(err)\n            default:\n              if (err_ instanceof BaseError) throw err_\n              throw new UnknownRpcError(err as Error)\n          }\n        }\n      },\n      {\n        delay: ({ count, error }) => {\n          // If we find a Retry-After header, let's retry after the given time.\n          if (error && error instanceof HttpRequestError) {\n            const retryAfter = error?.headers?.get('Retry-After')\n            if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000\n          }\n\n          // Otherwise, let's retry with an exponential backoff.\n          return ~~(1 << count) * retryDelay\n        },\n        retryCount,\n        shouldRetry: ({ error }) => !isDeterministicError(error),\n      },\n    )) as TRequest\n}\n", "import type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  TType extends string = string,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: TEIP1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number\n  /** The max number of times to retry. */\n  retryCount?: number\n  /** The timeout (in ms) for requests. */\n  timeout?: number\n  /** The type of the transport. */\n  type: TType\n}\n\nexport type Transport<\n  TType extends string = string,\n  TRpcAttributes = Record<string, any>,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <TChain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: TChain\n  pollingInterval?: ClientConfig['pollingInterval']\n  retryCount?: TransportConfig['retryCount']\n  timeout?: TransportConfig['timeout']\n}) => {\n  config: TransportConfig<TType>\n  request: TEIP1193RequestFn\n  value?: TRpcAttributes\n}\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  TType extends string,\n  TRpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<TType>,\n  value?: TRpcAttributes,\n): ReturnType<Transport<TType, TRpcAttributes>> {\n  return {\n    config: { key, name, request, retryCount, retryDelay, timeout, type },\n    request: buildRequest(request, { retryCount, retryDelay }),\n    value,\n  }\n}\n", "import {\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key']\n  /** The name of the transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<TProvider extends EthereumProvider>(\n  provider: TProvider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const { key = 'custom', name = 'Custom Provider', retryDelay } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n", "import type { Chain } from '../../types/chain.js'\nimport { isDeterministicError } from '../../utils/buildRequest.js'\nimport { wait } from '../../utils/wait.js'\n\nimport {\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n// TODO: Narrow `method` & `params` types.\nexport type OnResponseFn = (\n  args: {\n    method: string\n    params: unknown[]\n    transport: ReturnType<Transport>\n  } & (\n    | {\n        error?: never\n        response: unknown\n        status: 'success'\n      }\n    | {\n        error: Error\n        response?: never\n        status: 'error'\n      }\n  ),\n) => void\n\ntype RankOptions = {\n  /**\n   * The polling interval (in ms) at which the ranker should ping the RPC URL.\n   * @default client.pollingInterval\n   */\n  interval?: number\n  /**\n   * The number of previous samples to perform ranking on.\n   * @default 10\n   */\n  sampleCount?: number\n  /**\n   * Timeout when sampling transports.\n   * @default 1_000\n   */\n  timeout?: number\n  /**\n   * Weights to apply to the scores. Weight values are proportional.\n   */\n  weights?: {\n    /**\n     * The weight to apply to the latency score.\n     * @default 0.3\n     */\n    latency?: number\n    /**\n     * The weight to apply to the stability score.\n     * @default 0.7\n     */\n    stability?: number\n  }\n}\n\nexport type FallbackTransportConfig = {\n  /** The key of the Fallback transport. */\n  key?: TransportConfig['key']\n  /** The name of the Fallback transport. */\n  name?: TransportConfig['name']\n  /** Toggle to enable ranking, or rank options. */\n  rank?: boolean | RankOptions\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type FallbackTransport = Transport<\n  'fallback',\n  {\n    onResponse: (fn: OnResponseFn) => void\n    transports: ReturnType<Transport>[]\n  }\n>\n\nexport function fallback(\n  transports_: Transport[],\n  config: FallbackTransportConfig = {},\n): FallbackTransport {\n  const {\n    key = 'fallback',\n    name = 'Fallback',\n    rank = false,\n    retryCount,\n    retryDelay,\n  } = config\n  return ({ chain, pollingInterval = 4_000, timeout }) => {\n    let transports = transports_\n\n    let onResponse: OnResponseFn = () => {}\n\n    const transport = createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const fetch = async (i = 0): Promise<any> => {\n            const transport = transports[i]({ chain, retryCount: 0, timeout })\n            try {\n              const response = await transport.request({\n                method,\n                params,\n              } as any)\n\n              onResponse({\n                method,\n                params: params as unknown[],\n                response,\n                transport,\n                status: 'success',\n              })\n\n              return response\n            } catch (err) {\n              onResponse({\n                error: err as Error,\n                method,\n                params: params as unknown[],\n                transport,\n                status: 'error',\n              })\n\n              // If the error is deterministic, we don't need to fall back.\n              // So throw the error.\n              if (isDeterministicError(err as Error)) throw err\n\n              // If we've reached the end of the fallbacks, throw the error.\n              if (i === transports.length - 1) throw err\n\n              // Otherwise, try the next fallback.\n              return fetch(i + 1)\n            }\n          }\n          return fetch()\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback',\n      },\n      {\n        onResponse: (fn: OnResponseFn) => (onResponse = fn),\n        transports: transports.map((fn) => fn({ chain, retryCount: 0 })),\n      },\n    )\n\n    if (rank) {\n      const rankOptions = (typeof rank === 'object' ? rank : {}) as RankOptions\n      rankTransports({\n        chain,\n        interval: rankOptions.interval ?? pollingInterval,\n        onTransports: (transports_) => (transports = transports_),\n        sampleCount: rankOptions.sampleCount,\n        timeout: rankOptions.timeout,\n        transports,\n        weights: rankOptions.weights,\n      })\n    }\n    return transport\n  }\n}\n\nexport function rankTransports({\n  chain,\n  interval = 4_000,\n  onTransports,\n  sampleCount = 10,\n  timeout = 1_000,\n  transports,\n  weights = {},\n}: {\n  chain?: Chain\n  interval: RankOptions['interval']\n  onTransports: (transports: Transport[]) => void\n  sampleCount?: RankOptions['sampleCount']\n  timeout?: RankOptions['timeout']\n  transports: Transport[]\n  weights?: RankOptions['weights']\n}) {\n  const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } =\n    weights\n\n  type SampleData = { latency: number; success: number }\n  type Sample = SampleData[]\n  const samples: Sample[] = []\n\n  const rankTransports_ = async () => {\n    // 1. Take a sample from each Transport.\n    const sample: Sample = await Promise.all(\n      transports.map(async (transport) => {\n        const transport_ = transport({ chain, retryCount: 0, timeout })\n\n        const start = Date.now()\n        let end\n        let success\n        try {\n          await transport_.request({ method: 'net_listening' })\n          success = 1\n        } catch {\n          success = 0\n        } finally {\n          end = Date.now()\n        }\n        const latency = end - start\n        return { latency, success }\n      }),\n    )\n\n    // 2. Store the sample. If we have more than `sampleCount` samples, remove\n    // the oldest sample.\n    samples.push(sample)\n    if (samples.length > sampleCount) samples.shift()\n\n    // 3. Calculate the max latency from samples.\n    const maxLatency = Math.max(\n      ...samples.map((sample) =>\n        Math.max(...sample.map(({ latency }) => latency)),\n      ),\n    )\n\n    // 4. Calculate the score for each Transport.\n    const scores = transports\n      .map((_, i) => {\n        const latencies = samples.map((sample) => sample[i].latency)\n        const meanLatency =\n          latencies.reduce((acc, latency) => acc + latency, 0) /\n          latencies.length\n        const latencyScore = 1 - meanLatency / maxLatency\n\n        const successes = samples.map((sample) => sample[i].success)\n        const stabilityScore =\n          successes.reduce((acc, success) => acc + success, 0) /\n          successes.length\n\n        if (stabilityScore === 0) return [0, i]\n        return [\n          latencyWeight * latencyScore + stabilityWeight * stabilityScore,\n          i,\n        ]\n      })\n      .sort((a, b) => b[0] - a[0])\n\n    // 5. Sort the Transports by score.\n    onTransports(scores.map(([, i]) => transports[i]))\n\n    // 6. Wait, and then rank again.\n    await wait(interval)\n    rankTransports_()\n  }\n  rankTransports_()\n}\n", "import { BaseError } from './base.js'\n\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n      },\n    )\n  }\n}\n", "// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n", "export function withTimeout<TData>(\n  fn: ({ signal }: { signal?: AbortController['signal'] }) => Promise<TData>,\n  {\n    errorInstance,\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance: Error\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean\n  },\n): Promise<TData> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout)\n        }\n        resolve(await fn({ signal: controller?.signal }))\n      } catch (err) {\n        if ((err as Error).name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n", "// @ts-ignore - TODO: TypeScript throws an error during CJS compilation here. Need to look into just rolling our own isomorphic-ws.\nimport WebSocket from 'isomorphic-ws'\nimport type { MessageEvent } from 'isomorphic-ws'\n\nimport {\n  HttpRequestError,\n  TimeoutError,\n  WebSocketRequestError,\n} from '../errors/request.js'\n\nimport { createBatchScheduler } from './promise/createBatchScheduler.js'\nimport { withTimeout } from './promise/withTimeout.js'\nimport { stringify } from './stringify.js'\n\nlet id = 0\n\ntype SuccessResult<T> = {\n  method?: never\n  result: T\n  error?: never\n}\ntype ErrorResult<T> = {\n  method?: never\n  result?: never\n  error: T\n}\ntype Subscription<TResult, TError> = {\n  method: 'eth_subscription'\n  error?: never\n  result?: never\n  params: {\n    subscription: string\n  } & (\n    | {\n        result: TResult\n        error?: never\n      }\n    | {\n        result?: never\n        error: TError\n      }\n  )\n}\n\nexport type RpcRequest = { method: string; params?: any; id?: number }\n\nexport type RpcResponse<TResult = any, TError = any> = {\n  jsonrpc: `${number}`\n  id: number\n} & (\n  | SuccessResult<TResult>\n  | ErrorResult<TError>\n  | Subscription<TResult, TError>\n)\n\n///////////////////////////////////////////////////\n// HTTP\n\nexport type HttpOptions<TBody extends RpcRequest | RpcRequest[] = RpcRequest,> =\n  {\n    // The RPC request body.\n    body: TBody\n    // Request configuration to pass to `fetch`.\n    fetchOptions?: Omit<RequestInit, 'body'>\n    // The timeout (in ms) for the request.\n    timeout?: number\n  }\n\nexport type HttpReturnType<\n  TBody extends RpcRequest | RpcRequest[] = RpcRequest,\n> = TBody extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nasync function http<TBody extends RpcRequest | RpcRequest[]>(\n  url: string,\n  { body, fetchOptions = {}, timeout = 10_000 }: HttpOptions<TBody>,\n): Promise<HttpReturnType<TBody>> {\n  const { headers, method, signal: signal_ } = fetchOptions\n  try {\n    const response = await withTimeout(\n      async ({ signal }) => {\n        const response = await fetch(url, {\n          ...fetchOptions,\n          body: Array.isArray(body)\n            ? stringify(\n                body.map((body) => ({\n                  jsonrpc: '2.0',\n                  id: body.id ?? id++,\n                  ...body,\n                })),\n              )\n            : stringify({ jsonrpc: '2.0', id: body.id ?? id++, ...body }),\n          headers: {\n            ...headers,\n            'Content-Type': 'application/json',\n          },\n          method: method || 'POST',\n          signal: signal_ || (timeout > 0 ? signal : undefined),\n        })\n        return response\n      },\n      {\n        errorInstance: new TimeoutError({ body, url }),\n        timeout,\n        signal: true,\n      },\n    )\n\n    let data\n    if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n      data = await response.json()\n    } else {\n      data = await response.text()\n    }\n\n    if (!response.ok) {\n      throw new HttpRequestError({\n        body,\n        details: stringify(data.error) || response.statusText,\n        headers: response.headers,\n        status: response.status,\n        url,\n      })\n    }\n\n    return data\n  } catch (err) {\n    if (err instanceof HttpRequestError) throw err\n    if (err instanceof TimeoutError) throw err\n    throw new HttpRequestError({\n      body,\n      details: (err as Error).message,\n      url,\n    })\n  }\n}\n\n///////////////////////////////////////////////////\n// WebSocket\n\ntype Id = string | number\ntype CallbackFn = (message: any) => void\ntype CallbackMap = Map<Id, CallbackFn>\n\nexport type Socket = WebSocket & {\n  requests: CallbackMap\n  subscriptions: CallbackMap\n}\n\nexport const socketsCache = /*#__PURE__*/ new Map<string, Socket>()\n\nexport async function getSocket(url: string) {\n  let socket = socketsCache.get(url)\n\n  // If the socket already exists, return it.\n  if (socket) return socket\n\n  const { schedule } = createBatchScheduler<undefined, [Socket]>({\n    id: url,\n    fn: async () => {\n      let WebSocket_ = WebSocket\n      if (!WebSocket.constructor) WebSocket_ = WebSocket.WebSocket\n      const webSocket = new WebSocket_(url)\n\n      // Set up a cache for incoming \"synchronous\" requests.\n      const requests = new Map<Id, CallbackFn>()\n\n      // Set up a cache for subscriptions (eth_subscribe).\n      const subscriptions = new Map<Id, CallbackFn>()\n\n      const onMessage: (event: MessageEvent) => void = ({ data }) => {\n        const message: RpcResponse = JSON.parse(data as string)\n        const isSubscription = message.method === 'eth_subscription'\n        const id = isSubscription ? message.params.subscription : message.id\n        const cache = isSubscription ? subscriptions : requests\n        const callback = cache.get(id)\n        if (callback) callback({ data })\n        if (!isSubscription) cache.delete(id)\n      }\n      const onClose = () => {\n        socketsCache.delete(url)\n        webSocket.removeEventListener('close', onClose)\n        webSocket.removeEventListener('message', onMessage)\n      }\n\n      // Setup event listeners for RPC & subscription responses.\n      webSocket.addEventListener('close', onClose)\n      webSocket.addEventListener('message', onMessage)\n\n      // Wait for the socket to open.\n      if (webSocket.readyState === WebSocket.CONNECTING) {\n        await new Promise((resolve, reject) => {\n          if (!webSocket) return\n          webSocket.onopen = resolve\n          webSocket.onerror = reject\n        })\n      }\n\n      // Create a new socket instance.\n      socket = Object.assign(webSocket, {\n        requests,\n        subscriptions,\n      })\n      socketsCache.set(url, socket)\n\n      return [socket]\n    },\n  })\n\n  const [_, [socket_]] = await schedule()\n  return socket_\n}\n\nexport type WebSocketOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The callback to invoke on response. */\n  onResponse?: (message: RpcResponse) => void\n}\n\nexport type WebSocketReturnType = Socket\n\nfunction webSocket(\n  socket: Socket,\n  { body, onResponse }: WebSocketOptions,\n): WebSocketReturnType {\n  if (\n    socket.readyState === socket.CLOSED ||\n    socket.readyState === socket.CLOSING\n  )\n    throw new WebSocketRequestError({\n      body,\n      url: socket.url,\n      details: 'Socket is closed.',\n    })\n\n  const id_ = id++\n\n  const callback = ({ data }: { data: any }) => {\n    const message: RpcResponse = JSON.parse(data)\n\n    if (typeof message.id === 'number' && id_ !== message.id) return\n\n    onResponse?.(message)\n\n    // If we are subscribing to a topic, we want to set up a listener for incoming\n    // messages.\n    if (body.method === 'eth_subscribe' && typeof message.result === 'string') {\n      socket.subscriptions.set(message.result, callback)\n    }\n\n    // If we are unsubscribing from a topic, we want to remove the listener.\n    if (body.method === 'eth_unsubscribe') {\n      socket.subscriptions.delete(body.params?.[0])\n    }\n  }\n  socket.requests.set(id_, callback)\n\n  socket.send(JSON.stringify({ jsonrpc: '2.0', ...body, id: id_ }))\n\n  return socket\n}\n\nexport type WebSocketAsyncOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The timeout (in ms) for the request. */\n  timeout?: number\n}\n\nexport type WebSocketAsyncReturnType = RpcResponse\n\nasync function webSocketAsync(\n  socket: Socket,\n  { body, timeout = 10_000 }: WebSocketAsyncOptions,\n): Promise<WebSocketAsyncReturnType> {\n  return withTimeout(\n    () =>\n      new Promise<RpcResponse>((onResponse) =>\n        rpc.webSocket(socket, {\n          body,\n          onResponse,\n        }),\n      ),\n    {\n      errorInstance: new TimeoutError({ body, url: socket.url }),\n      timeout,\n    },\n  )\n}\n\n///////////////////////////////////////////////////\n\nexport const rpc = {\n  http,\n  webSocket,\n  webSocketAsync,\n}\n", "import { RpcRequestError } from '../../errors/request.js'\nimport { UrlRequiredError } from '../../errors/transport.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport { type HttpOptions, type RpcRequest, rpc } from '../../utils/rpc.js'\n\nimport {\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type BatchOptions = {\n  /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n  batchSize?: number\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number\n}\n\nexport type HttpTransportConfig = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?: boolean | BatchOptions\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpOptions['fetchOptions']\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key']\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type HttpTransport = Transport<\n  'http',\n  {\n    url?: string\n  }\n>\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: HttpTransportConfig = {},\n): HttpTransport {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    name = 'HTTP JSON-RPC',\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: `${url}`,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpc.http(url_, {\n                body,\n                fetchOptions,\n                timeout,\n              }),\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [await rpc.http(url_, { body, fetchOptions, timeout })]\n\n          const [{ error, result }] = await fn(body)\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        url,\n      },\n    )\n  }\n}\n", "import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n", "import type { Hex } from '../../types/misc.js'\nimport { isHex } from '../data/isHex.js'\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n", "import { concat } from '../data/concat.js'\nimport { stringToBytes, toBytes } from '../encoding/toBytes.js'\nimport { bytesToHex } from '../encoding/toHex.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { encodedLabelToLabelhash } from './encodedLabelToLabelhash.js'\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * namehash('wagmi-dev.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0)\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n", "import type { Hex } from '../../types/misc.js'\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n", "import { stringToBytes } from '../encoding/toBytes.js'\nimport { bytesToHex } from '../encoding/toHex.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { encodedLabelToLabelhash } from './encodedLabelToLabelhash.js'\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n", "// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ByteArray } from '../../types/misc.js'\nimport { stringToBytes } from '../encoding/toBytes.js'\nimport { encodeLabelhash } from './encodeLabelhash.js'\nimport { labelhash } from './labelhash.js'\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { decodeFunctionResult } from '../../utils/abi/decodeFunctionResult.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { trim } from '../../utils/data/trim.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { namehash } from '../../utils/ens/namehash.js'\nimport { packetToBytes } from '../../utils/ens/packetToBytes.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENSIP-9 compliant coinType used to resolve addresses for other chains */\n    coinType?: number\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wagmi-dev.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    coinType,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      ...(coinType != null\n        ? { args: [namehash(name), BigInt(coinType)] }\n        : { args: [namehash(name)] }),\n    })\n\n    const res = await readContract(client, {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [toHex(packetToBytes(name)), functionData],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n", "import { BaseError } from './base.js'\n\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  override name = 'EnsAvatarInvalidMetadataError'\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  override name = 'EnsAvatarInvalidNftUriError'\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`)\n  }\n}\n\nexport class EnsAvatarUriResolutionError extends BaseError {\n  override name = 'EnsAvatarUriResolutionError'\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n    )\n  }\n}\n\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  override name = 'EnsAvatarUnsupportedNamespaceError'\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n    )\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport { readContract } from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  EnsAvatarInvalidNftUriError,\n  EnsAvatarUnsupportedNamespaceError,\n  EnsAvatarUriResolutionError,\n} from '../../../errors/ens.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (!globalThis.hasOwnProperty('Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  } else if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: parseInt(chainID),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport async function getNftTokenUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n", "import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  parseAvatarUri,\n  parseNftUri,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport async function parseAvatarRecord<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\nasync function parseNftAvatarUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { decodeFunctionResult } from '../../utils/abi/decodeFunctionResult.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { namehash } from '../../utils/ens/namehash.js'\nimport { packetToBytes } from '../../utils/ens/packetToBytes.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Text record to retrieve. */\n    key: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wagmi-dev.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wagmi_sh'\n */\nexport async function getEnsText<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    key,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const res = await readContract(client, {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n      ],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { parseAvatarRecord } from '../../utils/ens/avatar/parseAvatarRecord.js'\n\nimport { type GetEnsTextParameters, getEnsText } from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    gatewayUrls?: AssetGatewayUrls\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wagmi-dev.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    gatewayUrls,\n    name,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getEnsText(client, {\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, { record, gatewayUrls })\n  } catch {\n    return null\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { packetToBytes } from '../../utils/ens/packetToBytes.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Address to get ENS name for. */\n    address: Address\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wagmi-dev.eth'\n */\nexport async function getEnsName<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockNumber,\n    blockTag,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`\n  try {\n    const res = await readContract(client, {\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      functionName: 'reverse',\n      args: [toHex(packetToBytes(reverseNode))],\n      blockNumber,\n      blockTag,\n    })\n    return res[0]\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'reverse')) return null\n    throw err\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\nimport { packetToBytes } from '../../utils/ens/packetToBytes.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wagmi-dev.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsResolverParameters,\n) {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const [resolverAddress] = await readContract(client, {\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [{ type: 'address' }, { type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n", "import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (MaybeExtractEventArgsFromAbi<\n  TAbiEvents,\n  _EventName\n> extends infer TEventFilterArgs\n  ?\n      | {\n          args:\n            | TEventFilterArgs\n            | (_Args extends TEventFilterArgs ? _Args : never)\n          event: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events: TAbiEvents\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events?: never\n          strict?: never\n        }\n  : {\n      args?: never\n      event?: never\n      events?: never\n      strict?: never\n    })\n\nexport type CreateEventFilterReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', TAbiEvents, _EventName, _Args, TStrict, TFromBlock, TToBlock>\n>\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict,\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByHash',\n      params: [blockHash],\n    })\n  } else {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByNumber',\n      params: [blockNumberHex || blockTag],\n    })\n  }\n\n  return hexToNumber(count)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetBytecodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetBytecodeReturnType = Hex | undefined\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getBytecode.html\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBytecodeParameters}\n * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBytecode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getBytecode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getBytecode<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBytecodeParameters,\n): Promise<GetBytecodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request({\n    method: 'eth_getCode',\n    params: [address, blockNumberHex || blockTag],\n  })\n  if (hex === '0x') return undefined\n  return hex\n}\n", "import type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { formatFeeHistory } from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: never\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request({\n    method: 'eth_feeHistory',\n    params: [\n      numberToHex(blockCount),\n      blockNumberHex || blockTag,\n      rewardPercentiles,\n    ],\n  })\n  return formatFeeHistory(feeHistory)\n}\n", "import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport { formatLog } from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', TAbi, TEventName, any, TStrict, TFromBlock, TToBlock>\n}\nexport type GetFilterLogsReturnType<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, TChain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<TAbi, TEventName, TStrict, TFromBlock, TToBlock>,\n): Promise<\n  GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetFilterLogsReturnType<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { TransactionNotFoundError } from '../../errors/transaction.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<TBlockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: never\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. */\n      blockTag: TBlockTag | BlockTag\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      blockTag?: never\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number\n    }\n\nexport type GetTransactionReturnType<\n  TChain extends Chain | undefined = Chain,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedTransaction<TChain, TBlockTag>\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  TChain extends Chain | undefined,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<TBlockTag>,\n): Promise<GetTransactionReturnType<TChain, TBlockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByHash',\n      params: [hash],\n    })\n  } else if (blockHash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockHashAndIndex',\n      params: [blockHash, numberToHex(index)],\n    })\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockNumberAndIndex',\n      params: [blockNumberHex || blockTag, numberToHex(index)],\n    })\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\n\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getTransaction } from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  TChain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: never\n    }\n  | {\n      hash?: never\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<TChain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<TChain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getBlockNumber(client),\n    hash ? getTransaction(client, { hash }) : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { TransactionReceiptNotFoundError } from '../../errors/transaction.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionReceipt<TChain>\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request({\n    method: 'eth_getTransactionReceipt',\n    params: [hash],\n  })\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<TChain>\n}\n", "import type { Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport { decodeFunctionResult } from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { getChainContractAddress } from '../../utils/chain.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\n\nimport type { CallParameters } from './call.js'\nimport { readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n  allowFailure?: TAllowFailure\n  /** The maximum size (in bytes) for each calldata chunk. Set to `0` to disable the size limit. @default 1_024 */\n  batchSize?: number\n  contracts: Narrow<readonly [...MulticallContracts<TContracts>]>\n  multicallAddress?: Address\n}\n\nexport type MulticallReturnType<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = MulticallResults<TContracts, TAllowFailure>\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall.html\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  TContracts extends ContractFunctionConfig[],\n  TChain extends Chain | undefined,\n  TAllowFailure extends boolean = true,\n>(\n  client: Client<Transport, TChain>,\n  args: MulticallParameters<TContracts, TAllowFailure>,\n): Promise<MulticallReturnType<TContracts, TAllowFailure>> {\n  const {\n    allowFailure = true,\n    batchSize: batchSize_,\n    blockNumber,\n    blockTag,\n    contracts,\n    multicallAddress: multicallAddress_,\n  } = args\n\n  const batchSize =\n    batchSize_ ??\n    ((typeof client.batch?.multicall === 'object' &&\n      client.batch.multicall.batchSize) ||\n      1_024)\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. multicallAddress is required.',\n      )\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[\n      i\n    ] as ContractFunctionConfig\n    try {\n      const callData = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n      } as unknown as EncodeFunctionDataParameters)\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      readContract(client, {\n        abi: multicall3Abi,\n        address: multicallAddress!,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionConfig\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallResults<TContracts, TAllowFailure>\n}\n", "export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n", "// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { toHex } from '../encoding/toHex.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { getTypesForEIP712Domain, validateTypedData } from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport function hashTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain: domain_,\n  message,\n  primaryType,\n  types: types_,\n}: HashTypedDataParameters<TTypedData, TPrimaryType>): HashTypedDataReturnType {\n  const domain: TypedDataDomain = typeof domain_ === 'undefined' ? {} : domain_\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType: primaryType as string,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n  }\n\n  return keccak256(concat(parts))\n}\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\nfunction hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\nfunction encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n", "import type {\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\n\nimport { isAddress } from './address/isAddress.js'\nimport { size } from './data/size.js'\nimport { numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport { hashDomain } from './signature/hashTypedData.js'\n\nexport function validateTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  types: types_,\n}: TypedDataDefinition<TTypedData, TPrimaryType>) {\n  const types = types_ as TypedData\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    value_: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type: type_ } = param\n      const type = type_ as TypedDataType\n      const value = value_[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) validateData(struct, value as Record<string, unknown>)\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain)\n\n  if (primaryType !== 'EIP712Domain') {\n    // Validate message types.\n    const type = types[primaryType]\n    validateData(type, message as Record<string, unknown>)\n  }\n}\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    typeof domain?.chainId === 'number' && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n", "import type { Abi, ExtractAbiFunctionNames } from 'abitype'\n\nimport { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js'\nimport type { GetFunctionArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { slice } from '../data/slice.js'\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js'\n\nimport { decodeAbiParameters } from './decodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  data: Hex\n}\n\nexport type DecodeFunctionDataReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  _FunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi>\n    : string,\n> = {\n  [TName in _FunctionNames]: {\n    args: GetFunctionArgs<TAbi, TName>['args']\n    functionName: TName\n  }\n}[_FunctionNames]\n\nexport function decodeFunctionData<TAbi extends Abi | readonly unknown[]>({\n  abi,\n  data,\n}: DecodeFunctionDataParameters<TAbi>) {\n  const signature = slice(data, 0, 4)\n  const description = (abi as Abi).find(\n    (x) =>\n      x.type === 'function' &&\n      signature === getFunctionSelector(formatAbiItem(x)),\n  )\n  if (!description)\n    throw new AbiFunctionSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeFunctionData',\n    })\n  return {\n    functionName: (description as { name: string }).name,\n    args: ('inputs' in description &&\n    description.inputs &&\n    description.inputs.length > 0\n      ? decodeAbiParameters(description.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n  } as DecodeFunctionDataReturnType<TAbi>\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { concatHex } from '../data/concat.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport function encodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  args,\n  bytecode,\n}: EncodeDeployDataParameters<TAbi>) {\n  if (!args || args.length === 0) return bytecode\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(\n    description.inputs,\n    args as readonly unknown[],\n  )\n  return concatHex([bytecode, data!])\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetErrorArgs,\n  InferErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { concatHex } from '../data/concat.js'\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TErrorName extends string | undefined = string,\n  _ErrorName = InferErrorName<TAbi, TErrorName>,\n> = {\n  errorName?: _ErrorName\n} & (TErrorName extends string\n  ? { abi: TAbi } & GetErrorArgs<TAbi, TErrorName>\n  : _ErrorName extends string\n  ? { abi: [TAbi[number]] } & GetErrorArgs<TAbi, _ErrorName>\n  : never)\n\nexport function encodeErrorResult<\n  const TAbi extends Abi | readonly unknown[],\n  TErrorName extends string | undefined = undefined,\n>({ abi, errorName, args }: EncodeErrorResultParameters<TAbi, TErrorName>) {\n  let abiItem = abi[0] as AbiItem\n  if (errorName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: errorName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiErrorNotFoundError(errorName, { docsPath })\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && (args as readonly unknown[]).length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args as readonly unknown[])\n  }\n  return concatHex([signature, data])\n}\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  InferFunctionName,\n} from '../../types/contract.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi; result?: ContractFunctionResult<TAbi, TFunctionName> }\n  : _FunctionName extends string\n  ? {\n      abi: [TAbi[number]]\n      result?: ContractFunctionResult<TAbi, _FunctionName>\n    }\n  : never)\n\nexport function encodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  functionName,\n  result,\n}: EncodeFunctionResultParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionResult',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionResult',\n    })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  let values = Array.isArray(result) ? result : [result]\n  if (abiItem.outputs.length === 0 && !values[0]) values = []\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n", "import type {\n  AbiParameterToPrimitiveType,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArrayWithoutTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityInt,\n  SolidityString,\n} from 'abitype'\n\nimport {\n  AbiEncodingLengthMismatchError,\n  BytesSizeMismatchError,\n  UnsupportedPackedAbiType,\n} from '../../errors/abi.js'\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { Hex } from '../../types/misc.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { concatHex } from '../data/concat.js'\nimport { pad } from '../data/pad.js'\nimport { boolToHex, numberToHex, stringToHex } from '../encoding/toHex.js'\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js'\n\ntype PackedAbiType =\n  | SolidityAddress\n  | SolidityBool\n  | SolidityBytes\n  | SolidityInt\n  | SolidityString\n  | SolidityArrayWithoutTuple\n\ntype EncodePackedValues<\n  TPackedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n> = {\n  [K in keyof TPackedAbiTypes]: TPackedAbiTypes[K] extends AbiType\n    ? AbiParameterToPrimitiveType<{ type: TPackedAbiTypes[K] }>\n    : unknown\n}\n\nexport function encodePacked<\n  const TPackedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: TPackedAbiTypes, values: EncodePackedValues<TPackedAbiTypes>): Hex {\n  if (types.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encode(type, value))\n  }\n  return concatHex(data)\n}\n\nfunction encode<const TPackedAbiType extends PackedAbiType | unknown>(\n  type: TPackedAbiType,\n  value: EncodePackedValues<[TPackedAbiType]>[0],\n  isArray = false,\n): Hex {\n  if (type === 'address') {\n    const address = value as Address\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n    return pad(address.toLowerCase() as Hex, {\n      size: isArray ? 32 : null,\n    }) as Address\n  }\n  if (type === 'string') return stringToHex(value as string)\n  if (type === 'bytes') return value as Hex\n  if (type === 'bool')\n    return pad(boolToHex(value as boolean), { size: isArray ? 32 : 1 })\n\n  const intMatch = (type as string).match(integerRegex)\n  if (intMatch) {\n    const [_type, baseType, bits = '256'] = intMatch\n    const size = parseInt(bits) / 8\n    return numberToHex(value as number, {\n      size: isArray ? 32 : size,\n      signed: baseType === 'int',\n    })\n  }\n\n  const bytesMatch = (type as string).match(bytesRegex)\n  if (bytesMatch) {\n    const [_type, size] = bytesMatch\n    if (parseInt(size) !== ((value as Hex).length - 2) / 2)\n      throw new BytesSizeMismatchError({\n        expectedSize: parseInt(size),\n        givenSize: ((value as Hex).length - 2) / 2,\n      })\n    return pad(value as Hex, { dir: 'right', size: isArray ? 32 : null }) as Hex\n  }\n\n  const arrayMatch = (type as string).match(arrayRegex)\n  if (arrayMatch && Array.isArray(value)) {\n    const [_type, childType] = arrayMatch\n    const data: Hex[] = []\n    for (let i = 0; i < value.length; i++) {\n      data.push(encode(childType, value[i], true))\n    }\n    if (data.length === 0) return '0x'\n    return concatHex(data)\n  }\n\n  throw new UnsupportedPackedAbiType(type)\n}\n", "import type { ByteArray } from '../../types/misc.js'\n\nexport function isBytes(value: unknown): value is ByteArray {\n  if (!value) return false\n  if (typeof value !== 'object') return false\n  if (!('BYTES_PER_ELEMENT' in value)) return false\n  return (\n    value.BYTES_PER_ELEMENT === 1 && value.constructor.name === 'Uint8Array'\n  )\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { concat } from '../data/concat.js'\nimport { isBytes } from '../data/isBytes.js'\nimport { pad } from '../data/pad.js'\nimport { slice } from '../data/slice.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { toRlp } from '../encoding/toRlp.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\nimport { getAddress } from './getAddress.js'\n\nexport type GetCreateAddressOptions = {\n  from: Address\n  nonce: bigint\n}\n\nexport type GetCreate2AddressOptions = {\n  bytecode: ByteArray | Hex\n  from: Address\n  salt: ByteArray | Hex\n}\n\nexport type GetContractAddressOptions =\n  | ({\n      opcode?: 'CREATE'\n    } & GetCreateAddressOptions)\n  | ({ opcode: 'CREATE2' } & GetCreate2AddressOptions)\n\nexport function getContractAddress(opts: GetContractAddressOptions) {\n  if (opts.opcode === 'CREATE2') return getCreate2Address(opts)\n  return getCreateAddress(opts)\n}\n\nexport function getCreateAddress(opts: GetCreateAddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n\n  let nonce = toBytes(opts.nonce)\n  if (nonce[0] === 0) nonce = new Uint8Array([])\n\n  return getAddress(\n    `0x${keccak256(toRlp([from, nonce], 'bytes')).slice(26)}` as Address,\n  )\n}\n\nexport function getCreate2Address(opts: GetCreate2AddressOptions) {\n  const from = toBytes(getAddress(opts.from))\n  const salt = pad(isBytes(opts.salt) ? opts.salt : toBytes(opts.salt as Hex), {\n    size: 32,\n  }) as ByteArray\n  const bytecodeHash = toBytes(\n    keccak256(\n      (isBytes(opts.bytecode)\n        ? opts.bytecode\n        : toBytes(opts.bytecode as Hex)) as ByteArray,\n    ),\n  )\n  return getAddress(\n    slice(keccak256(concat([toBytes('0xff'), from, salt, bytecodeHash])), 12),\n  )\n}\n", "import { InvalidBytesBooleanError } from '../../errors/encoding.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { trim } from '../data/trim.js'\n\nimport { assertSize, hexToBigInt, hexToNumber } from './fromHex.js'\nimport { bytesToHex } from './toHex.js'\n\nexport type FromBytesParameters<\n  TTo extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n> =\n  | TTo\n  | {\n      /** Size of the bytes. */\n      size?: number\n      /** Type to convert to. */\n      to: TTo\n    }\n\ntype FromBytesReturnType<TTo> = TTo extends 'string'\n  ? string\n  : TTo extends 'hex'\n  ? Hex\n  : TTo extends 'bigint'\n  ? bigint\n  : TTo extends 'number'\n  ? number\n  : TTo extends 'boolean'\n  ? boolean\n  : never\n\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html\n * - Example: https://viem.sh/docs/utilities/fromBytes.html#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes<\n  TTo extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n>(\n  bytes: ByteArray,\n  toOrOpts: FromBytesParameters<TTo>,\n): FromBytesReturnType<TTo> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number')\n    return bytesToNumber(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'bigint')\n    return bytesToBigint(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'boolean')\n    return bytesToBool(bytes, opts) as FromBytesReturnType<TTo>\n  if (to === 'string')\n    return bytesToString(bytes, opts) as FromBytesReturnType<TTo>\n  return bytesToHex(bytes, opts) as FromBytesReturnType<TTo>\n}\n\nexport type BytesToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean\n  /** Size of the bytes. */\n  size?: number\n}\n\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigint } from 'viem'\n * const data = bytesToBigint(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigint(\n  bytes: ByteArray,\n  opts: BytesToBigIntOpts = {},\n): bigint {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToBigInt(hex)\n}\n\nexport type BytesToBoolOpts = {\n  /** Size of the bytes. */\n  size?: number\n}\n\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(\n  bytes_: ByteArray,\n  opts: BytesToBoolOpts = {},\n): boolean {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes)\n  }\n  if (bytes.length > 1 || bytes[0] > 1)\n    throw new InvalidBytesBooleanError(bytes)\n  return Boolean(bytes[0])\n}\n\nexport type BytesToNumberOpts = BytesToBigIntOpts\n\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(\n  bytes: ByteArray,\n  opts: BytesToNumberOpts = {},\n): number {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToNumber(hex)\n}\n\nexport type BytesToStringOpts = {\n  /** Size of the bytes. */\n  size?: number\n}\n\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes.html#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(\n  bytes_: ByteArray,\n  opts: BytesToStringOpts = {},\n): string {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n", "import {\n  DataLengthTooLongError,\n  DataLengthTooShortError,\n  InvalidHexValueError,\n  OffsetOutOfBoundsError,\n} from '../../errors/encoding.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { bytesToNumber } from './fromBytes.js'\nimport { hexToBytes } from './toBytes.js'\nimport { bytesToHex } from './toHex.js'\nimport type { RecursiveArray } from './toRlp.js'\n\ntype FromRlpReturnType<TTo> = TTo extends 'bytes'\n  ? ByteArray\n  : TTo extends 'hex'\n  ? Hex\n  : never\n\nexport function fromRlp<TTo extends 'bytes' | 'hex'>(\n  value: ByteArray | Hex,\n  to: TTo,\n): RecursiveArray<FromRlpReturnType<TTo>> {\n  const bytes = parse(value)\n  const [data, consumed] = rlpToBytes(bytes)\n  if (consumed < bytes.length)\n    throw new DataLengthTooLongError({\n      consumed,\n      length: bytes.length,\n    })\n  return format(data, to)\n}\n\nfunction parse(value: ByteArray | Hex) {\n  if (typeof value === 'string') {\n    if (value.length > 3 && value.length % 2 !== 0)\n      throw new InvalidHexValueError(value)\n    return hexToBytes(value)\n  }\n  return value\n}\n\nfunction format<TTo extends 'bytes' | 'hex'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: TTo,\n): RecursiveArray<FromRlpReturnType<TTo>> {\n  if (Array.isArray(bytes)) return bytes.map((b) => format(b, to))\n  return (to === 'hex' ? bytesToHex(bytes) : bytes) as FromRlpReturnType<TTo>\n}\n\nfunction rlpToBytes(\n  bytes: ByteArray,\n  offset = 0,\n): [result: RecursiveArray<ByteArray>, consumed: number] {\n  if (bytes.length === 0) return [new Uint8Array([]), 0]\n\n  const prefix = bytes[offset]\n\n  if (prefix <= 0x7f) return [new Uint8Array([bytes[offset]]), 1]\n\n  if (prefix <= 0xb7) {\n    const length = prefix - 0x80\n    const offset_ = offset + 1\n\n    if (offset_ + length > bytes.length)\n      throw new DataLengthTooShortError({\n        length: offset_ + length,\n        dataLength: bytes.length,\n      })\n\n    return [bytes.slice(offset_, offset_ + length), 1 + length]\n  }\n\n  if (prefix <= 0xbf) {\n    const lengthOfLength = prefix - 0xb7\n    const offset_ = offset + 1\n    const length = bytesToNumber(bytes.slice(offset_, offset_ + lengthOfLength))\n\n    if (offset_ + lengthOfLength + length > bytes.length)\n      throw new DataLengthTooShortError({\n        length: lengthOfLength + length,\n        dataLength: bytes.length - lengthOfLength,\n      })\n\n    return [\n      bytes.slice(offset_ + lengthOfLength, offset_ + lengthOfLength + length),\n      1 + lengthOfLength + length,\n    ]\n  }\n\n  let lengthOfLength = 0\n  let length = prefix - 0xc0\n  if (prefix > 0xf7) {\n    lengthOfLength = prefix - 0xf7\n    length = bytesToNumber(bytes.slice(offset + 1, offset + 1 + lengthOfLength))\n  }\n\n  let nextOffset = offset + 1 + lengthOfLength\n  if (nextOffset > bytes.length)\n    throw new DataLengthTooShortError({\n      length: nextOffset,\n      dataLength: bytes.length,\n    })\n\n  const consumed = 1 + lengthOfLength + length\n  const result = []\n  while (nextOffset < offset + consumed) {\n    const decoded = rlpToBytes(bytes, nextOffset)\n    result.push(decoded[0])\n    nextOffset += decoded[1]\n    if (nextOffset > offset + consumed)\n      throw new OffsetOutOfBoundsError({\n        nextOffset: nextOffset,\n        offset: offset + consumed,\n      })\n  }\n\n  return [result, consumed]\n}\n", "import type { Hex } from '../../types/misc.js'\nimport { isHex } from '../data/isHex.js'\nimport { size } from '../data/size.js'\n\nexport function isHash(hash: string): hash is Hex {\n  return isHex(hash) && size(hash) === 32\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "import type { ByteArray, Hex } from '../../types/misc.js'\nimport { isHex } from '../data/isHex.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\nexport type RecoverPublicKeyReturnType = Hex\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const signatureHex = isHex(signature) ? signature : toHex(signature)\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  // Derive v = recoveryId + 27 from end of the signature (27 is added when signing the message)\n  // The recoveryId represents the y-coordinate on the secp256k1 elliptic curve and can have a value [0, 1].\n  let v = hexToNumber(`0x${signatureHex.slice(130)}`)\n  if (v === 0 || v === 1) v += 27\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const publicKey = secp256k1.Signature.fromCompact(\n    signatureHex.substring(2, 130),\n  )\n    .addRecoveryBit(v - 27)\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n", "import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\nexport type RecoverAddressReturnType = Address\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n", "import type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { concat } from '../data/concat.js'\nimport { stringToBytes, toBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessage<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport function hashMessage<TTo extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: TTo,\n): HashMessage<TTo> {\n  const messageBytes = (() => {\n    if (typeof message === 'string') return stringToBytes(message)\n    if (message.raw instanceof Uint8Array) return message.raw\n    return toBytes(message.raw)\n  })()\n  const prefixBytes = stringToBytes(\n    `\\x19Ethereum Signed Message:\\n${messageBytes.length}`,\n  )\n  return keccak256(concat([prefixBytes, messageBytes]), to_)\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\n\nimport { hashMessage } from './hashMessage.js'\nimport { recoverAddress } from './recoverAddress.js'\n\nexport type RecoverMessageAddressParameters = {\n  message: SignableMessage\n  signature: Hex | ByteArray\n}\nexport type RecoverMessageAddressReturnType = Address\n\nexport async function recoverMessageAddress({\n  message,\n  signature,\n}: RecoverMessageAddressParameters): Promise<RecoverMessageAddressReturnType> {\n  return recoverAddress({ hash: hashMessage(message), signature })\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport { hashTypedData } from './hashTypedData.js'\nimport { recoverAddress } from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  signature: Hex | ByteArray\n}\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport async function recoverTypedDataAddress<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: RecoverTypedDataAddressParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<RecoverTypedDataAddressReturnType> {\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    } as unknown as RecoverTypedDataAddressParameters),\n    signature,\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { getAddress } from '../address/getAddress.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\n\nimport { recoverMessageAddress } from './recoverMessageAddress.js'\n\nexport type VerifyMessageParameters = {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyMessageReturnType = boolean\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyMessage` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyMessage.html}\n *\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage({\n  address,\n  message,\n  signature,\n}: VerifyMessageParameters): Promise<VerifyMessageReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverMessageAddress({ message, signature }),\n  )\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { getAddress } from '../address/getAddress.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\n\nimport {\n  type RecoverTypedDataAddressParameters,\n  recoverTypedDataAddress,\n} from './recoverTypedDataAddress.js'\n\nexport type VerifyTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  /** The address to verify the typed data for. */\n  address: Address\n  /** The signature to verify */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyTypedDataReturnType = boolean\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyTypedData` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyTypedData.html}\n *\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  address,\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: VerifyTypedDataParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<VerifyTypedDataReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverTypedDataAddress({\n      domain,\n      message,\n      primaryType,\n      signature,\n      types,\n    } as RecoverTypedDataAddressParameters),\n  )\n}\n", "import { InvalidSerializedTransactionTypeError } from '../../errors/transaction.js'\nimport type {\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n} from '../../types/transaction.js'\nimport { sliceHex } from '../data/slice.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nexport type GetSerializedTransactionType<\n  TTransactionSerialized extends TransactionSerialized = TransactionSerialized,\n> = TTransactionSerialized extends TransactionSerializedEIP1559\n  ? 'eip1559'\n  : TTransactionSerialized extends TransactionSerializedEIP2930\n  ? 'eip2930'\n  : 'legacy'\n\nexport function getSerializedTransactionType<\n  TSerialized extends TransactionSerialized,\n>(\n  serializedTransaction: TSerialized,\n): GetSerializedTransactionType<TSerialized> {\n  const serializedType = sliceHex(serializedTransaction, 0, 1)\n\n  if (serializedType === '0x02')\n    return 'eip1559' as GetSerializedTransactionType<TSerialized>\n\n  if (serializedType === '0x01')\n    return 'eip2930' as GetSerializedTransactionType<TSerialized>\n\n  if (serializedType !== '0x' && hexToNumber(serializedType) >= 0xc0)\n    return 'legacy' as GetSerializedTransactionType<TSerialized>\n\n  throw new InvalidSerializedTransactionTypeError({ serializedType })\n}\n", "import { InvalidAddressError } from '../../errors/address.js'\nimport {\n  InvalidLegacyVError,\n  InvalidSerializedTransactionError,\n} from '../../errors/transaction.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport type {\n  AccessList,\n  TransactionRequestEIP2930,\n  TransactionRequestLegacy,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { isHex } from '../data/isHex.js'\nimport { padHex } from '../data/pad.js'\nimport { trim } from '../data/trim.js'\nimport { hexToBigInt, hexToNumber } from '../encoding/fromHex.js'\nimport { fromRlp } from '../encoding/fromRlp.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\nimport { isHash } from '../hash/isHash.js'\n\nimport {\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetSerializedTransactionType,\n  getSerializedTransactionType,\n} from './getSerializedTransactionType.js'\n\nexport type ParseTransactionReturnType<\n  TSerialized extends TransactionSerialized = TransactionSerialized,\n  TType extends TransactionType = GetSerializedTransactionType<TSerialized>,\n> =\n  | (TType extends 'eip1559' ? TransactionSerializableEIP1559 : never)\n  | (TType extends 'eip2930' ? TransactionSerializableEIP2930 : never)\n  | (TType extends 'legacy' ? TransactionSerializableLegacy : never)\n\nexport function parseTransaction<TSerialized extends TransactionSerialized>(\n  serializedTransaction: TSerialized,\n): ParseTransactionReturnType<TSerialized> {\n  const type = getSerializedTransactionType(serializedTransaction)\n\n  if (type === 'eip1559')\n    return parseTransactionEIP1559(\n      serializedTransaction as TransactionSerializedEIP1559,\n    ) as ParseTransactionReturnType<TSerialized>\n\n  if (type === 'eip2930')\n    return parseTransactionEIP2930(\n      serializedTransaction as TransactionSerializedEIP2930,\n    ) as ParseTransactionReturnType<TSerialized>\n\n  return parseTransactionLegacy(\n    serializedTransaction,\n  ) as ParseTransactionReturnType<TSerialized>\n}\n\nfunction parseTransactionEIP1559(\n  serializedTransaction: TransactionSerializedEIP1559,\n): TransactionSerializableEIP1559 {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [\n    chainId,\n    nonce,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    gas,\n    to,\n    value,\n    data,\n    accessList,\n    v,\n    r,\n    s,\n  ] = transactionArray\n\n  if (!(transactionArray.length === 9 || transactionArray.length === 12))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 9\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip1559',\n    })\n\n  const transaction: TransactionSerializableEIP1559 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip1559',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(maxFeePerGas) && maxFeePerGas !== '0x')\n    transaction.maxFeePerGas = hexToBigInt(maxFeePerGas)\n  if (isHex(maxPriorityFeePerGas) && maxPriorityFeePerGas !== '0x')\n    transaction.maxPriorityFeePerGas = hexToBigInt(maxPriorityFeePerGas)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP1559(transaction)\n\n  const signature =\n    transactionArray.length === 12\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\nfunction parseTransactionEIP2930(\n  serializedTransaction: TransactionSerializedEIP2930,\n): Omit<TransactionRequestEIP2930, 'from'> &\n  ({ chainId: number } | ({ chainId: number } & Signature)) {\n  const transactionArray = toTransactionArray(serializedTransaction)\n\n  const [chainId, nonce, gasPrice, gas, to, value, data, accessList, v, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 8 || transactionArray.length === 11))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        chainId,\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        accessList,\n        ...(transactionArray.length > 8\n          ? {\n              v,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'eip2930',\n    })\n\n  const transaction: TransactionSerializableEIP2930 = {\n    chainId: hexToNumber(chainId as Hex),\n    type: 'eip2930',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n  if (accessList.length !== 0 && accessList !== '0x')\n    transaction.accessList = parseAccessList(accessList as RecursiveArray<Hex>)\n\n  assertTransactionEIP2930(transaction)\n\n  const signature =\n    transactionArray.length === 11\n      ? parseEIP155Signature(transactionArray)\n      : undefined\n\n  return { ...signature, ...transaction }\n}\n\nfunction parseTransactionLegacy(\n  serializedTransaction: Hex,\n): Omit<TransactionRequestLegacy, 'from'> &\n  ({ chainId?: number } | ({ chainId: number } & Signature)) {\n  const transactionArray = fromRlp(serializedTransaction, 'hex')\n\n  const [nonce, gasPrice, gas, to, value, data, chainIdOrV_, r, s] =\n    transactionArray\n\n  if (!(transactionArray.length === 6 || transactionArray.length === 9))\n    throw new InvalidSerializedTransactionError({\n      attributes: {\n        nonce,\n        gasPrice,\n        gas,\n        to,\n        value,\n        data,\n        ...(transactionArray.length > 6\n          ? {\n              v: chainIdOrV_,\n              r,\n              s,\n            }\n          : {}),\n      },\n      serializedTransaction,\n      type: 'legacy',\n    })\n\n  const transaction: TransactionSerializableLegacy = {\n    type: 'legacy',\n  }\n  if (isHex(to) && to !== '0x') transaction.to = to\n  if (isHex(gas) && gas !== '0x') transaction.gas = hexToBigInt(gas)\n  if (isHex(data) && data !== '0x') transaction.data = data\n  if (isHex(nonce) && nonce !== '0x') transaction.nonce = hexToNumber(nonce)\n  if (isHex(value) && value !== '0x') transaction.value = hexToBigInt(value)\n  if (isHex(gasPrice) && gasPrice !== '0x')\n    transaction.gasPrice = hexToBigInt(gasPrice)\n\n  assertTransactionLegacy(transaction)\n\n  if (transactionArray.length === 6) return transaction\n\n  const chainIdOrV =\n    isHex(chainIdOrV_) && chainIdOrV_ !== '0x'\n      ? hexToBigInt(chainIdOrV_ as Hex)\n      : 0n\n\n  if (s === '0x' && r === '0x') {\n    if (chainIdOrV > 0) transaction.chainId = Number(chainIdOrV)\n    return transaction\n  }\n\n  const v = chainIdOrV\n\n  const chainId: number | undefined = Number((v - 35n) / 2n)\n  if (chainId > 0) transaction.chainId = chainId\n  else if (v !== 27n && v !== 28n) throw new InvalidLegacyVError({ v })\n\n  transaction.v = v\n  transaction.s = s as Hex\n  transaction.r = r as Hex\n\n  return transaction\n}\n\nexport function toTransactionArray(serializedTransaction: string) {\n  return fromRlp(`0x${serializedTransaction.slice(4)}` as Hex, 'hex')\n}\n\nexport function parseAccessList(accessList_: RecursiveArray<Hex>): AccessList {\n  const accessList: AccessList = []\n  for (let i = 0; i < accessList_.length; i++) {\n    const [address, storageKeys] = accessList_[i] as [Hex, Hex[]]\n\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n\n    accessList.push({\n      address: address,\n      storageKeys: storageKeys.map((key) => (isHash(key) ? key : trim(key))),\n    })\n  }\n  return accessList\n}\n\nfunction parseEIP155Signature(\n  transactionArray: RecursiveArray<Hex>,\n): Signature & { yParity: number } {\n  const signature = transactionArray.slice(-3)\n  const v =\n    signature[0] === '0x' || hexToBigInt(signature[0] as Hex) === 0n ? 27n : 28n\n  return {\n    r: padHex(signature[1] as Hex, { size: 32 }),\n    s: padHex(signature[2] as Hex, { size: 32 }),\n    v,\n    yParity: v === 27n ? 0 : 1,\n  }\n}\n", "export function parseUnits(value: string, decimals: number) {\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim leading zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n", "import { etherUnits } from '../../constants/unit.js'\n\nimport { parseUnits } from './parseUnits.js'\n\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n", "import { gweiUnits } from '../../constants/unit.js'\n\nimport { parseUnits } from './parseUnits.js'\n\nexport function parseGwei(ether: string, unit: 'wei' = 'wei') {\n  return parseUnits(ether, gweiUnits[unit])\n}\n", "export { buildRequest } from './buildRequest.js'\n\nexport {\n  ccipFetch,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './ccip.js'\n\nexport {\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n  defineChain,\n  getChainContractAddress,\n} from './chain.js'\nexport { arrayRegex, bytesRegex, integerRegex } from './regex.js'\n\nexport {\n  type HttpOptions,\n  type HttpReturnType,\n  type RpcRequest,\n  type RpcResponse,\n  type Socket,\n  type WebSocketAsyncOptions,\n  type WebSocketAsyncReturnType,\n  type WebSocketOptions,\n  type WebSocketReturnType,\n  getSocket,\n  rpc,\n} from './rpc.js'\nexport { stringify } from './stringify.js'\nexport { validateTypedData } from './typedData.js'\nexport {\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './abi/decodeAbiParameters.js'\nexport {\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataParameters,\n  decodeFunctionData,\n} from './abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataParameters,\n  encodeDeployData,\n} from './abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultParameters,\n  encodeErrorResult,\n} from './abi/encodeErrorResult.js'\nexport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from './abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from './abi/encodeFunctionData.js'\nexport {\n  type EncodeFunctionResultParameters,\n  encodeFunctionResult,\n} from './abi/encodeFunctionResult.js'\nexport { type GetAbiItemParameters, getAbiItem } from './abi/getAbiItem.js'\nexport {\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\nexport { encodePacked } from './abi/encodePacked.js'\nexport { formatAbiItemWithArgs } from './abi/formatAbiItemWithArgs.js'\nexport { formatAbiItem, formatAbiParams } from './abi/formatAbiItem.js'\nexport { parseAccount } from '../accounts/utils/parseAccount.js'\nexport { publicKeyToAddress } from '../accounts/utils/publicKeyToAddress.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressOptions,\n  type GetCreateAddressOptions,\n  getContractAddress,\n  getCreateAddress,\n  getCreate2Address,\n} from './address/getContractAddress.js'\nexport { getAddress } from './address/getAddress.js'\nexport { isAddress } from './address/isAddress.js'\nexport { isAddressEqual } from './address/isAddressEqual.js'\nexport {\n  extractFunctionName,\n  extractFunctionParams,\n  extractFunctionType,\n  extractFunctionParts,\n} from './contract/extractFunctionParts.js'\nexport { concat, concatBytes, concatHex } from './data/concat.js'\nexport { isBytes } from './data/isBytes.js'\nexport { isHex } from './data/isHex.js'\nexport { pad, padBytes, padHex } from './data/pad.js'\nexport { size } from './data/size.js'\nexport { slice, sliceBytes, sliceHex } from './data/slice.js'\nexport { trim } from './data/trim.js'\nexport {\n  type FormattedBlock,\n  defineBlock,\n  formatBlock,\n} from './formatters/block.js'\nexport {\n  type FormattedTransaction,\n  defineTransaction,\n  formatTransaction,\n  transactionType,\n} from './formatters/transaction.js'\nexport { formatLog } from './formatters/log.js'\nexport {\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n} from './formatters/transactionReceipt.js'\nexport {\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  formatTransactionRequest,\n} from './formatters/transactionRequest.js'\nexport { extract } from './formatters/extract.js'\nexport { type ToRlpReturnType, toRlp } from './encoding/toRlp.js'\nexport {\n  boolToBytes,\n  toBytes,\n  hexToBytes,\n  numberToBytes,\n  stringToBytes,\n} from './encoding/toBytes.js'\nexport {\n  boolToHex,\n  bytesToHex,\n  toHex,\n  numberToHex,\n  stringToHex,\n} from './encoding/toHex.js'\nexport {\n  bytesToBigint,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n  fromBytes,\n} from './encoding/fromBytes.js'\nexport {\n  fromHex,\n  hexToBool,\n  hexToBigInt,\n  hexToNumber,\n  hexToString,\n} from './encoding/fromHex.js'\nexport { fromRlp } from './encoding/fromRlp.js'\nexport { containsNodeError, getNodeError } from './errors/getNodeError.js'\nexport { getCallError } from './errors/getCallError.js'\nexport { getContractError } from './errors/getContractError.js'\nexport { getEstimateGasError } from './errors/getEstimateGasError.js'\nexport { getTransactionError } from './errors/getTransactionError.js'\nexport { defineFormatter } from './formatters/formatter.js'\nexport { getEventSelector } from './hash/getEventSelector.js'\nexport { getFunctionSelector } from './hash/getFunctionSelector.js'\nexport { isHash } from './hash/isHash.js'\nexport { keccak256 } from './hash/keccak256.js'\nexport {\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashTypedData,\n} from './signature/hashTypedData.js'\nexport {\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './signature/recoverPublicKey.js'\nexport {\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './signature/recoverTypedDataAddress.js'\nexport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './signature/verifyTypedData.js'\nexport { hashMessage } from './signature/hashMessage.js'\nexport {\n  type GetSerializedTransactionType,\n  getSerializedTransactionType,\n} from './transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionType,\n  getTransactionType,\n} from './transaction/getTransactionType.js'\nexport { assertRequest } from './transaction/assertRequest.js'\nexport {\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './transaction/assertTransaction.js'\nexport { parseTransaction } from './transaction/parseTransaction.js'\nexport {\n  /** @deprecated import `prepareTransactionRequest` from `viem/actions` instead. */\n  prepareTransactionRequest,\n} from '../actions/wallet/prepareTransactionRequest.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionFn,\n} from './transaction/serializeTransaction.js'\nexport { serializeAccessList } from './transaction/serializeAccessList.js'\nexport { formatEther } from './unit/formatEther.js'\nexport { formatGwei } from './unit/formatGwei.js'\nexport { formatUnits } from './unit/formatUnits.js'\nexport { parseUnits } from './unit/parseUnits.js'\nexport { parseEther } from './unit/parseEther.js'\nexport { parseGwei } from './unit/parseGwei.js'\n", "export const universalSignatureValidatorByteCode =\n  '0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n", "import { equalBytes } from '@noble/curves/abstract/utils'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { isHex } from './isHex.js'\n\nexport function isBytesEqual(a_: ByteArray | Hex, b_: ByteArray | Hex) {\n  const a = isHex(a_) ? toBytes(a_) : a_\n  const b = isHex(b_) ? toBytes(b_) : b_\n  return equalBytes(a, b)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalSignatureValidatorAbi } from '../../constants/abis.js'\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { isBytesEqual } from '../../utils/data/isBytesEqual.js'\nimport { encodeDeployData, isHex, toHex } from '../../utils/index.js'\nimport { type CallParameters, call } from './call.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hex\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyHashReturnType = boolean\n\n/**\n * Verifies a message hash on chain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  { address, hash, signature, ...callRequest }: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const signatureHex = isHex(signature) ? signature : toHex(signature)\n\n  try {\n    const { data } = await call(client, {\n      data: encodeDeployData({\n        abi: universalSignatureValidatorAbi,\n        args: [address, hash, signatureHex],\n        bytecode: universalSignatureValidatorByteCode,\n      }),\n      ...callRequest,\n    } as unknown as CallParameters)\n\n    return isBytesEqual(data ?? '0x0', '0x1')\n  } catch (error) {\n    if (error instanceof CallExecutionError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { hashMessage } from '../../utils/index.js'\nimport { type VerifyHashParameters, verifyHash } from './verifyHash.js'\n\nexport type VerifyMessageParameters = Omit<VerifyHashParameters, 'hash'> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyMessageReturnType = boolean\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  { address, message, signature, ...callRequest }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n", "import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { hashTypedData } from '../../utils/signature/hashTypedData.js'\nimport { type VerifyHashParameters, verifyHash } from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<TTypedData, TPrimaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<TChain extends Chain | undefined,>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  }: VerifyTypedDataParameters,\n): Promise<VerifyTypedDataReturnType> {\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type PollOptions = {\n  /** Whether or not to emit the missed block numbers to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlockNumberParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          emitMissed?: never\n          emitOnBegin?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & { poll: true })\n  : PollOptions & { poll?: true })\n\nexport type WatchBlockNumberReturnType = () => void\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  TChain extends Chain | undefined,\n  TTransport extends Transport,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<TTransport>,\n): WatchBlockNumberReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getBlockNumber(client, { cacheTime: 0 })\n\n            if (prevBlockNumber) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const blockNumber = hexToBigInt(data.result?.number)\n            onBlockNumber(blockNumber, prevBlockNumber)\n            prevBlockNumber = blockNumber\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n} from '../../errors/transaction.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { observe } from '../../utils/observe.js'\nimport { withRetry } from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { getBlock } from './getBlock.js'\nimport {\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport { watchBlockNumber } from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<TChain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<TChain>\n\nexport type WaitForTransactionReceiptParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: (response: ReplacementReturnType<TChain>) => void\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n  /** Optional timeout (in milliseconds) to wait before stopping polling. */\n  timeout?: number\n}\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    confirmations = 1,\n    hash,\n    onReplaced,\n    pollingInterval = client.pollingInterval,\n    timeout,\n  }: WaitForTransactionReceiptParameters<TChain>,\n): Promise<WaitForTransactionReceiptReturnType<TChain>> {\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  let transaction: GetTransactionReturnType<TChain> | undefined\n  let replacedTransaction: GetTransactionReturnType<TChain> | undefined\n  let receipt: GetTransactionReceiptReturnType<TChain>\n  let retrying = false\n\n  return new Promise((resolve, reject) => {\n    if (timeout)\n      setTimeout(\n        () => reject(new WaitForTransactionReceiptTimeoutError({ hash })),\n        timeout,\n      )\n\n    const _unobserve = observe(\n      observerId,\n      { onReplaced, resolve, reject },\n      (emit) => {\n        const _unwatch = watchBlockNumber(client, {\n          emitMissed: true,\n          emitOnBegin: true,\n          poll: true,\n          pollingInterval,\n          async onBlockNumber(blockNumber_) {\n            if (retrying) return\n\n            let blockNumber = blockNumber_\n\n            const done = (fn: () => void) => {\n              _unwatch()\n              fn()\n              _unobserve()\n            }\n\n            try {\n              // If we already have a valid receipt, let's check if we have enough\n              // confirmations. If we do, then we can resolve.\n              if (receipt) {\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                done(() => emit.resolve(receipt))\n                return\n              }\n\n              // Get the transaction to check if it's been replaced.\n              // We need to retry as some RPC Providers may be slow to sync\n              // up mined transactions.\n              if (!transaction) {\n                retrying = true\n                await withRetry(\n                  async () => {\n                    transaction = await getTransaction(client, { hash })\n                    if (transaction.blockNumber)\n                      blockNumber = transaction.blockNumber\n                  },\n                  {\n                    // exponential backoff\n                    delay: ({ count }) => ~~(1 << count) * 200,\n                    retryCount: 6,\n                  },\n                )\n                retrying = false\n              }\n\n              // Get the receipt to check if it's been processed.\n              receipt = await getTransactionReceipt(client, { hash })\n\n              // Check if we have enough confirmations. If not, continue polling.\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt))\n            } catch (err) {\n              // If the receipt is not found, the transaction will be pending.\n              // We need to check if it has potentially been replaced.\n              if (\n                transaction &&\n                (err instanceof TransactionNotFoundError ||\n                  err instanceof TransactionReceiptNotFoundError)\n              ) {\n                try {\n                  replacedTransaction = transaction\n\n                  // Let's retrieve the transactions from the current block.\n                  const block = await getBlock(client, {\n                    blockNumber,\n                    includeTransactions: true,\n                  })\n\n                  const replacementTransaction = (\n                    block.transactions as Transaction[]\n                  ).find(\n                    ({ from, nonce }) =>\n                      from === replacedTransaction!.from &&\n                      nonce === replacedTransaction!.nonce,\n                  )\n\n                  // If we couldn't find a replacement transaction, continue polling.\n                  if (!replacementTransaction) return\n\n                  // If we found a replacement transaction, return it's receipt.\n                  receipt = await getTransactionReceipt(client, {\n                    hash: replacementTransaction.hash,\n                  })\n\n                  // Check if we have enough confirmations. If not, continue polling.\n                  if (\n                    confirmations > 1 &&\n                    (!receipt.blockNumber ||\n                      blockNumber - receipt.blockNumber + 1n < confirmations)\n                  )\n                    return\n\n                  let reason: ReplacementReason = 'replaced'\n                  if (\n                    replacementTransaction.to === replacedTransaction.to &&\n                    replacementTransaction.value === replacedTransaction.value\n                  ) {\n                    reason = 'repriced'\n                  } else if (\n                    replacementTransaction.from === replacementTransaction.to &&\n                    replacementTransaction.value === 0n\n                  ) {\n                    reason = 'cancelled'\n                  }\n\n                  done(() => {\n                    emit.onReplaced?.({\n                      reason,\n                      replacedTransaction: replacedTransaction!,\n                      transaction: replacementTransaction,\n                      transactionReceipt: receipt,\n                    })\n                    emit.resolve(receipt)\n                  })\n                } catch (err_) {\n                  done(() => emit.reject(err_))\n                }\n              } else {\n                done(() => emit.reject(err))\n              }\n            }\n          },\n        })\n      },\n    )\n  })\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { formatBlock } from '../../utils/formatters/block.js'\nimport { observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>\n\nexport type OnBlock<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>,\n  prevBlock:\n    | OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>\n    | undefined,\n) => void\n\ntype PollOptions<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The block tag. Defaults to \"latest\". */\n  blockTag?: TBlockTag | BlockTag\n  /** Whether or not to emit the missed blocks to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the block to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n  /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlocksParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<TChain, TIncludeTransactions, TBlockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          blockTag?: never\n          emitMissed?: never\n          emitOnBegin?: never\n          includeTransactions?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n  : PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n\nexport type WatchBlocksReturnType = () => void\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<TTransport, TChain>,\n  {\n    blockTag = 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<TTransport, TChain, TIncludeTransactions, TBlockTag>,\n): WatchBlocksReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<TChain, false | TIncludeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getBlock(client, {\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number && prevBlock?.number) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = await getBlock(client, {\n                    blockNumber: i,\n                    includeTransactions,\n                  })\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              !prevBlock?.number ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && !block?.number) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const format =\n              client.chain?.formatters?.block?.format || formatBlock\n            const block = format(data.result)\n            onBlock(block, prevBlock as any)\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n", "import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport type { EncodeEventTopicsParameters } from '../../utils/index.js'\nimport { observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport {\n  decodeEventLog,\n  encodeEventTopics,\n  formatLog,\n} from '../../utils/index.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchEventOnLogsParameter<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TEventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = Log<bigint, number, false, TAbiEvent, TStrict, TAbiEvents, TEventName>[]\nexport type WatchEventOnLogsFn<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<TAbiEvent, TAbiEvents, TStrict, _EventName>,\n) => void\n\nexport type WatchEventParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<TAbiEvent, TAbiEvents, TStrict, _EventName>\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    }) &\n  (\n    | {\n        event: TAbiEvent\n        events?: never\n        args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: TAbiEvents\n        args?: never\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: never\n        args?: never\n        strict?: never\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n): WatchEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbiEvents, _EventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await createEventFilter(client, {\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                TAbiEvents,\n                _EventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getFilterChanges(client, { filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getBlockNumber(client)\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getLogs(client, {\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else logs.forEach((log) => emit.onLogs([log] as any))\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter) await uninstallFilter(client, { filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          topics = [\n            (events_ as AbiEvent[]).flatMap((event) =>\n              encodeEventTopics({\n                abi: [event],\n                eventName: (event as AbiEvent).name,\n                args,\n              } as EncodeEventTopicsParameters),\n            ),\n          ]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ as Abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n", "import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchPendingTransactionsParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchPendingTransactionsReturnType = () => void\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<TTransport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await createPendingTransactionFilter(client)\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getFilterChanges(client, { filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else hashes.forEach((hash) => emit.onTransactions([hash]))\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter) await uninstallFilter(client, { filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n", "import type { Abi, AbiEvent } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetBytecodeParameters,\n  type GetBytecodeReturnType,\n  getBytecode,\n} from '../../actions/public/getBytecode.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call.html\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<TChain>) => Promise<CallReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string | undefined,\n    TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?: CreateEventFilterParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    TChain extends Chain | undefined,\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<TChain, TAccount>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<TIncludeTransactions, TBlockTag>,\n  ) => Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getBytecode.html\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getBytecode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getBytecode: (args: GetBytecodeParameters) => Promise<GetBytecodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wagmi-dev.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wagmi-dev.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wagmi-dev.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wagmi-dev.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wagmi-dev.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wagmi_sh'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    TChainOverride extends Chain | undefined,\n    TType extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<TChain, TChainOverride, TType>,\n  ) => Promise<EstimateFeesPerGasReturnType>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    TFilterType extends FilterType,\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/filters-and-logs/event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?: GetLogsParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <TChainOverride extends Chain | undefined,>(\n    args?: EstimateMaxPriorityFeePerGasParameters<TChain, TChainOverride>,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n   * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <TBlockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<TBlockTag>,\n  ) => Promise<GetTransactionReturnType<TChain, TBlockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n   * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<TChain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<TChain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall.html\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    TContracts extends ContractFunctionConfig[],\n    TAllowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<TContracts, TAllowFailure>,\n  ) => Promise<MulticallReturnType<TContracts, TAllowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <TChainOverride extends Chain | undefined,>(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: ReadContractParameters<TAbi, TFunctionName>,\n  ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined,\n  >(\n    args: SimulateContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n  >\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<TChain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<TChain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      TTransport,\n      TChain,\n      TIncludeTransactions,\n      TBlockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<TTransport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): PublicActions<TTransport, TChain, TAccount> {\n  return {\n    call: (args) => call(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getBytecode(client, args),\n    getChainId: () => getChainId(client),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args as any) as any,\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n", "import type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { type Client, type ClientConfig, createClient } from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain>,\n    | 'batch'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    undefined,\n    PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/public.html\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain>,\n): PublicClient<transport, chain>\n\nexport function createPublicClient(\n  parameters: PublicClientConfig,\n): PublicClient {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions)\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\n\nexport type DropTransactionParameters = {\n  /** The hash of the transaction to drop. */\n  hash: Hash\n}\n\n/**\n * Removes a transaction from the mempool.\n *\n * - Docs: https://viem.sh/docs/actions/test/dropTransaction.html\n *\n * @param client - Client to use\n * @param parameters - {@link DropTransactionParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { dropTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await dropTransaction(client, {\n *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n * })\n */\nexport async function dropTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { hash }: DropTransactionParameters,\n) {\n  await client.request({\n    method: `${client.mode}_dropTransaction`,\n    params: [hash],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type GetAutomineReturnType = boolean\n\n/**\n * Returns the automatic mining status of the node.\n *\n * - Docs: https://viem.sh/docs/actions/test/getAutomine.html\n *\n * @param client - Client to use\n * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const isAutomining = await getAutomine(client)\n */\nexport async function getAutomine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetAutomineReturnType> {\n  if (client.mode === 'ganache')\n    return await client.request({\n      method: 'eth_mining',\n    })\n  return await client.request({\n    method: `${client.mode}_getAutomine`,\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\n\nexport type GetTxpoolContentReturnType = {\n  /** Pending transactions in the pool */\n  pending: Record<Address, Record<string, RpcTransaction>>\n  /** Queued transactions in the pool */\n  queued: Record<Address, Record<string, RpcTransaction>>\n}\n\n/**\n * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n *\n * @param client - Client to use\n * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolContent } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await getTxpoolContent(client)\n */\nexport async function getTxpoolContent<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetTxpoolContentReturnType> {\n  return await client.request({\n    method: 'txpool_content',\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { hexToNumber } from '../../utils/encoding/fromHex.js'\n\nexport type GetTxpoolStatusReturnType = {\n  pending: number\n  queued: number\n}\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus.html\n *\n * @param client - Client to use\n * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolStatus } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const status = await getTxpoolStatus(client)\n */\nexport async function getTxpoolStatus<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<GetTxpoolStatusReturnType> {\n  const { pending, queued } = await client.request({\n    method: 'txpool_status',\n  })\n  return {\n    pending: hexToNumber(pending),\n    queued: hexToNumber(queued),\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type ImpersonateAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\n/**\n * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n *\n * - Docs: https://viem.sh/docs/actions/test/impersonateAccount.html\n *\n * @param client - Client to use\n * @param parameters - {@link ImpersonateAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { impersonateAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const content = await impersonateAccount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function impersonateAccount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: ImpersonateAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_impersonateAccount`,\n    params: [address],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type IncreaseTimeParameters = {\n  /** The amount of seconds to jump forward in time. */\n  seconds: number\n}\n\n/**\n * Jump forward in time by the given amount of time, in seconds.\n *\n * - Docs: https://viem.sh/docs/actions/test/increaseTime.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link IncreaseTimeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { increaseTime } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await increaseTime(client, {\n *   seconds: 420,\n * })\n */\nexport async function increaseTime<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { seconds }: IncreaseTimeParameters,\n) {\n  return await client.request({\n    method: 'evm_increaseTime',\n    params: [numberToHex(seconds)],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type InspectTxpoolReturnType = {\n  pending: Record<Address, Record<string, string>>\n  queued: Record<Address, Record<string, string>>\n}\n\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/inspectTxpool.html\n *\n * @param client - Client to use\n * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { inspectTxpool } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const data = await inspectTxpool(client)\n */\nexport async function inspectTxpool<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n): Promise<InspectTxpoolReturnType> {\n  return await client.request({\n    method: 'txpool_inspect',\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type MineParameters = {\n  /** Number of blocks to mine. */\n  blocks: number\n  /** Interval between each block in seconds. */\n  interval?: number\n}\n\n/**\n * Mine a specified number of blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/mine.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link MineParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { mine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await mine(client, { blocks: 1 })\n */\nexport async function mine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { blocks, interval }: MineParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_mine',\n      params: [{ blocks: numberToHex(blocks) }],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_mine`,\n      params: [numberToHex(blocks), numberToHex(interval || 0)],\n    })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\n/**\n * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval.html) if it exists.\n *\n * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { removeBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await removeBlockTimestampInterval(client)\n */\nexport async function removeBlockTimestampInterval<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, TChain, TAccount, false>) {\n  await client.request({\n    method: `${client.mode}_removeBlockTimestampInterval`,\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type ResetParameters = {\n  /** The block number to reset from. */\n  blockNumber?: bigint\n  /** The JSON RPC URL. */\n  jsonRpcUrl?: string\n}\n\n/**\n * Resets fork back to its original state.\n *\n * - Docs: https://viem.sh/docs/actions/test/reset.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link ResetParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { reset } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await reset(client, { blockNumber: 69420n })\n */\nexport async function reset<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { blockNumber, jsonRpcUrl }: ResetParameters = {},\n) {\n  await client.request({\n    method: `${client.mode}_reset`,\n    params: [{ forking: { blockNumber: Number(blockNumber), jsonRpcUrl } }],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\n\nexport type RevertParameters = {\n  /** The snapshot ID to revert to. */\n  id: Quantity\n}\n\n/**\n * Revert the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/revert.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link RevertParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { revert } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await revert(client, { id: '0x\u2026' })\n */\nexport async function revert<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { id }: RevertParameters,\n) {\n  await client.request({\n    method: 'evm_revert',\n    params: [id],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\n\nexport type SendUnsignedTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type SendUnsignedTransactionReturnType = Hash\n\n/**\n * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SendUnsignedTransactionParameters}\n * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { sendUnsignedTransaction } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const hash = await sendUnsignedTransaction(client, {\n *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendUnsignedTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  args: SendUnsignedTransactionParameters<TChain>,\n): Promise<SendUnsignedTransactionReturnType> {\n  const {\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  const format =\n    client.chain?.formatters?.transactionRequest?.format ||\n    formatTransactionRequest\n  const request = format({\n    // Pick out extra data that might exist on the chain's transaction request type.\n    ...extract(rest, { format }),\n    accessList,\n    data,\n    from,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n  } as TransactionRequest)\n  const hash = await client.request({\n    method: 'eth_sendUnsignedTransaction',\n    params: [request],\n  })\n  return hash\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\n/**\n * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setAutomine.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setAutomine } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setAutomine(client)\n */\nexport async function setAutomine<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  enabled: boolean,\n) {\n  if (client.mode === 'ganache') {\n    if (enabled) await client.request({ method: 'miner_start' })\n    else await client.request({ method: 'miner_stop' })\n  } else\n    await client.request({\n      method: 'evm_setAutomine',\n      params: [enabled],\n    })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBalanceParameters = {\n  /** The account address. */\n  address: Address\n  /** Amount (in wei) to set */\n  value: bigint\n}\n\n/**\n * Modifies the balance of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBalance.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBalanceParameters}\n *\n * @example\n * import { createTestClient, http, parseEther } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBalance } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBalance(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   value: parseEther('1'),\n * })\n */\nexport async function setBalance<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, value }: SetBalanceParameters,\n) {\n  if (client.mode === 'ganache')\n    await client.request({\n      method: 'evm_setAccountBalance',\n      params: [address, numberToHex(value)],\n    })\n  else\n    await client.request({\n      method: `${client.mode}_setBalance`,\n      params: [address, numberToHex(value)],\n    })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBlockGasLimitParameters = {\n  /** Gas limit (in wei). */\n  gasLimit: bigint\n}\n\n/**\n * Sets the block's gas limit.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockGasLimit } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockGasLimit(client, { gasLimit: 420_000n })\n */\nexport async function setBlockGasLimit<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { gasLimit }: SetBlockGasLimitParameters,\n) {\n  await client.request({\n    method: 'evm_setBlockGasLimit',\n    params: [numberToHex(gasLimit)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type SetBlockTimestampIntervalParameters = {\n  /** The interval (in seconds). */\n  interval: number\n}\n\n/**\n * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime.html), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockTimestampIntervalParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockTimestampInterval } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockTimestampInterval(client, { interval: 5 })\n */\nexport async function setBlockTimestampInterval<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { interval }: SetBlockTimestampIntervalParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setBlockTimestampInterval`,\n    params: [interval],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type SetCodeParameters = {\n  /** The account address. */\n  address: Address\n  /** The bytecode to set */\n  bytecode: Hex\n}\n\n/**\n * Modifies the bytecode stored at an account's address.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCode.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetCodeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCode } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCode(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df\u2026',\n * })\n */\nexport async function setCode<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, bytecode }: SetCodeParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCode`,\n    params: [address, bytecode],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type SetCoinbaseParameters = {\n  /** The coinbase address. */\n  address: Address\n}\n\n/**\n * Sets the coinbase address to be used in new blocks.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCoinbase.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetCoinbaseParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCoinbase } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCoinbase(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n * })\n */\nexport async function setCoinbase<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: SetCoinbaseParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCoinbase`,\n    params: [address],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type SetIntervalMiningParameters = {\n  /** The mining interval. */\n  interval: number\n}\n\n/**\n * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n *\n * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetIntervalMiningParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setIntervalMining } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setIntervalMining(client, { interval: 5 })\n */\nexport async function setIntervalMining<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { interval }: SetIntervalMiningParameters,\n) {\n  await client.request({\n    method: 'evm_setIntervalMining',\n    params: [interval],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\n/**\n * Enable or disable logging on the test node network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setLoggingEnabled } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setLoggingEnabled(client)\n */\nexport async function setLoggingEnabled<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  enabled: boolean,\n) {\n  await client.request({\n    method: `${client.mode}_setLoggingEnabled`,\n    params: [enabled],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetMinGasPriceParameters = {\n  /** The gas price. */\n  gasPrice: bigint\n}\n\n/**\n * Change the minimum gas price accepted by the network (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice.html\n *\n * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setMinGasPrice } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setMinGasPrice(client, {\n *   gasPrice: parseGwei('20'),\n * })\n */\nexport async function setMinGasPrice<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { gasPrice }: SetMinGasPriceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setMinGasPrice`,\n    params: [numberToHex(gasPrice)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockBaseFeePerGasParameters = {\n  /** Base fee per gas (in wei). */\n  baseFeePerGas: bigint\n}\n\n/**\n * Sets the next block's base fee per gas.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNextBlockBaseFeePerGasParameters}\n *\n * @example\n * import { createTestClient, http, parseGwei } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockBaseFeePerGas } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockBaseFeePerGas(client, {\n *   baseFeePerGas: parseGwei('20'),\n * })\n */\nexport async function setNextBlockBaseFeePerGas<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { baseFeePerGas }: SetNextBlockBaseFeePerGasParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNextBlockBaseFeePerGas`,\n    params: [numberToHex(baseFeePerGas)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNextBlockTimestampParameters = {\n  /** The timestamp (in seconds). */\n  timestamp: bigint\n}\n\n/**\n * Sets the next block's timestamp.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNextBlockTimestampParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNextBlockTimestamp } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNextBlockTimestamp(client, { timestamp: 1671744314n })\n */\nexport async function setNextBlockTimestamp<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { timestamp }: SetNextBlockTimestampParameters,\n) {\n  await client.request({\n    method: 'evm_setNextBlockTimestamp',\n    params: [numberToHex(timestamp)],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetNonceParameters = {\n  /** The account address. */\n  address: Address\n  /** The nonce to set. */\n  nonce: number\n}\n\n/**\n * Modifies (overrides) the nonce of an account.\n *\n * - Docs: https://viem.sh/docs/actions/test/setNonce.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetNonceParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setNonce } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setNonce(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n *   nonce: 420,\n * })\n */\nexport async function setNonce<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, nonce }: SetNonceParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setNonce`,\n    params: [address, numberToHex(nonce)],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\n/**\n * Sets the backend RPC URL.\n *\n * - Docs: https://viem.sh/docs/actions/test/setRpcUrl.html\n *\n * @param client - Client to use\n * @param jsonRpcUrl \u2013 RPC URL\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setRpcUrl } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setRpcUrl(client, 'https://eth-mainnet.g.alchemy.com/v2')\n */\nexport async function setRpcUrl<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  jsonRpcUrl: string,\n) {\n  await client.request({\n    method: `${client.mode}_setRpcUrl`,\n    params: [jsonRpcUrl],\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash, Hex } from '../../types/misc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetStorageAtParameters = {\n  /** The account address. */\n  address: Address\n  /** The storage slot (index). Can either be a number or hash value. */\n  index: number | Hash\n  /** The value to store as a 32 byte hex string. */\n  value: Hex\n}\n\n/**\n * Writes to a slot of an account's storage.\n *\n * - Docs: https://viem.sh/docs/actions/test/setStorageAt.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link SetStorageAtParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setStorageAt } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setStorageAt(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   index: 2,\n *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n * })\n */\nexport async function setStorageAt<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, index, value }: SetStorageAtParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setStorageAt`,\n    params: [\n      address,\n      typeof index === 'number' ? numberToHex(index) : index,\n      value,\n    ],\n  })\n}\n", "import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\n/**\n * Snapshot the state of the blockchain at the current block.\n *\n * - Docs: https://viem.sh/docs/actions/test/snapshot.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { snapshot } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await snapshot(client)\n */\nexport async function snapshot<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: TestClient<TestClientMode, Transport, TChain, TAccount, false>) {\n  return await client.request({\n    method: 'evm_snapshot',\n  })\n}\n", "import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type StopImpersonatingAccountParameters = {\n  /** The account to impersonate. */\n  address: Address\n}\n\n/**\n * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount.html).\n *\n * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount.html\n *\n * @param client - Client to use\n * @param parameters \u2013 {@link StopImpersonatingAccountParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { stopImpersonatingAccount } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await stopImpersonatingAccount(client, {\n *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n * })\n */\nexport async function stopImpersonatingAccount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address }: StopImpersonatingAccountParameters,\n) {\n  await client.request({\n    method: `${client.mode}_stopImpersonatingAccount`,\n    params: [address],\n  })\n}\n", "import {\n  type DropTransactionParameters,\n  dropTransaction,\n} from '../../actions/test/dropTransaction.js'\nimport {\n  type GetAutomineReturnType,\n  getAutomine,\n} from '../../actions/test/getAutomine.js'\nimport {\n  type GetTxpoolContentReturnType,\n  getTxpoolContent,\n} from '../../actions/test/getTxpoolContent.js'\nimport {\n  type GetTxpoolStatusReturnType,\n  getTxpoolStatus,\n} from '../../actions/test/getTxpoolStatus.js'\nimport {\n  type ImpersonateAccountParameters,\n  impersonateAccount,\n} from '../../actions/test/impersonateAccount.js'\nimport {\n  type IncreaseTimeParameters,\n  increaseTime,\n} from '../../actions/test/increaseTime.js'\nimport {\n  type InspectTxpoolReturnType,\n  inspectTxpool,\n} from '../../actions/test/inspectTxpool.js'\nimport { type MineParameters, mine } from '../../actions/test/mine.js'\nimport { removeBlockTimestampInterval } from '../../actions/test/removeBlockTimestampInterval.js'\nimport { type ResetParameters, reset } from '../../actions/test/reset.js'\nimport { type RevertParameters, revert } from '../../actions/test/revert.js'\nimport {\n  type SendUnsignedTransactionParameters,\n  type SendUnsignedTransactionReturnType,\n  sendUnsignedTransaction,\n} from '../../actions/test/sendUnsignedTransaction.js'\nimport { setAutomine } from '../../actions/test/setAutomine.js'\nimport {\n  type SetBalanceParameters,\n  setBalance,\n} from '../../actions/test/setBalance.js'\nimport {\n  type SetBlockGasLimitParameters,\n  setBlockGasLimit,\n} from '../../actions/test/setBlockGasLimit.js'\nimport {\n  type SetBlockTimestampIntervalParameters,\n  setBlockTimestampInterval,\n} from '../../actions/test/setBlockTimestampInterval.js'\nimport { type SetCodeParameters, setCode } from '../../actions/test/setCode.js'\nimport {\n  type SetCoinbaseParameters,\n  setCoinbase,\n} from '../../actions/test/setCoinbase.js'\nimport {\n  type SetIntervalMiningParameters,\n  setIntervalMining,\n} from '../../actions/test/setIntervalMining.js'\nimport { setLoggingEnabled } from '../../actions/test/setLoggingEnabled.js'\nimport {\n  type SetMinGasPriceParameters,\n  setMinGasPrice,\n} from '../../actions/test/setMinGasPrice.js'\nimport {\n  type SetNextBlockBaseFeePerGasParameters,\n  setNextBlockBaseFeePerGas,\n} from '../../actions/test/setNextBlockBaseFeePerGas.js'\nimport {\n  type SetNextBlockTimestampParameters,\n  setNextBlockTimestamp,\n} from '../../actions/test/setNextBlockTimestamp.js'\nimport {\n  type SetNonceParameters,\n  setNonce,\n} from '../../actions/test/setNonce.js'\nimport { setRpcUrl } from '../../actions/test/setRpcUrl.js'\nimport {\n  type SetStorageAtParameters,\n  setStorageAt,\n} from '../../actions/test/setStorageAt.js'\nimport { snapshot } from '../../actions/test/snapshot.js'\nimport {\n  type StopImpersonatingAccountParameters,\n  stopImpersonatingAccount,\n} from '../../actions/test/stopImpersonatingAccount.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { Client } from '../createClient.js'\nimport type { TestClientMode } from '../createTestClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type TestActions = {\n  /**\n   * Removes a transaction from the mempool.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dropTransaction.html\n   *\n   * @param args - {@link DropTransactionParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dropTransaction({\n   *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n   * })\n   */\n  dropTransaction: (args: DropTransactionParameters) => Promise<void>\n  /**\n   * Returns the automatic mining status of the node.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getAutomine.html\n   *\n   * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const isAutomining = await client.getAutomine()\n   */\n  getAutomine: () => Promise<GetAutomineReturnType>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n   *\n   * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const content = await client.getTxpoolContent()\n   */\n  getTxpoolContent: () => Promise<GetTxpoolContentReturnType>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus.html\n   *\n   * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const status = await client.getTxpoolStatus()\n   */\n  getTxpoolStatus: () => Promise<GetTxpoolStatusReturnType>\n  /**\n   * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/impersonateAccount.html\n   *\n   * @param args - {@link ImpersonateAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.impersonateAccount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  impersonateAccount: (args: ImpersonateAccountParameters) => Promise<void>\n  /**\n   * Jump forward in time by the given amount of time, in seconds.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/increaseTime.html\n   *\n   * @param args \u2013 {@link IncreaseTimeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.increaseTime({\n   *   seconds: 420,\n   * })\n   */\n  increaseTime: (args: IncreaseTimeParameters) => Promise<Quantity>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/inspectTxpool.html\n   *\n   * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const data = await client.inspectTxpool()\n   */\n  inspectTxpool: () => Promise<InspectTxpoolReturnType>\n  /**\n   * Mine a specified number of blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/mine.html\n   *\n   * @param client - Client to use\n   * @param args \u2013 {@link MineParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.mine({ blocks: 1 })\n   */\n  mine: (args: MineParameters) => Promise<void>\n  /**\n   * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval.html) if it exists.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { removeBlockTimestampInterval } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.removeBlockTimestampInterval()\n   */\n  removeBlockTimestampInterval: () => Promise<void>\n  /**\n   * Resets fork back to its original state.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/reset.html\n   *\n   * @param args \u2013 {@link ResetParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.reset({ blockNumber: 69420n })\n   */\n  reset: (args?: ResetParameters) => Promise<void>\n  /**\n   * Revert the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/revert.html\n   *\n   * @param args \u2013 {@link RevertParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.revert({ id: '0x\u2026' })\n   */\n  revert: (args: RevertParameters) => Promise<void>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent.html\n   *\n   * @param args \u2013 {@link SendUnsignedTransactionParameters}\n   * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const hash = await client.sendUnsignedTransaction({\n   *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendUnsignedTransaction: <TChain extends Chain | undefined>(\n    args: SendUnsignedTransactionParameters<TChain>,\n  ) => Promise<SendUnsignedTransactionReturnType>\n  /**\n   * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setAutomine.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setAutomine()\n   */\n  setAutomine: (args: boolean) => Promise<void>\n  /**\n   * Modifies the balance of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBalance.html\n   *\n   * @param args \u2013 {@link SetBalanceParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseEther } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBalance({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   value: parseEther('1'),\n   * })\n   */\n  setBalance: (args: SetBalanceParameters) => Promise<void>\n  /**\n   * Sets the block's gas limit.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n   *\n   * @param args \u2013 {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockGasLimit({ gasLimit: 420_000n })\n   */\n  setBlockGasLimit: (args: SetBlockGasLimitParameters) => Promise<void>\n  /**\n   * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime.html), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval.html\n   *\n   * @param args \u2013 {@link SetBlockTimestampIntervalParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockTimestampInterval({ interval: 5 })\n   */\n  setBlockTimestampInterval: (\n    args: SetBlockTimestampIntervalParameters,\n  ) => Promise<void>\n  /**\n   * Modifies the bytecode stored at an account's address.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCode.html\n   *\n   * @param args \u2013 {@link SetCodeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCode({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df\u2026',\n   * })\n   */\n  setCode: (args: SetCodeParameters) => Promise<void>\n  /**\n   * Sets the coinbase address to be used in new blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCoinbase.html\n   *\n   * @param args \u2013 {@link SetCoinbaseParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCoinbase({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   * })\n   */\n  setCoinbase: (args: SetCoinbaseParameters) => Promise<void>\n  /**\n   * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n   *\n   * @param args \u2013 {@link SetIntervalMiningParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setIntervalMining({ interval: 5 })\n   */\n  setIntervalMining: (args: SetIntervalMiningParameters) => Promise<void>\n  /**\n   * Enable or disable logging on the test node network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled.html\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setLoggingEnabled()\n   */\n  setLoggingEnabled: (args: boolean) => Promise<void>\n  /**\n   * Change the minimum gas price accepted by the network (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice.html\n   *\n   * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n   *\n   * @param args \u2013 {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setMinGasPrice({\n   *   gasPrice: parseGwei('20'),\n   * })\n   */\n  setMinGasPrice: (args: SetMinGasPriceParameters) => Promise<void>\n  /**\n   * Sets the next block's base fee per gas.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas.html\n   *\n   * @param args \u2013 {@link SetNextBlockBaseFeePerGasParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockBaseFeePerGas({\n   *   baseFeePerGas: parseGwei('20'),\n   * })\n   */\n  setNextBlockBaseFeePerGas: (\n    args: SetNextBlockBaseFeePerGasParameters,\n  ) => Promise<void>\n  /**\n   * Sets the next block's timestamp.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp.html\n   *\n   * @param args \u2013 {@link SetNextBlockTimestampParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockTimestamp({ timestamp: 1671744314n })\n   */\n  setNextBlockTimestamp: (\n    args: SetNextBlockTimestampParameters,\n  ) => Promise<void>\n  /**\n   * Modifies (overrides) the nonce of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNonce.html\n   *\n   * @param args \u2013 {@link SetNonceParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNonce({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   nonce: 420,\n   * })\n   */\n  setNonce: (args: SetNonceParameters) => Promise<void>\n  /**\n   * Sets the backend RPC URL.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setRpcUrl.html\n   *\n   * @param jsonRpcUrl \u2013 RPC URL\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setRpcUrl('https://eth-mainnet.g.alchemy.com/v2')\n   */\n  setRpcUrl: (args: string) => Promise<void>\n  /**\n   * Writes to a slot of an account's storage.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setStorageAt.html\n   *\n   * @param args \u2013 {@link SetStorageAtParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setStorageAt({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   index: 2,\n   *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n   * })\n   */\n  setStorageAt: (args: SetStorageAtParameters) => Promise<void>\n  /**\n   * Snapshot the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/snapshot.html\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { snapshot } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.snapshot()\n   */\n  snapshot: () => Promise<Quantity>\n  /**\n   * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount.html\n   *\n   * @param args \u2013 {@link StopImpersonatingAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { stopImpersonatingAccount } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.stopImpersonatingAccount({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   * })\n   */\n  stopImpersonatingAccount: (\n    args: StopImpersonatingAccountParameters,\n  ) => Promise<void>\n}\n\nexport function testActions<TMode extends TestClientMode>({\n  mode,\n}: { mode: TMode }): <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n) => TestActions {\n  return <\n    TTransport extends Transport = Transport,\n    TChain extends Chain | undefined = Chain | undefined,\n    TAccount extends Account | undefined = Account | undefined,\n  >(\n    client_: Client<TTransport, TChain, TAccount>,\n  ): TestActions => {\n    const client = client_.extend(() => ({\n      mode,\n    }))\n    return {\n      dropTransaction: (args) => dropTransaction(client, args),\n      getAutomine: () => getAutomine(client),\n      getTxpoolContent: () => getTxpoolContent(client),\n      getTxpoolStatus: () => getTxpoolStatus(client),\n      impersonateAccount: (args) => impersonateAccount(client, args),\n      increaseTime: (args) => increaseTime(client, args),\n      inspectTxpool: () => inspectTxpool(client),\n      mine: (args) => mine(client, args),\n      removeBlockTimestampInterval: () => removeBlockTimestampInterval(client),\n      reset: (args) => reset(client, args),\n      revert: (args) => revert(client, args),\n      sendUnsignedTransaction: (args) =>\n        sendUnsignedTransaction(client, args as any),\n      setAutomine: (args) => setAutomine(client, args),\n      setBalance: (args) => setBalance(client, args),\n      setBlockGasLimit: (args) => setBlockGasLimit(client, args),\n      setBlockTimestampInterval: (args) =>\n        setBlockTimestampInterval(client, args),\n      setCode: (args) => setCode(client, args),\n      setCoinbase: (args) => setCoinbase(client, args),\n      setIntervalMining: (args) => setIntervalMining(client, args),\n      setLoggingEnabled: (args) => setLoggingEnabled(client, args),\n      setMinGasPrice: (args) => setMinGasPrice(client, args),\n      setNextBlockBaseFeePerGas: (args) =>\n        setNextBlockBaseFeePerGas(client, args),\n      setNextBlockTimestamp: (args) => setNextBlockTimestamp(client, args),\n      setNonce: (args) => setNonce(client, args),\n      setRpcUrl: (args) => setRpcUrl(client, args),\n      setStorageAt: (args) => setStorageAt(client, args),\n      snapshot: () => snapshot(client),\n      stopImpersonatingAccount: (args) =>\n        stopImpersonatingAccount(client, args),\n    }\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { TestRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { type Client, type ClientConfig, createClient } from './createClient.js'\nimport { type TestActions, testActions } from './decorators/test.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type TestClientMode = 'anvil' | 'hardhat' | 'ganache'\n\nexport type TestClientConfig<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  > & {\n    /** Mode of the test client. */\n    mode: mode | ('anvil' | 'hardhat' | 'ganache') // TODO: Type utility that expands `TestClientMode`\n  }\n>\n\nexport type TestClient<\n  TMode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TIncludeActions extends boolean = true,\n> = Prettify<\n  { mode: TMode } & Client<\n    transport,\n    chain,\n    TAccount,\n    TestRpcSchema<TMode>,\n    TIncludeActions extends true ? TestActions : Record<string, unknown>\n  >\n>\n\n/**\n * @description Creates a test client with a given transport.\n */\n/**\n * Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/test.html\n *\n * A Test Client is an interface to \"test\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction.html).\n *\n * @param config - {@link TestClientConfig}\n * @returns A Test Client. {@link TestClient}\n *\n * @example\n * import { createTestClient, custom } from 'viem'\n * import { foundry } from 'viem/chains'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: foundry,\n *   transport: http(),\n * })\n */\nexport function createTestClient<\n  mode extends 'anvil' | 'hardhat' | 'ganache', // TODO: Type utility that expands `TestClientMode`\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: TestClientConfig<mode, transport, chain, accountOrAddress>,\n): TestClient<mode, transport, chain, ParseAccount<accountOrAddress>>\n\nexport function createTestClient(parameters: TestClientConfig): TestClient {\n  const { key = 'test', name = 'Test Client', mode } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'testClient',\n  })\n  return client.extend((config) => ({\n    mode,\n    ...testActions({ mode })(config),\n  }))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type AddChainParameters = {\n  /** The chain to add to the wallet. */\n  chain: Chain\n}\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>, { chain }: AddChainParameters) {\n  const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain\n  await client.request({\n    method: 'wallet_addEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n        chainName: name,\n        nativeCurrency,\n        rpcUrls: rpcUrls.default.http,\n        blockExplorerUrls: blockExplorers\n          ? Object.values(blockExplorers).map(({ url }) => url)\n          : undefined,\n      },\n    ],\n  })\n}\n", "import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { encodeDeployData } from '../../utils/abi/encodeDeployData.js'\n\nimport {\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type DeployContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  'accessList' | 'chain' | 'to' | 'data'\n> & {\n  abi: TAbi\n  bytecode: Hex\n} & GetChain<TChain, TChainOverride> &\n  GetConstructorArgs<TAbi>\n\nexport type DeployContractReturnType = SendTransactionReturnType\n\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract.html\n * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x\u2026,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract<\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined,\n>(\n  walletClient: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    args,\n    bytecode,\n    ...request\n  }: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n): Promise<DeployContractReturnType> {\n  const calldata = encodeDeployData({\n    abi,\n    args,\n    bytecode,\n  } as unknown as DeployContractParameters<\n    TAbi,\n    TChain,\n    TAccount,\n    TChainOverride\n  >)\n  return sendTransaction(walletClient, {\n    ...request,\n    data: calldata,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { checksumAddress } from '../../utils/address/getAddress.js'\n\nexport type GetAddressesReturnType = Address[]\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<GetAddressesReturnType> {\n  const addresses = await client.request({ method: 'eth_accounts' })\n  return addresses.map((address) => checksumAddress(address))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\n\nexport type GetPermissionsReturnType = WalletPermission[]\n\n/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>) {\n  const permissions = await client.request({ method: 'wallet_getPermissions' })\n  return permissions\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\n\nexport type RequestAddressesReturnType = Address[]\n\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<RequestAddressesReturnType> {\n  const addresses = await client.request({ method: 'eth_requestAccounts' })\n  return addresses.map((address) => getAddress(address))\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\n\nexport type RequestPermissionsParameters = Prettify<\n  {\n    eth_accounts: Record<string, any>\n  } & {\n    [key: string]: Record<string, any>\n  }\n>\nexport type RequestPermissionsReturnType = WalletPermission[]\n\n/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  permissions: RequestPermissionsParameters,\n) {\n  return client.request({\n    method: 'wallet_requestPermissions',\n    params: [permissions],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { stringToHex, toHex } from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  TAccount extends Account | undefined = Account | undefined,\n> = GetAccountParameter<TAccount> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<TAccount>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n  if (account.type === 'local') return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request({\n    method: 'personal_sign',\n    params: [message_, account.address],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain, GetChain } from '../../types/chain.js'\nimport { type RpcTransactionRequest } from '../../types/rpc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n  TransactionSerialized,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { assertCurrentChain } from '../../utils/chain.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { numberToHex } from '../../utils/index.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport { getChainId } from '../public/getChainId.js'\n\nexport type SignTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SignTransactionReturnType = TransactionSerialized\n\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized tranasction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SignTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    })\n  const account = parseAccount(account_)\n\n  assertRequest({\n    account,\n    ...args,\n  })\n\n  const chainId = await getChainId(client)\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain,\n    })\n\n  const formatters = chain?.formatters || client.chain?.formatters\n  const format =\n    formatters?.transactionRequest?.format || formatTransactionRequest\n\n  if (account.type === 'local')\n    return account.signTransaction(\n      {\n        chainId,\n        ...transaction,\n      } as unknown as TransactionSerializable,\n      { serializer: client.chain?.serializers?.transaction },\n    ) as Promise<SignTransactionReturnType>\n\n  return await client.request({\n    method: 'eth_signTransaction',\n    params: [\n      {\n        ...format(transaction as unknown as TransactionRequest),\n        chainId: numberToHex(chainId),\n        from: account.address,\n      } as unknown as RpcTransactionRequest,\n    ],\n  })\n}\n", "import type { TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport { isHex } from '../../utils/data/isHex.js'\nimport { stringify } from '../../utils/stringify.js'\nimport {\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../../utils/typedData.js'\n\nexport type SignTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n  TAccount extends Account | undefined = undefined,\n> = GetAccountParameter<TAccount> &\n  TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type SignTypedDataReturnType = Hex\n\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" \u2016 domainSeparator \u2016 hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    domain,\n    message,\n    primaryType,\n    types: types_,\n  }: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n): Promise<SignTypedDataReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTypedData',\n    })\n  const account = parseAccount(account_)\n\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  if (account.type === 'local')\n    return account.signTypedData({\n      domain,\n      primaryType,\n      types,\n      message,\n    } as TypedDataDefinition)\n\n  const typedData = stringify(\n    { domain: domain ?? {}, primaryType, types, message },\n    (_, value) => (isHex(value) ? value.toLowerCase() : value),\n  )\n  return client.request({\n    method: 'eth_signTypedData_v4',\n    params: [account.address, typedData],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>, { id }: SwitchChainParameters) {\n  await client.request({\n    method: 'wallet_switchEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n      },\n    ],\n  })\n}\n", "import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WatchAssetParams } from '../../types/eip1193.js'\n\nexport type WatchAssetParameters = WatchAssetParams\nexport type WatchAssetReturnType = boolean\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  params: WatchAssetParameters,\n): Promise<WatchAssetReturnType> {\n  const added = await client.request({\n    method: 'wallet_watchAsset',\n    params,\n  })\n  return added\n}\n", "import type { Abi, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x\u2026,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TChainOverride extends Chain | undefined,\n  >(\n    args: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <TChainOverride extends Chain | undefined,>(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <TChainOverride extends Chain | undefined>(\n    args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<TAccount>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <TChainOverride extends Chain | undefined,>(\n    args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SignTransactionReturnType>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x\u2026'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const TTypedData extends TypedData | { [key: string]: unknown },\n    TPrimaryType extends string,\n  >(\n    args: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract.html\n   * - Examples: https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * __Warning: The `write` internally sends a transaction \u2013 it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined,\n  >(\n    args: WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TAccount,\n      TChainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): WalletActions<TChain, TAccount> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args),\n  }\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { type Client, type ClientConfig, createClient } from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/wallet.html\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction.html).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet.html#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet.html#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x\u2026')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport: (opts) => transport({ ...opts, retryCount: 0 }),\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n", "import type { WebSocket } from 'isomorphic-ws'\n\nimport { RpcRequestError } from '../../errors/request.js'\nimport { UrlRequiredError } from '../../errors/transport.js'\nimport type { Hash } from '../../types/misc.js'\nimport { type RpcResponse, getSocket, rpc } from '../../utils/rpc.js'\nimport {\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype WebSocketTransportSubscribeParameters = {\n  onData: (data: RpcResponse) => void\n  onError?: (error: any) => void\n}\n\ntype WebSocketTransportSubscribeReturnType = {\n  subscriptionId: Hash\n  unsubscribe: () => Promise<RpcResponse<boolean>>\n}\n\ntype WebSocketTransportSubscribe = {\n  subscribe(\n    args: WebSocketTransportSubscribeParameters & {\n      /**\n       * @description Add information about compiled contracts\n       * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n       */\n      params: ['newHeads']\n    },\n  ): Promise<WebSocketTransportSubscribeReturnType>\n}\n\nexport type WebSocketTransportConfig = {\n  /** The key of the WebSocket transport. */\n  key?: TransportConfig['key']\n  /** The name of the WebSocket transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for async WebSocket requests. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type WebSocketTransport = Transport<\n  'webSocket',\n  {\n    getSocket(): Promise<WebSocket>\n    subscribe: WebSocketTransportSubscribe['subscribe']\n  }\n>\n\n/**\n * @description Creates a WebSocket transport that connects to a JSON-RPC API.\n */\nexport function webSocket(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: WebSocketTransportConfig = {},\n): WebSocketTransport {\n  const { key = 'webSocket', name = 'WebSocket JSON-RPC', retryDelay } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.webSocket?.[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n          const socket = await getSocket(url_)\n          const { error, result } = await rpc.webSocketAsync(socket, {\n            body,\n            timeout,\n          })\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'webSocket',\n      },\n      {\n        getSocket() {\n          return getSocket(url_)\n        },\n        async subscribe({ params, onData, onError }: any) {\n          const socket = await getSocket(url_)\n          const { result: subscriptionId } = await new Promise<any>(\n            (resolve, reject) =>\n              rpc.webSocket(socket, {\n                body: {\n                  method: 'eth_subscribe',\n                  params,\n                },\n                onResponse(response) {\n                  if (response.error) {\n                    reject(response.error)\n                    onError?.(response.error)\n                    return\n                  }\n\n                  if (typeof response.id === 'number') {\n                    resolve(response)\n                    return\n                  }\n                  if (response.method !== 'eth_subscription') return\n                  onData(response.params)\n                },\n              }),\n          )\n          return {\n            subscriptionId,\n            async unsubscribe() {\n              return new Promise<any>((resolve) =>\n                rpc.webSocket(socket, {\n                  body: {\n                    method: 'eth_unsubscribe',\n                    params: [subscriptionId],\n                  },\n                  onResponse: resolve,\n                }),\n              )\n            },\n          }\n        },\n      },\n    )\n  }\n}\n", "export const zeroAddress = '0x0000000000000000000000000000000000000000' as const\n", "export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n", "import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport { decodeAbiParameters } from './decodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/decodeDeployData'\n\nexport type DecodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n  data: Hex\n}\nexport type DecodeDeployDataReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport function decodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  bytecode,\n  data,\n}: DecodeDeployDataParameters<TAbi>): DecodeDeployDataReturnType<TAbi> {\n  if (data === bytecode) return { bytecode } as DecodeDeployDataReturnType<TAbi>\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const args = decodeAbiParameters(\n    description.inputs,\n    `0x${data.replace(bytecode, '')}`,\n  )\n  return { args, bytecode } as unknown as DecodeDeployDataReturnType<TAbi>\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { Hex, Signature } from '../../types/misc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function hexToSignature(signatureHex: Hex): Signature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const v = BigInt(`0x${signatureHex.slice(130)}`)\n  return { r: numberToHex(r, { size: 32 }), s: numberToHex(s, { size: 32 }), v }\n}\n", "import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { Hex, Signature } from '../../types/misc.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { toHex } from '../../utils/encoding/toHex.js'\n\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * signatureToHex({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   v: 28n\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function signatureToHex({ r, s, v }: Signature): Hex {\n  return `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(s),\n  ).toCompactHex()}${toHex(v).slice(2)}`\n}\n", "export {\n  type Abi,\n  type Address,\n  type Narrow,\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  type ResolvedConfig,\n  type TypedData,\n  type TypedDataDomain,\n  type TypedDataParameter,\n  CircularReferenceError,\n  InvalidAbiParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiItemError,\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  InvalidParenthesisError,\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n  SolidityProtectedKeywordError,\n  UnknownTypeError,\n  UnknownSignatureError,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\n\nexport {\n  getContract,\n  type GetContractParameters,\n  type GetContractReturnType,\n} from './actions/getContract.js'\nexport { type AddChainParameters } from './actions/wallet/addChain.js'\nexport {\n  type CallParameters,\n  type CallReturnType,\n} from './actions/public/call.js'\nexport type { CreateBlockFilterReturnType } from './actions/public/createBlockFilter.js'\nexport type {\n  CreateContractEventFilterParameters,\n  CreateContractEventFilterReturnType,\n} from './actions/public/createContractEventFilter.js'\nexport type {\n  CreateEventFilterParameters,\n  CreateEventFilterReturnType,\n} from './actions/public/createEventFilter.js'\nexport type { CreatePendingTransactionFilterReturnType } from './actions/public/createPendingTransactionFilter.js'\nexport type {\n  DeployContractParameters,\n  DeployContractReturnType,\n} from './actions/wallet/deployContract.js'\nexport type { DropTransactionParameters } from './actions/test/dropTransaction.js'\nexport type { GetAutomineReturnType } from './actions/test/getAutomine.js'\nexport type {\n  EstimateContractGasParameters,\n  EstimateContractGasReturnType,\n} from './actions/public/estimateContractGas.js'\nexport type {\n  EstimateGasParameters,\n  EstimateGasReturnType,\n} from './actions/public/estimateGas.js'\nexport type {\n  EstimateFeesPerGasParameters,\n  EstimateFeesPerGasReturnType,\n} from './actions/public/estimateFeesPerGas.js'\nexport type {\n  EstimateMaxPriorityFeePerGasParameters,\n  EstimateMaxPriorityFeePerGasReturnType,\n} from './actions/public/estimateMaxPriorityFeePerGas.js'\nexport type { GetAddressesReturnType } from './actions/wallet/getAddresses.js'\nexport type {\n  GetBalanceParameters,\n  GetBalanceReturnType,\n} from './actions/public/getBalance.js'\nexport type {\n  GetBlockNumberParameters,\n  GetBlockNumberReturnType,\n} from './actions/public/getBlockNumber.js'\nexport type {\n  GetBlockParameters,\n  GetBlockReturnType,\n} from './actions/public/getBlock.js'\nexport type {\n  GetBlockTransactionCountParameters,\n  GetBlockTransactionCountReturnType,\n} from './actions/public/getBlockTransactionCount.js'\nexport type {\n  GetBytecodeParameters,\n  GetBytecodeReturnType,\n} from './actions/public/getBytecode.js'\nexport type { GetChainIdReturnType } from './actions/public/getChainId.js'\nexport type {\n  GetEnsAddressParameters,\n  GetEnsAddressReturnType,\n} from './actions/ens/getEnsAddress.js'\nexport type {\n  GetEnsNameParameters,\n  GetEnsNameReturnType,\n} from './actions/ens/getEnsName.js'\nexport type {\n  GetEnsResolverParameters,\n  GetEnsResolverReturnType,\n} from './actions/ens/getEnsResolver.js'\nexport type {\n  GetFeeHistoryParameters,\n  GetFeeHistoryReturnType,\n} from './actions/public/getFeeHistory.js'\nexport type {\n  GetFilterChangesParameters,\n  GetFilterChangesReturnType,\n} from './actions/public/getFilterChanges.js'\nexport type {\n  GetFilterLogsParameters,\n  GetFilterLogsReturnType,\n} from './actions/public/getFilterLogs.js'\nexport type { GetGasPriceReturnType } from './actions/public/getGasPrice.js'\nexport type {\n  GetLogsParameters,\n  GetLogsReturnType,\n} from './actions/public/getLogs.js'\nexport type { GetPermissionsReturnType } from './actions/wallet/getPermissions.js'\nexport type {\n  GetStorageAtParameters,\n  GetStorageAtReturnType,\n} from './actions/public/getStorageAt.js'\nexport type {\n  GetTransactionConfirmationsParameters,\n  GetTransactionConfirmationsReturnType,\n} from './actions/public/getTransactionConfirmations.js'\nexport type {\n  GetTransactionCountParameters,\n  GetTransactionCountReturnType,\n} from './actions/public/getTransactionCount.js'\nexport type {\n  GetTransactionParameters,\n  GetTransactionReturnType,\n} from './actions/public/getTransaction.js'\nexport type {\n  GetTransactionReceiptParameters,\n  GetTransactionReceiptReturnType,\n} from './actions/public/getTransactionReceipt.js'\nexport type { ImpersonateAccountParameters } from './actions/test/impersonateAccount.js'\nexport type { IncreaseTimeParameters } from './actions/test/increaseTime.js'\nexport type { MineParameters } from './actions/test/mine.js'\nexport type {\n  MulticallParameters,\n  MulticallReturnType,\n} from './actions/public/multicall.js'\nexport type {\n  OnBlock,\n  OnBlockParameter,\n  WatchBlocksParameters,\n  WatchBlocksReturnType,\n} from './actions/public/watchBlocks.js'\nexport type {\n  OnBlockNumberFn,\n  OnBlockNumberParameter,\n  WatchBlockNumberParameters,\n  WatchBlockNumberReturnType,\n} from './actions/public/watchBlockNumber.js'\nexport type {\n  WatchEventOnLogsFn,\n  /** @deprecated - use `WatchEventOnLogsFn` instead. */\n  WatchEventOnLogsFn as OnLogFn,\n  WatchEventOnLogsParameter,\n  /** @deprecated - use `WatchEventOnLogsParameter` instead. */\n  WatchEventOnLogsParameter as OnLogParameter,\n  WatchEventParameters,\n  WatchEventReturnType,\n} from './actions/public/watchEvent.js'\nexport type {\n  OnTransactionsFn,\n  OnTransactionsParameter,\n  WatchPendingTransactionsParameters,\n  WatchPendingTransactionsReturnType,\n} from './actions/public/watchPendingTransactions.js'\nexport type {\n  ReadContractParameters,\n  ReadContractReturnType,\n} from './actions/public/readContract.js'\nexport type {\n  ReplacementReason,\n  ReplacementReturnType,\n  WaitForTransactionReceiptParameters,\n  WaitForTransactionReceiptReturnType,\n} from './actions/public/waitForTransactionReceipt.js'\nexport type { RequestAddressesReturnType } from './actions/wallet/requestAddresses.js'\nexport type {\n  RequestPermissionsReturnType,\n  RequestPermissionsParameters,\n} from './actions/wallet/requestPermissions.js'\nexport type { GetTxpoolContentReturnType } from './actions/test/getTxpoolContent.js'\nexport type { GetTxpoolStatusReturnType } from './actions/test/getTxpoolStatus.js'\nexport type { InspectTxpoolReturnType } from './actions/test/inspectTxpool.js'\nexport type { ResetParameters } from './actions/test/reset.js'\nexport type { RevertParameters } from './actions/test/revert.js'\nexport type {\n  SendTransactionParameters,\n  SendTransactionReturnType,\n} from './actions/wallet/sendTransaction.js'\nexport type {\n  PrepareTransactionRequestParameters,\n  PrepareTransactionRequestReturnType,\n  /** @deprecated import `prepareTransactionRequest` from `viem/actions` instead. */\n  prepareTransactionRequest as prepareRequest,\n} from './actions/wallet/prepareTransactionRequest.js'\nexport type {\n  SendUnsignedTransactionParameters,\n  SendUnsignedTransactionReturnType,\n} from './actions/test/sendUnsignedTransaction.js'\nexport type { SetBalanceParameters } from './actions/test/setBalance.js'\nexport type { SetBlockGasLimitParameters } from './actions/test/setBlockGasLimit.js'\nexport type { SetBlockTimestampIntervalParameters } from './actions/test/setBlockTimestampInterval.js'\nexport type { SetCodeParameters } from './actions/test/setCode.js'\nexport type { SetCoinbaseParameters } from './actions/test/setCoinbase.js'\nexport type { SetIntervalMiningParameters } from './actions/test/setIntervalMining.js'\nexport type { SetMinGasPriceParameters } from './actions/test/setMinGasPrice.js'\nexport type { SetNextBlockBaseFeePerGasParameters } from './actions/test/setNextBlockBaseFeePerGas.js'\nexport type { SetNextBlockTimestampParameters } from './actions/test/setNextBlockTimestamp.js'\nexport type { SetNonceParameters } from './actions/test/setNonce.js'\nexport type { SetStorageAtParameters } from './actions/test/setStorageAt.js'\nexport type {\n  SignMessageParameters,\n  SignMessageReturnType,\n} from './actions/wallet/signMessage.js'\nexport type {\n  SignTypedDataParameters,\n  SignTypedDataReturnType,\n} from './actions/wallet/signTypedData.js'\nexport type {\n  SimulateContractParameters,\n  SimulateContractReturnType,\n} from './actions/public/simulateContract.js'\nexport type { StopImpersonatingAccountParameters } from './actions/test/stopImpersonatingAccount.js'\nexport type { SwitchChainParameters } from './actions/wallet/switchChain.js'\nexport type {\n  UninstallFilterParameters,\n  UninstallFilterReturnType,\n} from './actions/public/uninstallFilter.js'\nexport type {\n  WatchAssetParameters,\n  WatchAssetReturnType,\n} from './actions/wallet/watchAsset.js'\nexport type {\n  VerifyHashParameters,\n  VerifyHashReturnType,\n} from './actions/public/verifyHash.js'\nexport type {\n  WatchContractEventOnLogsParameter,\n  WatchContractEventParameters,\n  WatchContractEventReturnType,\n} from './actions/public/watchContractEvent.js'\nexport type {\n  WriteContractParameters,\n  WriteContractReturnType,\n} from './actions/wallet/writeContract.js'\nexport type {\n  Chain,\n  ChainContract,\n  ChainFees,\n  ChainFormatter,\n  /** @deprecated use `ChainFormatter` instead. */\n  ChainFormatter as Formatter,\n  ChainFormatters,\n  /** @deprecated use `ChainFormatters` instead. */\n  ChainFormatters as Formatters,\n  ChainSerializers,\n  /** @deprecated use `ChainSerializers` instead. */\n  ChainSerializers as Serializers,\n  ExtractChainFormatterExclude,\n  /** @deprecated use `ExtractChainFormatterExclude` instead. */\n  ExtractChainFormatterExclude as ExtractFormatterExclude,\n  ExtractChainFormatterParameters,\n  /** @deprecated use `ExtractChainFormatterParameters` instead. */\n  ExtractChainFormatterParameters as ExtractFormatterParameters,\n  ExtractChainFormatterReturnType,\n  /** @deprecated use `ExtractChainFormatterReturnType` instead. */\n  ExtractChainFormatterReturnType as ExtractFormatterReturnType,\n} from './types/chain.js'\nexport {\n  type Client,\n  type ClientConfig,\n  type MulticallBatchOptions,\n  createClient,\n} from './clients/createClient.js'\nexport {\n  type CustomTransport,\n  type CustomTransportConfig,\n  custom,\n} from './clients/transports/custom.js'\nexport {\n  type FallbackTransport,\n  type FallbackTransportConfig,\n  fallback,\n} from './clients/transports/fallback.js'\nexport {\n  type HttpTransport,\n  type HttpTransportConfig,\n  http,\n} from './clients/transports/http.js'\nexport {\n  type PublicClient,\n  type PublicClientConfig,\n  createPublicClient,\n} from './clients/createPublicClient.js'\nexport {\n  type TestClient,\n  type TestClientConfig,\n  createTestClient,\n} from './clients/createTestClient.js'\nexport {\n  type PublicActions,\n  publicActions,\n} from './clients/decorators/public.js'\nexport {\n  type TestActions,\n  testActions,\n} from './clients/decorators/test.js'\nexport {\n  type WalletActions,\n  walletActions,\n} from './clients/decorators/wallet.js'\nexport {\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './clients/transports/createTransport.js'\nexport {\n  type WalletClient,\n  type WalletClientConfig,\n  createWalletClient,\n} from './clients/createWalletClient.js'\nexport {\n  type WebSocketTransport,\n  type WebSocketTransportConfig,\n  webSocket,\n} from './clients/transports/webSocket.js'\nexport { multicall3Abi } from './constants/abis.js'\nexport { zeroAddress } from './constants/address.js'\nexport { etherUnits, gweiUnits, weiUnits } from './constants/unit.js'\nexport {\n  maxInt8,\n  maxInt16,\n  maxInt24,\n  maxInt32,\n  maxInt40,\n  maxInt48,\n  maxInt56,\n  maxInt64,\n  maxInt72,\n  maxInt80,\n  maxInt88,\n  maxInt96,\n  maxInt104,\n  maxInt112,\n  maxInt120,\n  maxInt128,\n  maxInt136,\n  maxInt144,\n  maxInt152,\n  maxInt160,\n  maxInt168,\n  maxInt176,\n  maxInt184,\n  maxInt192,\n  maxInt200,\n  maxInt208,\n  maxInt216,\n  maxInt224,\n  maxInt232,\n  maxInt240,\n  maxInt248,\n  maxInt256,\n  maxUint8,\n  maxUint16,\n  maxUint24,\n  maxUint32,\n  maxUint40,\n  maxUint48,\n  maxUint56,\n  maxUint64,\n  maxUint72,\n  maxUint80,\n  maxUint88,\n  maxUint96,\n  maxUint104,\n  maxUint112,\n  maxUint120,\n  maxUint128,\n  maxUint136,\n  maxUint144,\n  maxUint152,\n  maxUint160,\n  maxUint168,\n  maxUint176,\n  maxUint184,\n  maxUint192,\n  maxUint200,\n  maxUint208,\n  maxUint216,\n  maxUint224,\n  maxUint232,\n  maxUint240,\n  maxUint248,\n  maxUint256,\n  minInt8,\n  minInt16,\n  minInt24,\n  minInt32,\n  minInt40,\n  minInt48,\n  minInt56,\n  minInt64,\n  minInt72,\n  minInt80,\n  minInt88,\n  minInt96,\n  minInt104,\n  minInt112,\n  minInt120,\n  minInt128,\n  minInt136,\n  minInt144,\n  minInt152,\n  minInt160,\n  minInt168,\n  minInt176,\n  minInt184,\n  minInt192,\n  minInt200,\n  minInt208,\n  minInt216,\n  minInt224,\n  minInt232,\n  minInt240,\n  minInt248,\n  minInt256,\n} from './constants/number.js'\nexport {\n  AbiConstructorNotFoundError,\n  AbiConstructorParamsNotFoundError,\n  AbiDecodingDataSizeInvalidError,\n  AbiDecodingZeroDataError,\n  AbiEncodingArrayLengthMismatchError,\n  AbiEncodingLengthMismatchError,\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n  AbiErrorSignatureNotFoundError,\n  AbiEventNotFoundError,\n  AbiEventSignatureEmptyTopicsError,\n  AbiEventSignatureNotFoundError,\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n  AbiFunctionSignatureNotFoundError,\n  DecodeLogTopicsMismatch,\n  InvalidAbiDecodingTypeError,\n  InvalidAbiEncodingTypeError,\n  InvalidArrayError,\n  InvalidDefinitionTypeError,\n} from './errors/abi.js'\nexport { BaseError } from './errors/base.js'\nexport { BlockNotFoundError } from './errors/block.js'\nexport {\n  CallExecutionError,\n  ContractFunctionExecutionError,\n  ContractFunctionRevertedError,\n  ContractFunctionZeroDataError,\n  RawContractError,\n} from './errors/contract.js'\nexport {\n  BaseFeeScalarError,\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from './errors/fee.js'\nexport {\n  ChainDisconnectedError,\n  InternalRpcError,\n  InvalidInputRpcError,\n  InvalidParamsRpcError,\n  InvalidRequestRpcError,\n  JsonRpcVersionUnsupportedError,\n  LimitExceededRpcError,\n  MethodNotFoundRpcError,\n  MethodNotSupportedRpcError,\n  ParseRpcError,\n  ProviderDisconnectedError,\n  ProviderRpcError,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  ResourceUnavailableRpcError,\n  RpcError,\n  type RpcErrorCode,\n  TransactionRejectedRpcError,\n  SwitchChainError,\n  UnauthorizedProviderError,\n  UnknownRpcError,\n  UnsupportedProviderMethodError,\n  UserRejectedRequestError,\n} from './errors/rpc.js'\nexport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n  InvalidChainIdError,\n} from './errors/chain.js'\nexport {\n  DataLengthTooLongError,\n  DataLengthTooShortError,\n  InvalidBytesBooleanError,\n  InvalidHexBooleanError,\n  InvalidHexValueError,\n  OffsetOutOfBoundsError,\n} from './errors/encoding.js'\nexport { EnsAvatarUriResolutionError } from './errors/ens.js'\nexport { EstimateGasExecutionError } from './errors/estimateGas.js'\nexport {\n  ExecutionRevertedError,\n  FeeCapTooHighError,\n  FeeCapTooLowError,\n  InsufficientFundsError,\n  IntrinsicGasTooHighError,\n  IntrinsicGasTooLowError,\n  NonceMaxValueError,\n  NonceTooHighError,\n  NonceTooLowError,\n  TipAboveFeeCapError,\n  TransactionTypeNotSupportedError,\n  UnknownNodeError,\n} from './errors/node.js'\nexport { FilterTypeNotSupportedError } from './errors/log.js'\nexport {\n  HttpRequestError,\n  RpcRequestError,\n  TimeoutError,\n  WebSocketRequestError,\n} from './errors/request.js'\nexport { InvalidAddressError } from './errors/address.js'\nexport {\n  InvalidLegacyVError,\n  TransactionExecutionError,\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n} from './errors/transaction.js'\nexport { SizeExceedsPaddingSizeError } from './errors/data.js'\nexport { UrlRequiredError } from './errors/transport.js'\nexport type {\n  AbiItem,\n  ContractFunctionConfig,\n  ContractFunctionResult,\n  GetConstructorArgs,\n  GetErrorArgs,\n  GetEventArgs,\n  GetEventArgsFromTopics,\n  GetFunctionArgs,\n  GetValue,\n  InferErrorName,\n  InferEventName,\n  InferFunctionName,\n  InferItemName,\n} from './types/contract.js'\nexport type {\n  AccessList,\n  Transaction,\n  TransactionBase,\n  TransactionEIP1559,\n  TransactionEIP2930,\n  TransactionLegacy,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionRequestBase,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n  TransactionSerializableBase,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from './types/transaction.js'\nexport type {\n  Account,\n  AccountSource,\n  CustomSource,\n  HDAccount,\n  HDOptions,\n  JsonRpcAccount,\n  LocalAccount,\n  PrivateKeyAccount,\n} from './accounts/types.js'\nexport type { AssetGateway, AssetGatewayUrls } from './types/ens.js'\nexport type {\n  Block,\n  BlockIdentifier,\n  BlockNumber,\n  BlockTag,\n  Uncle,\n} from './types/block.js'\nexport type {\n  ByteArray,\n  Hash,\n  Hex,\n  LogTopic,\n  Signature,\n  SignableMessage,\n} from './types/misc.js'\nexport type { GetChain } from './types/chain.js'\nexport type {\n  AddEthereumChainParameter,\n  EIP1193EventMap,\n  EIP1193Events,\n  EIP1193Parameters,\n  EIP1193Provider,\n  EIP1193RequestFn,\n  EIP1474Methods,\n  ProviderRpcError as EIP1193ProviderRpcError,\n  ProviderConnectInfo,\n  ProviderMessage,\n  PublicRpcSchema,\n  NetworkSync,\n  RpcSchema,\n  RpcSchemaOverride,\n  TestRpcSchema,\n  WatchAssetParams,\n  WalletPermissionCaveat,\n  WalletPermission,\n  WalletRpcSchema,\n} from './types/eip1193.js'\nexport type {\n  FeeHistory,\n  FeeValues,\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from './types/fee.js'\nexport type { Filter } from './types/filter.js'\nexport type {\n  GetTypedDataDomain,\n  GetTypedDataMessage,\n  GetTypedDataPrimaryType,\n  GetTypedDataTypes,\n  TypedDataDefinition,\n} from './types/typedData.js'\nexport type { GetTransportConfig } from './types/transport.js'\nexport type { HDKey } from '@scure/bip32'\nexport type { Log } from './types/log.js'\nexport type {\n  MulticallContract,\n  MulticallContracts,\n  MulticallResult,\n  MulticallResults,\n} from './types/multicall.js'\nexport type { ParseAccount } from './types/account.js'\nexport type {\n  RpcBlock,\n  RpcBlockIdentifier,\n  RpcBlockNumber,\n  RpcFeeHistory,\n  RpcFeeValues,\n  RpcLog,\n  RpcTransaction,\n  RpcTransactionReceipt,\n  RpcTransactionRequest,\n  RpcUncle,\n} from './types/rpc.js'\nexport { labelhash } from './utils/ens/labelhash.js'\nexport { namehash } from './utils/ens/namehash.js'\nexport {\n  type FormattedBlock,\n  defineBlock,\n  formatBlock,\n} from './utils/formatters/block.js'\nexport { formatLog } from './utils/formatters/log.js'\nexport {\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './utils/abi/decodeAbiParameters.js'\nexport {\n  type DecodeDeployDataParameters,\n  type DecodeDeployDataReturnType,\n  decodeDeployData,\n} from './utils/abi/decodeDeployData.js'\nexport {\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './utils/abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './utils/abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataParameters,\n  decodeFunctionData,\n} from './utils/abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './utils/abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './utils/abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataParameters,\n  encodeDeployData,\n} from './utils/abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultParameters,\n  encodeErrorResult,\n} from './utils/abi/encodeErrorResult.js'\nexport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from './utils/abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from './utils/abi/encodeFunctionData.js'\nexport {\n  type EncodeFunctionResultParameters,\n  encodeFunctionResult,\n} from './utils/abi/encodeFunctionResult.js'\nexport {\n  type FormattedTransaction,\n  defineTransaction,\n  formatTransaction,\n  transactionType,\n} from './utils/formatters/transaction.js'\nexport {\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n} from './utils/formatters/transactionReceipt.js'\nexport {\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  formatTransactionRequest,\n  rpcTransactionType,\n} from './utils/formatters/transactionRequest.js'\nexport {\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './utils/abi/getAbiItem.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressOptions,\n  type GetCreateAddressOptions,\n  getContractAddress,\n  getCreate2Address,\n  getCreateAddress,\n} from './utils/address/getContractAddress.js'\nexport {\n  type GetSerializedTransactionType,\n  getSerializedTransactionType,\n} from './utils/transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionType,\n  getTransactionType,\n} from './utils/transaction/getTransactionType.js'\nexport {\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashTypedData,\n} from './utils/signature/hashTypedData.js'\nexport { hexToSignature } from './utils/signature/hexToSignature.js'\nexport {\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './utils/signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './utils/signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './utils/signature/recoverPublicKey.js'\nexport {\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './utils/signature/recoverTypedDataAddress.js'\nexport { signatureToHex } from './utils/signature/signatureToHex.js'\nexport { type ToRlpReturnType, toRlp } from './utils/encoding/toRlp.js'\nexport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './utils/signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './utils/signature/verifyTypedData.js'\nexport { assertRequest } from './utils/transaction/assertRequest.js'\nexport {\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './utils/transaction/assertTransaction.js'\nexport {\n  boolToBytes,\n  hexToBytes,\n  numberToBytes,\n  stringToBytes,\n  toBytes,\n} from './utils/encoding/toBytes.js'\nexport {\n  boolToHex,\n  bytesToHex,\n  numberToHex,\n  stringToHex,\n  toHex,\n} from './utils/encoding/toHex.js'\nexport {\n  bytesToBigint,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n  fromBytes,\n} from './utils/encoding/fromBytes.js'\nexport {\n  ccipFetch,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './utils/ccip.js'\nexport { concat, concatBytes, concatHex } from './utils/data/concat.js'\nexport { assertCurrentChain, defineChain } from './utils/chain.js'\nexport { encodePacked } from './utils/abi/encodePacked.js'\nexport { formatEther } from './utils/unit/formatEther.js'\nexport { formatGwei } from './utils/unit/formatGwei.js'\nexport { formatUnits } from './utils/unit/formatUnits.js'\nexport {\n  fromHex,\n  hexToBigInt,\n  hexToBool,\n  hexToNumber,\n  hexToString,\n} from './utils/encoding/fromHex.js'\nexport { fromRlp } from './utils/encoding/fromRlp.js'\nexport { getAddress } from './utils/address/getAddress.js'\nexport { getContractError } from './utils/errors/getContractError.js'\nexport { getEventSelector } from './utils/hash/getEventSelector.js'\nexport { getFunctionSelector } from './utils/hash/getFunctionSelector.js'\nexport { hashMessage } from './utils/signature/hashMessage.js'\nexport { isAddress } from './utils/address/isAddress.js'\nexport { isAddressEqual } from './utils/address/isAddressEqual.js'\nexport { isBytes } from './utils/data/isBytes.js'\nexport { isHash } from './utils/hash/isHash.js'\nexport { isHex } from './utils/data/isHex.js'\nexport { keccak256 } from './utils/hash/keccak256.js'\nexport { pad, padBytes, padHex } from './utils/data/pad.js'\nexport { parseEther } from './utils/unit/parseEther.js'\nexport { parseGwei } from './utils/unit/parseGwei.js'\nexport { parseTransaction } from './utils/transaction/parseTransaction.js'\nexport { parseUnits } from './utils/unit/parseUnits.js'\nexport { serializeAccessList } from './utils/transaction/serializeAccessList.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionFn,\n} from './utils/transaction/serializeTransaction.js'\nexport { size } from './utils/data/size.js'\nexport { slice, sliceBytes, sliceHex } from './utils/data/slice.js'\nexport { stringify } from './utils/stringify.js'\nexport { trim } from './utils/data/trim.js'\nexport { validateTypedData, domainSeparator } from './utils/typedData.js'\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\n\nvar _chunkUGBGYVBHjs = require('./chunk-UGBGYVBH.js');\n\n\nvar _chunkOQILYQDOjs = require('./chunk-OQILYQDO.js');\n\n\n\n\n\nvar _chunkW65LBPLTjs = require('./chunk-W65LBPLT.js');\n\n// src/injected.ts\n\n\n\n\n\n\n\n\nvar _viem = require('viem');\n\n// src/utils/getInjectedName.ts\nfunction getInjectedName(ethereum) {\n  if (!ethereum)\n    return \"Injected\";\n  const getName = (provider) => {\n    if (provider.isApexWallet)\n      return \"Apex Wallet\";\n    if (provider.isAvalanche)\n      return \"Core Wallet\";\n    if (provider.isBackpack)\n      return \"Backpack\";\n    if (provider.isBifrost)\n      return \"Bifrost Wallet\";\n    if (provider.isBitKeep)\n      return \"BitKeep\";\n    if (provider.isBitski)\n      return \"Bitski\";\n    if (provider.isBlockWallet)\n      return \"BlockWallet\";\n    if (provider.isBraveWallet)\n      return \"Brave Wallet\";\n    if (provider.isCoin98)\n      return \"Coin98 Wallet\";\n    if (provider.isCoinbaseWallet)\n      return \"Coinbase Wallet\";\n    if (provider.isDawn)\n      return \"Dawn Wallet\";\n    if (provider.isDefiant)\n      return \"Defiant\";\n    if (provider.isDesig)\n      return \"Desig Wallet\";\n    if (provider.isEnkrypt)\n      return \"Enkrypt\";\n    if (provider.isExodus)\n      return \"Exodus\";\n    if (provider.isFordefi)\n      return \"Fordefi\";\n    if (provider.isFrame)\n      return \"Frame\";\n    if (provider.isFrontier)\n      return \"Frontier Wallet\";\n    if (provider.isGamestop)\n      return \"GameStop Wallet\";\n    if (provider.isHaqqWallet)\n      return \"HAQQ Wallet\";\n    if (provider.isHyperPay)\n      return \"HyperPay Wallet\";\n    if (provider.isImToken)\n      return \"ImToken\";\n    if (provider.isHaloWallet)\n      return \"Halo Wallet\";\n    if (provider.isKuCoinWallet)\n      return \"KuCoin Wallet\";\n    if (provider.isMathWallet)\n      return \"MathWallet\";\n    if (provider.isNovaWallet)\n      return \"Nova Wallet\";\n    if (provider.isOkxWallet || provider.isOKExWallet)\n      return \"OKX Wallet\";\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet)\n      return \"1inch Wallet\";\n    if (provider.isOpera)\n      return \"Opera\";\n    if (provider.isPhantom)\n      return \"Phantom\";\n    if (provider.isPortal)\n      return \"Ripio Portal\";\n    if (provider.isRabby)\n      return \"Rabby Wallet\";\n    if (provider.isRainbow)\n      return \"Rainbow\";\n    if (provider.isStatus)\n      return \"Status\";\n    if (provider.isSubWallet)\n      return \"SubWallet\";\n    if (provider.isTalisman)\n      return \"Talisman\";\n    if (provider.isTally)\n      return \"Taho\";\n    if (provider.isTokenPocket)\n      return \"TokenPocket\";\n    if (provider.isTokenary)\n      return \"Tokenary\";\n    if (provider.isTrust || provider.isTrustWallet)\n      return \"Trust Wallet\";\n    if (provider.isTTWallet)\n      return \"TTWallet\";\n    if (provider.isXDEFI)\n      return \"XDEFI Wallet\";\n    if (provider.isZeal)\n      return \"Zeal\";\n    if (provider.isZerion)\n      return \"Zerion\";\n    if (provider.isMetaMask)\n      return \"MetaMask\";\n  };\n  if (_optionalChain([ethereum, 'access', _ => _.providers, 'optionalAccess', _2 => _2.length])) {\n    const nameSet = /* @__PURE__ */ new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length)\n      return names;\n    return _nullishCoalesce(names[0], () => ( \"Injected\"));\n  }\n  return _nullishCoalesce(getName(ethereum), () => ( \"Injected\"));\n}\n\n// src/injected.ts\nvar _provider;\nvar InjectedConnector = class extends _chunkW65LBPLTjs.Connector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      shimDisconnect: true,\n      getProvider() {\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (_optionalChain([ethereum, 'optionalAccess', _3 => _3.providers]))\n          return ethereum.providers[0];\n        return ethereum;\n      },\n      ...options_\n    };\n    super({ chains, options });\n    this.id = \"injected\";\n    _chunkW65LBPLTjs.__privateAdd.call(void 0, this, _provider, void 0);\n    this.shimDisconnectKey = `${this.id}.shimDisconnect`;\n    this.onAccountsChanged = (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", {\n          account: _viem.getAddress.call(void 0, accounts[0])\n        });\n    };\n    this.onChainChanged = (chainId) => {\n      const id = _chunkOQILYQDOjs.normalizeChainId.call(void 0, chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    };\n    this.onDisconnect = async (error) => {\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          const isAuthorized = await this.getAccount();\n          if (isAuthorized)\n            return;\n        }\n      }\n      this.emit(\"disconnect\");\n      if (this.options.shimDisconnect)\n        _optionalChain([this, 'access', _4 => _4.storage, 'optionalAccess', _5 => _5.removeItem, 'call', _6 => _6(this.shimDisconnectKey)]);\n    };\n    const provider = options.getProvider();\n    if (typeof options.name === \"string\")\n      this.name = options.name;\n    else if (provider) {\n      const detectedName = getInjectedName(provider);\n      if (options.name)\n        this.name = options.name(detectedName);\n      else {\n        if (typeof detectedName === \"string\")\n          this.name = detectedName;\n        else\n          this.name = detectedName[0];\n      }\n    } else\n      this.name = \"Injected\";\n    this.ready = !!provider;\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = _viem.getAddress.call(void 0, accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options.shimDisconnect)\n        _optionalChain([this, 'access', _7 => _7.storage, 'optionalAccess', _8 => _8.setItem, 'call', _9 => _9(this.shimDisconnectKey, true)]);\n      return { account, chain: { id, unsupported } };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new (0, _viem.UserRejectedRequestError)(error);\n      if (error.code === -32002)\n        throw new (0, _viem.ResourceUnavailableRpcError)(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    if (!_optionalChain([provider, 'optionalAccess', _10 => _10.removeListener]))\n      return;\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    if (this.options.shimDisconnect)\n      _optionalChain([this, 'access', _11 => _11.storage, 'optionalAccess', _12 => _12.removeItem, 'call', _13 => _13(this.shimDisconnectKey)]);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return _viem.getAddress.call(void 0, accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n    return provider.request({ method: \"eth_chainId\" }).then(_chunkOQILYQDOjs.normalizeChainId);\n  }\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider)\n      _chunkW65LBPLTjs.__privateSet.call(void 0, this, _provider, provider);\n    return _chunkW65LBPLTjs.__privateGet.call(void 0, this, _provider);\n  }\n  async getWalletClient({\n    chainId\n  } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    const chain = this.chains.find((x) => x.id === chainId);\n    if (!provider)\n      throw new Error(\"provider is required.\");\n    return _viem.createWalletClient.call(void 0, {\n      account,\n      chain,\n      transport: _viem.custom.call(void 0, provider)\n    });\n  }\n  async isAuthorized() {\n    try {\n      if (this.options.shimDisconnect && !_optionalChain([this, 'access', _14 => _14.storage, 'optionalAccess', _15 => _15.getItem, 'call', _16 => _16(this.shimDisconnectKey)]))\n        return false;\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n      const account = await this.getAccount();\n      return !!account;\n    } catch (e) {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n    const id = _viem.numberToHex.call(void 0, chainId);\n    try {\n      await Promise.all([\n        provider.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: id }]\n        }),\n        new Promise(\n          (res) => this.on(\"change\", ({ chain }) => {\n            if (_optionalChain([chain, 'optionalAccess', _17 => _17.id]) === chainId)\n              res();\n          })\n        )\n      ]);\n      return _nullishCoalesce(this.chains.find((x) => x.id === chainId), () => ( {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] }, public: { http: [\"\"] } }\n      }));\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new (0, _chunkUGBGYVBHjs.ChainNotConfiguredForConnectorError)({\n          chainId,\n          connectorId: this.id\n        });\n      if (error.code === 4902 || _optionalChain([error, 'optionalAccess', _18 => _18.data, 'optionalAccess', _19 => _19.originalError, 'optionalAccess', _20 => _20.code]) === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [_nullishCoalesce(_optionalChain([chain, 'access', _21 => _21.rpcUrls, 'access', _22 => _22.public, 'optionalAccess', _23 => _23.http, 'access', _24 => _24[0]]), () => ( \"\"))],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          const currentChainId = await this.getChainId();\n          if (currentChainId !== chainId)\n            throw new (0, _viem.UserRejectedRequestError)(\n              new Error(\"User rejected switch after adding network.\")\n            );\n          return chain;\n        } catch (error2) {\n          throw new (0, _viem.UserRejectedRequestError)(error2);\n        }\n      }\n      if (this.isUserRejectedRequestError(error))\n        throw new (0, _viem.UserRejectedRequestError)(error);\n      throw new (0, _viem.SwitchChainError)(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    if (!provider)\n      throw new (0, _chunkUGBGYVBHjs.ConnectorNotFoundError)();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n};\n_provider = new WeakMap();\n\n\n\nexports.InjectedConnector = InjectedConnector;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\nvar _chunk2UFLHRLTjs = require('./chunk-2UFLHRLT.js');\nrequire('./chunk-UGBGYVBH.js');\nrequire('./chunk-OQILYQDO.js');\nrequire('./chunk-W65LBPLT.js');\n\n\nexports.InjectedConnector = _chunk2UFLHRLTjs.InjectedConnector;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/connectors/index.ts\nvar _connectors = require('@wagmi/connectors');\nvar _injected = require('@wagmi/connectors/injected');\n\n\n\n\nexports.Connector = _connectors.Connector; exports.InjectedConnector = _injected.InjectedConnector;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n\n\n\n\n\nexports.__privateGet = __privateGet; exports.__privateAdd = __privateAdd; exports.__privateSet = __privateSet; exports.__privateMethod = __privateMethod;\n", "const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : process.env.NODE_ENV !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if (process.env.NODE_ENV !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if (process.env.NODE_ENV !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n", "function shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nvar shallow$1 = (objA, objB) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow(objA, objB);\n};\n\nexport { shallow$1 as default, shallow };\n", "'use strict';\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\n// created 2023-07-20T07:23:23.727Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 4aab629147f0d7e715ffac2cd3e2fcd0e6922ee059b78d717c265540d3bf5768\nvar r$1 = read_compressed_payload('');\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-07-20T07:23:23.727Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar r = read_compressed_payload('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');\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nconst SHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\nconst EXCLUSIONS = new Set(read_sorted(r));\r\nconst DECOMP = new Map();\r\nconst RECOMP = new Map();\r\nfor (let [cp, cps] of read_mapped(r)) {\r\n\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\tlet [a, b] = cps;\r\n\t\tlet bucket = RECOMP.get(a);\r\n\t\tif (!bucket) {\r\n\t\t\tbucket = new Map();\r\n\t\t\tRECOMP.set(a, bucket);\r\n\t\t}\r\n\t\tbucket.set(b, cp);\r\n\t}\r\n\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n}\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\n//console.time('init');\r\n\r\nconst STOP = 0x2E;\r\nconst FE0F = 0xFE0F;\r\nconst STOP_CH = '.';\r\nconst UNIQUE_PH = 1;\r\nconst HYPHEN = 0x2D;\r\n\r\nfunction read_set() {\r\n\treturn new Set(read_sorted(r$1));\r\n}\r\nconst MAPPED = new Map(read_mapped(r$1)); \r\nconst IGNORED = read_set(); // ignored characters are not valid, so just read raw codepoints\r\n/*\r\n// direct include from payload is smaller that the decompression code\r\nconst FENCED = new Map(read_array_while(() => {\r\n\tlet cp = r();\r\n\tif (cp) return [cp, read_str(r())];\r\n}));\r\n*/\r\n// 20230217: we still need all CM for proper error formatting\r\n// but norm only needs NSM subset that are potentially-valid\r\nconst CM = read_set();\r\nconst NSM = new Set(read_sorted(r$1).map(function(i) { return this[i]; }, [...CM]));\r\n/*\r\nconst CM_SORTED = read_sorted(r);\r\nconst NSM = new Set(read_sorted(r).map(i => CM_SORTED[i]));\r\nconst CM = new Set(CM_SORTED);\r\n*/\r\nconst ESCAPE = read_set(); // characters that should not be printed\r\nconst NFC_CHECK = read_set();\r\nconst CHUNKS = read_sorted_arrays(r$1);\r\nfunction read_chunked() {\r\n\t// deduplicated sets + uniques\r\n\treturn new Set([read_sorted(r$1).map(i => CHUNKS[i]), read_sorted(r$1)].flat(2));\r\n}\r\nconst UNRESTRICTED = r$1();\r\nconst GROUPS = read_array_while(i => {\r\n\t// minifier property mangling seems unsafe\r\n\t// so these are manually renamed to single chars\r\n\tlet N = read_array_while(r$1).map(x => x+0x60);\r\n\tif (N.length) {\r\n\t\tlet R = i >= UNRESTRICTED; // first arent restricted\r\n\t\tN[0] -= 32; // capitalize\r\n\t\tN = str_from_cps(N);\r\n\t\tif (R) N=`Restricted[${N}]`;\r\n\t\tlet P = read_chunked(); // primary\r\n\t\tlet Q = read_chunked(); // secondary\r\n\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t//let M = r()-1; // combining mark\r\n\t\tlet M = !r$1(); // not-whitelisted, check for NSM\r\n\t\t// code currently isn't needed\r\n\t\t/*if (M < 0) { // whitelisted\r\n\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\tlet i = r();\r\n\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t})];\r\n\t\t\t}));\r\n\t\t}*/\r\n\t\treturn {N, P, M, R, V: new Set(V)};\r\n\t}\r\n});\r\nconst WHOLE_VALID = read_set();\r\nconst WHOLE_MAP = new Map();\r\n// decode compressed wholes\r\n[...WHOLE_VALID, ...read_set()].sort((a, b) => a-b).map((cp, i, v) => {\r\n\tlet d = r$1(); \r\n\tlet w = v[i] = d ? v[i-d] : {V: [], M: new Map()};\r\n\tw.V.push(cp); // add to member set\r\n\tif (!WHOLE_VALID.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t}\r\n});\r\n// compute confusable-extent complements\r\nfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t// connect all groups that have each whole character\r\n\tlet recs = [];\r\n\tfor (let cp of V) {\r\n\t\tlet gs = GROUPS.filter(g => g.V.has(cp));\r\n\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\tif (!rec) {\r\n\t\t\trec = {G: new Set(), V: []};\r\n\t\t\trecs.push(rec);\r\n\t\t}\r\n\t\trec.V.push(cp);\r\n\t\tgs.forEach(g => rec.G.add(g));\r\n\t}\r\n\t// per character cache groups which are not a member of the extent\r\n\tlet union = recs.flatMap(({G}) => [...G]);\r\n\tfor (let {G, V} of recs) {\r\n\t\tlet complement = new Set(union.filter(g => !G.has(g)));\r\n\t\tfor (let cp of V) {\r\n\t\t\tM.set(cp, complement);\r\n\t\t}\r\n\t}\r\n}\r\nlet union = new Set(); // exists in 1+ groups\r\nlet multi = new Set(); // exists in 2+ groups\r\nfor (let g of GROUPS) {\r\n\tfor (let cp of g.V) {\r\n\t\t(union.has(cp) ? multi : union).add(cp);\r\n\t}\r\n}\r\n// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\nfor (let cp of union) {\r\n\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t}\r\n}\r\nconst VALID = new Set([...union, ...nfd(union)]); // possibly valid\r\n\r\n// decode emoji\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n// 20230719: emoji are now fully-expanded to avoid quirk logic \r\nconst EMOJI_LIST = read_trie(r$1).map(v => Emoji.from(v)).sort(compare_arrays);\r\nconst EMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\nfor (let cps of EMOJI_LIST) {\r\n\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t// example: beautified [A B] (eg. flag emoji) \r\n\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t//   after: error: both\r\n\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\tlet prev = [EMOJI_ROOT];\r\n\tfor (let cp of cps) {\r\n\t\tlet next = prev.map(node => {\r\n\t\t\tlet child = node.get(cp);\r\n\t\t\tif (!child) {\r\n\t\t\t\t// should this be object? \r\n\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\tchild = new Map();\r\n\t\t\t\tnode.set(cp, child);\r\n\t\t\t}\r\n\t\t\treturn child;\r\n\t\t});\r\n\t\tif (cp === FE0F) {\r\n\t\t\tprev.push(...next);\r\n\t\t} else {\r\n\t\t\tprev = next;\r\n\t\t}\r\n\t}\r\n\tfor (let x of prev) {\r\n\t\tx.V = cps;\r\n\t}\r\n}\r\n//console.timeEnd('init');\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('\u25CC');\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`);\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\nfunction is_combining_mark(cp) {\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(process(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"\u2010\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// \u03BE => \u039E if not greek\r\n\t\tif (type !== 'Greek') { \r\n\t\t\tlet prev = 0;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet next = output.indexOf(0x3BE, prev);\r\n\t\t\t\tif (next < 0) break;\r\n\t\t\t\toutput[next] = 0x39E; \r\n\t\t\t\tprev = next + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\tlet norm;\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = process(input, nf, ef); // if we parse, we get [norm and mapped]\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} else {\r\n\t\t\t\tnorm = tokens.flat();\r\n\t\t\t\tcheck_leading_underscore(norm);\r\n\t\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji;\r\n\t\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t\t// only needed for ascii\r\n\t\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\t\tcheck_label_extension(norm);\r\n\t\t\t\t\t// cant have fenced\r\n\t\t\t\t\t// cant have cm\r\n\t\t\t\t\t// cant have wholes\r\n\t\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\t\ttype = 'ASCII';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 5. \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\t\tlet unique = [...new Set(chars)];\r\n\t\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\tinfo.output = norm;\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : [...set];\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaning groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => g.V.has(cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => g.V.has(cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => g.V.has(cp))) { \r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp));\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tlet {V, M} = g;\r\n\tfor (let cp of cps) {\r\n\t\tif (!V.has(cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.V].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc\uD83D\uDCA9d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\nfunction process(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps);\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\t\t\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI, \r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten, \r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexports.ens_beautify = ens_beautify;\nexports.ens_emoji = ens_emoji;\nexports.ens_normalize = ens_normalize;\nexports.ens_normalize_fragment = ens_normalize_fragment;\nexports.ens_split = ens_split;\nexports.ens_tokenize = ens_tokenize;\nexports.is_combining_mark = is_combining_mark;\nexports.nfc = nfc;\nexports.nfd = nfd;\nexports.safe_str_from_cps = safe_str_from_cps;\nexports.should_escape = should_escape;\n", "import { ens_normalize } from '@adraffy/ens-normalize'\n\n/**\n * @description Normalizes ENS name according to ENSIP-15.\n *\n * @example\n * normalize('wagmi-dev.eth')\n * 'wagmi-dev.eth'\n *\n * @see https://docs.ens.domains/contract-api-reference/name-processing#normalising-names\n * @see https://github.com/ensdomains/docs/blob/9edf9443de4333a0ea7ec658a870672d5d180d53/ens-improvement-proposals/ensip-15-normalization-standard.md\n */\nexport function normalize(name: string) {\n  return ens_normalize(name)\n}\n", "export { normalize } from '../utils/ens/normalize.js'\nexport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../actions/ens/getEnsAddress.js'\nexport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../actions/ens/getEnsAvatar.js'\nexport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../actions/ens/getEnsName.js'\nexport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../actions/ens/getEnsResolver.js'\nexport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../actions/ens/getEnsText.js'\nexport { labelhash } from '../utils/ens/labelhash.js'\nexport { namehash } from '../utils/ens/namehash.js'\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } async function _asyncNullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return await rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n\nvar _chunkBVC4KGLQjs = require('./chunk-BVC4KGLQ.js');\n\n\n\n\n\nvar _chunkMQXBDTVKjs = require('./chunk-MQXBDTVK.js');\n\n// src/utils/configureChains.ts\nvar _viem = require('viem');\nfunction configureChains(defaultChains, providers, {\n  batch = { multicall: { wait: 32 } },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [\n        ...httpUrls[chain.id] || [],\n        ...apiConfig.rpcUrls.http\n      ];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [\n          ...wsUrls[chain.id] || [],\n          ...apiConfig.rpcUrls.webSocket\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    publicClient: ({ chainId }) => {\n      const activeChain = _nullishCoalesce(chains.find((x) => x.id === chainId), () => ( defaultChains[0]));\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = _viem.createPublicClient.call(void 0, {\n        batch,\n        chain: activeChain,\n        transport: _viem.fallback.call(void 0, \n          chainHttpUrls.map((url) => _viem.http.call(void 0, url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({ chainId }) => {\n      const activeChain = _nullishCoalesce(chains.find((x) => x.id === chainId), () => ( defaultChains[0]));\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0])\n        return void 0;\n      const publicClient = _viem.createPublicClient.call(void 0, {\n        batch,\n        chain: activeChain,\n        transport: _viem.fallback.call(void 0, \n          chainWsUrls.map((url) => _viem.webSocket.call(void 0, url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nvar _connectors = require('@wagmi/connectors');\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(\n      `Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`\n    );\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: (data) => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: (data) => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\n\nfunction getUnit(unit) {\n  if (typeof unit === \"number\")\n    return unit;\n  if (unit === \"wei\")\n    return 0;\n  return Math.abs(_viem.weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n      return _optionalChain([replacer, 'optionalCall', _2 => _2(key, value2)]) || value2;\n    }, circularReplacer),\n    _nullishCoalesce(indent, () => ( void 0))\n  );\n}\n\n// src/config.ts\nvar _middleware = require('zustand/middleware');\nvar _vanilla = require('zustand/vanilla');\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new (0, _chunkBVC4KGLQjs.InjectedConnector)()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    _chunkMQXBDTVKjs.__privateAdd.call(void 0, this, _addEffects);\n    this.publicClients = /* @__PURE__ */ new Map();\n    this.webSocketPublicClients = /* @__PURE__ */ new Map();\n    _chunkMQXBDTVKjs.__privateAdd.call(void 0, this, _isAutoConnecting, void 0);\n    _chunkMQXBDTVKjs.__privateAdd.call(void 0, this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = _optionalChain([rawState, 'optionalAccess', _3 => _3.state, 'optionalAccess', _4 => _4.data]);\n        status = _optionalChain([data, 'optionalAccess', _5 => _5.account]) ? \"reconnecting\" : \"connecting\";\n        chainId = _optionalChain([data, 'optionalAccess', _6 => _6.chain, 'optionalAccess', _7 => _7.id]);\n      } catch (_error) {\n      }\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(storage));\n    this.store = _vanilla.createStore.call(void 0, \n      _middleware.subscribeWithSelector.call(void 0, \n        _middleware.persist.call(void 0, \n          () => ({\n            connectors: connectors_,\n            publicClient: this.getPublicClient({ chainId }),\n            status,\n            webSocketPublicClient: this.getWebSocketPublicClient({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: _optionalChain([state, 'optionalAccess', _8 => _8.data, 'optionalAccess', _9 => _9.account]),\n                  chain: _optionalChain([state, 'optionalAccess', _10 => _10.data, 'optionalAccess', _11 => _11.chain])\n                }\n              },\n              chains: _optionalChain([state, 'optionalAccess', _12 => _12.chains])\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    _chunkMQXBDTVKjs.__privateSet.call(void 0, this, _lastUsedConnector, _optionalChain([storage, 'optionalAccess', _13 => _13.getItem, 'call', _14 => _14(\"wallet\")]));\n    _chunkMQXBDTVKjs.__privateMethod.call(void 0, this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return _optionalChain([this, 'access', _15 => _15.data, 'optionalAccess', _16 => _16.chain, 'optionalAccess', _17 => _17.id]);\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await _optionalChain([this, 'access', _18 => _18.connector, 'access', _19 => _19.disconnect, 'optionalCall', _20 => _20()]);\n    _chunkMQXBDTVKjs.__privateSet.call(void 0, this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (_chunkMQXBDTVKjs.__privateGet.call(void 0, this, _isAutoConnecting))\n      return;\n    _chunkMQXBDTVKjs.__privateSet.call(void 0, this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: _optionalChain([x, 'access', _21 => _21.data, 'optionalAccess', _22 => _22.account]) ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = _chunkMQXBDTVKjs.__privateGet.call(void 0, this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === _chunkMQXBDTVKjs.__privateGet.call(void 0, this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: _optionalChain([connector, 'optionalAccess', _23 => _23.chains]),\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    _chunkMQXBDTVKjs.__privateSet.call(void 0, this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(this.args.storage));\n    this.setState((x) => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({ chainId } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && _optionalChain([publicClient_, 'optionalAccess', _24 => _24.chain, 'access', _25 => _25.id]) === chainId)\n      return publicClient_;\n    publicClient_ = this.publicClients.get(_nullishCoalesce(chainId, () => ( -1)));\n    if (publicClient_)\n      return publicClient_;\n    const { publicClient } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({ chainId }) : publicClient;\n    this.publicClients.set(_nullishCoalesce(chainId, () => ( -1)), publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = _optionalChain([this, 'access', _26 => _26.data, 'optionalAccess', _27 => _27.chain, 'optionalAccess', _28 => _28.id]);\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      publicClient: this.getPublicClient({ chainId })\n    }));\n  }\n  getWebSocketPublicClient({ chainId } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && _optionalChain([webSocketPublicClient_, 'optionalAccess', _29 => _29.chain, 'access', _30 => _30.id]) === chainId)\n      return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(_nullishCoalesce(chainId, () => ( -1)));\n    if (webSocketPublicClient_)\n      return webSocketPublicClient_;\n    const { webSocketPublicClient } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({ chainId }) : webSocketPublicClient;\n    if (webSocketPublicClient_)\n      this.webSocketPublicClients.set(_nullishCoalesce(chainId, () => ( -1)), webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = _optionalChain([this, 'access', _31 => _31.data, 'optionalAccess', _32 => _32.chain, 'optionalAccess', _33 => _33.id]);\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    _optionalChain([this, 'access', _34 => _34.storage, 'optionalAccess', _35 => _35.setItem, 'call', _36 => _36(\"wallet\", lastUsedConnector)]);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      _optionalChain([prevConnector, 'optionalAccess', _37 => _37.off, 'optionalCall', _38 => _38(\"change\", onChange)]);\n      _optionalChain([prevConnector, 'optionalAccess', _39 => _39.off, 'optionalCall', _40 => _40(\"disconnect\", onDisconnect)]);\n      _optionalChain([prevConnector, 'optionalAccess', _41 => _41.off, 'optionalCall', _42 => _42(\"error\", onError)]);\n      if (!connector)\n        return;\n      _optionalChain([connector, 'access', _43 => _43.on, 'optionalCall', _44 => _44(\"change\", onChange)]);\n      _optionalChain([connector, 'access', _45 => _45.on, 'optionalCall', _46 => _46(\"disconnect\", onDisconnect)]);\n      _optionalChain([connector, 'access', _47 => _47.on, 'optionalCall', _48 => _48(\"error\", onError)]);\n    }\n  );\n  const { publicClient, webSocketPublicClient } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient)\n    this.store.subscribe(\n      ({ data }) => _optionalChain([data, 'optionalAccess', _49 => _49.chain, 'optionalAccess', _50 => _50.id]),\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          publicClient: this.getPublicClient({ chainId }),\n          webSocketPublicClient: this.getWebSocketPublicClient({\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\n      \"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\"\n    );\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({ chainId, connector }) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState((x) => ({\n      ...x,\n      connector,\n      chains: _optionalChain([connector, 'optionalAccess', _51 => _51.chains]),\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    config2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector)\n    await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\n\n\n\n\n\n\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/actions/contracts/fetchToken.ts\n\n\n\n\n\n\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: _viem.formatUnits.call(void 0, totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof _viem.ContractFunctionExecutionError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: _viem.hexToString.call(void 0, _viem.trim.call(void 0, name, { dir: \"right\" })),\n        symbol: _viem.hexToString.call(void 0, _viem.trim.call(void 0, symbol, { dir: \"right\" })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({ chainId } = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getPublicClient({ chainId }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = await _optionalChain([config2, 'access', _52 => _52.connector, 'optionalAccess', _53 => _53.getWalletClient, 'optionalCall', _54 => _54({ chainId })]) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getWebSocketPublicClient({ chainId }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nvar _shallow = require('zustand/shallow');\nfunction watchWalletClient({ chainId }, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({ chainId: chainId_ }) => {\n    if (chainId && chainId_ && chainId !== chainId_)\n      return;\n    const walletClient = await getWalletClient({ chainId });\n    if (!getConfig().connector)\n      return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(\n    ({ data, connector }) => ({\n      account: _optionalChain([data, 'optionalAccess', _55 => _55.account]),\n      chainId: _optionalChain([data, 'optionalAccess', _56 => _56.chain, 'optionalAccess', _57 => _57.id]),\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: _shallow.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ webSocketPublicClient }) => webSocketPublicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = await _asyncNullishCoalesce(walletClient_, async () => ( await getWalletClient({ chainId })));\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const { result, request } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(\n    (abiItem) => \"name\" in abiItem && abiItem.name === functionName\n  );\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\n\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return _viem.getContract.call(void 0, {\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({ chainId });\n  if (!publicClient.chains)\n    throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId)\n    throw new ChainNotConfiguredError({ chainId });\n  return publicClient.multicall({\n    allowFailure: _nullishCoalesce(args.allowFailure, () => ( true)),\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\n\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const { allowFailure = true } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = _nullishCoalesce(contract.chainId, () => ( publicClient.chain.id));\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(\n          ({ contract }) => contract\n        ),\n        blockNumber,\n        blockTag\n      })\n    );\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(\n      (contracts2) => contracts2.map(({ index }) => index)\n    );\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof _viem.ContractFunctionExecutionError)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, blockNumber, blockTag })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return { result: result.value, status: \"success\" };\n        return { error: result.reason, result: void 0, status: \"failure\" };\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\n\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch)\n      unwatch();\n    const publicClient = getWebSocketPublicClient({ chainId }) || getPublicClient({ chainId });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    watchEvent,\n    { equalityFn: _shallow.shallow }\n  );\n  return () => {\n    _optionalChain([unwatch, 'optionalCall', _58 => _58()]);\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\n\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = _nullishCoalesce(getWebSocketPublicClient({ chainId: args.chainId }), () => ( getPublicClient({ chainId: args.chainId })));\n  if (args.listen)\n    createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = _nullishCoalesce(webSocketPublicClient, () => ( publicClient));\n      if (args.listen && !args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: _shallow.shallow\n    }\n  );\n  return () => {\n    unsubscribe();\n    _optionalChain([unwatch, 'optionalCall', _59 => _59()]);\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    _optionalChain([unwatch, 'optionalCall', _60 => _60()]);\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    _optionalChain([unwatch, 'optionalCall', _61 => _61()]);\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    _optionalChain([unwatch, 'optionalCall', _62 => _62()]);\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({ chainId: config2.chainId });\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  if (config2.chainId)\n    assertActiveChain({ chainId: config2.chainId });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const { chainId: _, mode: __, ...args } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: null\n  });\n  return { hash };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: _viem.formatUnits.call(void 0, _nullishCoalesce(value2, () => ( \"0\")), getUnit(_nullishCoalesce(unit, () => ( decimals)))),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof _viem.ContractFunctionExecutionError) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: _viem.hexToString.call(void 0, _viem.trim.call(void 0, symbol, { dir: \"right\" })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [\n    ...config2.publicClient.chains || [],\n    ..._nullishCoalesce(config2.chains, () => ( []))\n  ];\n  const value = await publicClient.getBalance({ address });\n  const chain = chains.find((x) => x.id === publicClient.chain.id);\n  return {\n    decimals: _nullishCoalesce(_optionalChain([chain, 'optionalAccess', _63 => _63.nativeCurrency, 'access', _64 => _64.decimals]), () => ( 18)),\n    formatted: _viem.formatUnits.call(void 0, _nullishCoalesce(value, () => ( \"0\")), getUnit(_nullishCoalesce(unit, () => ( 18)))),\n    symbol: _nullishCoalesce(_optionalChain([chain, 'optionalAccess', _65 => _65.nativeCurrency, 'access', _66 => _66.symbol]), () => ( \"ETH\")),\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: _optionalChain([data, 'optionalAccess', _67 => _67.account]),\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: _optionalChain([data, 'optionalAccess', _68 => _68.account]),\n        connector,\n        isConnected: !!_optionalChain([data, 'optionalAccess', _69 => _69.account]),\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: _optionalChain([data, 'optionalAccess', _70 => _70.account]),\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = _optionalChain([config2, 'access', _71 => _71.data, 'optionalAccess', _72 => _72.chain, 'optionalAccess', _73 => _73.id]);\n  const activeChains = _nullishCoalesce(config2.chains, () => ( []));\n  const activeChain = _nullishCoalesce([\n    ..._optionalChain([config2, 'access', _74 => _74.publicClient, 'optionalAccess', _75 => _75.chains]) || [],\n    ...activeChains\n  ].find((x) => x.id === chainId), () => ( {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  }));\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ..._optionalChain([config2, 'access', _76 => _76.data, 'optionalAccess', _77 => _77.chain]),\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  const { chainId } = domain;\n  if (chainId)\n    assertActiveChain({ chainId });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getConfig();\n  if (!connector)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\n\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: _optionalChain([data, 'optionalAccess', _78 => _78.account]),\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: _shallow.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\n\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(\n    ({ data, chains }) => selector({ chainId: _optionalChain([data, 'optionalAccess', _79 => _79.chain, 'optionalAccess', _80 => _80.id]), chains }),\n    handleChange,\n    {\n      equalityFn: _shallow.shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\n\nvar _ens = require('viem/ens');\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const address = await publicClient.getEnsAddress({\n    name: _ens.normalize.call(void 0, name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\")\n      return null;\n    return address ? _viem.getAddress.call(void 0, address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\n\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const avatar = await publicClient.getEnsAvatar({ name: _ens.normalize.call(void 0, name) });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\n\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getEnsName({\n    address: _viem.getAddress.call(void 0, address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\n\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const resolver = await publicClient.getEnsResolver({ name: _ens.normalize.call(void 0, name) });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\n\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch (e) {\n  }\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (_optionalChain([block, 'optionalAccess', _81 => _81.baseFeePerGas])) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = _viem.parseGwei.call(void 0, \"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? _viem.formatUnits.call(void 0, gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? _viem.formatUnits.call(void 0, maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? _viem.formatUnits.call(void 0, maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getTransaction({ hash });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\n\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = await _asyncNullishCoalesce(walletClient_, async () => ( await getWalletClient({ chainId })));\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const to = (to_ && !_viem.isAddress.call(void 0, to_) ? await fetchEnsAddress({ name: to_ }) : to_) || void 0;\n  if (to && !_viem.isAddress.call(void 0, to))\n    throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: _nullishCoalesce(gas_, () => ( void 0)),\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...chainId ? { chainId } : {}\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new (0, _connectors.ConnectorNotFoundError)();\n  if (chainId)\n    assertActiveChain({ chainId });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({ ...args, chain: null });\n  return { hash };\n}\n\n// src/actions/transactions/waitForTransaction.ts\n\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = _viem.hexToString.call(void 0, `0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\n\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = _nullishCoalesce(getWebSocketPublicClient({ chainId: args.chainId }), () => ( getPublicClient({ chainId: args.chainId })));\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = _nullishCoalesce(webSocketPublicClient, () => ( publicClient));\n      if (!args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: _shallow.shallow\n    }\n  );\n  return () => {\n    unsubscribe();\n    _optionalChain([unwatch, 'optionalCall', _82 => _82()]);\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({ chainId }) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = _optionalChain([activeChain, 'optionalAccess', _83 => _83.id]);\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: _nullishCoalesce(_optionalChain([chains, 'access', _84 => _84.find, 'call', _85 => _85((x) => x.id === activeChainId), 'optionalAccess', _86 => _86.name]), () => ( `Chain ${activeChainId}`)),\n      targetChain: _nullishCoalesce(_optionalChain([chains, 'access', _87 => _87.find, 'call', _88 => _88((x) => x.id === chainId), 'optionalAccess', _89 => _89.name]), () => ( `Chain ${chainId}`))\n    });\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.configureChains = configureChains; exports.ChainMismatchError = ChainMismatchError; exports.ChainNotConfiguredError = ChainNotConfiguredError; exports.ConnectorAlreadyConnectedError = ConnectorAlreadyConnectedError; exports.ConfigChainsNotFound = ConfigChainsNotFound; exports.SwitchChainNotSupportedError = SwitchChainNotSupportedError; exports.ConnectorNotFoundError = _connectors.ConnectorNotFoundError; exports.deepEqual = deepEqual; exports.deserialize = deserialize; exports.getCallParameters = getCallParameters; exports.getSendTransactionParameters = getSendTransactionParameters; exports.getUnit = getUnit; exports.serialize = serialize; exports.noopStorage = noopStorage; exports.createStorage = createStorage; exports.Config = Config; exports.createConfig = createConfig; exports.getConfig = getConfig; exports.connect = connect; exports.disconnect = disconnect; exports.erc20ABI = erc20ABI; exports.erc721ABI = erc721ABI; exports.erc4626ABI = erc4626ABI; exports.fetchToken = fetchToken; exports.getPublicClient = getPublicClient; exports.getWalletClient = getWalletClient; exports.getWebSocketPublicClient = getWebSocketPublicClient; exports.watchPublicClient = watchPublicClient; exports.watchWalletClient = watchWalletClient; exports.watchWebSocketPublicClient = watchWebSocketPublicClient; exports.prepareWriteContract = prepareWriteContract; exports.getContract = getContract; exports.multicall = multicall; exports.readContract = readContract; exports.readContracts = readContracts; exports.watchContractEvent = watchContractEvent; exports.watchBlockNumber = watchBlockNumber; exports.watchMulticall = watchMulticall; exports.watchReadContract = watchReadContract; exports.watchReadContracts = watchReadContracts; exports.writeContract = writeContract; exports.fetchBalance = fetchBalance; exports.getAccount = getAccount; exports.getNetwork = getNetwork; exports.signMessage = signMessage; exports.signTypedData = signTypedData; exports.switchNetwork = switchNetwork; exports.watchAccount = watchAccount; exports.watchNetwork = watchNetwork; exports.fetchEnsAddress = fetchEnsAddress; exports.fetchEnsAvatar = fetchEnsAvatar; exports.fetchEnsName = fetchEnsName; exports.fetchEnsResolver = fetchEnsResolver; exports.fetchBlockNumber = fetchBlockNumber; exports.fetchFeeData = fetchFeeData; exports.fetchTransaction = fetchTransaction; exports.prepareSendTransaction = prepareSendTransaction; exports.sendTransaction = sendTransaction; exports.waitForTransaction = waitForTransaction; exports.watchPendingTransactions = watchPendingTransactions;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});// src/connectors/injected.ts\nvar _injected = require('@wagmi/connectors/injected');\n\n\n\nexports.InjectedConnector = _injected.InjectedConnector;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunk4E64EZ7Vjs = require('./chunk-4E64EZ7V.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chunkLAFZBYO7js = require('./chunk-LAFZBYO7.js');\n\n\nvar _chunkBVC4KGLQjs = require('./chunk-BVC4KGLQ.js');\n\n\nvar _chunkEQOEZP46js = require('./chunk-EQOEZP46.js');\nrequire('./chunk-MQXBDTVK.js');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.ChainMismatchError = _chunkLAFZBYO7js.ChainMismatchError; exports.ChainNotConfiguredError = _chunkLAFZBYO7js.ChainNotConfiguredError; exports.Config = _chunkLAFZBYO7js.Config; exports.ConfigChainsNotFound = _chunkLAFZBYO7js.ConfigChainsNotFound; exports.Connector = _chunkBVC4KGLQjs.Connector; exports.ConnectorAlreadyConnectedError = _chunkLAFZBYO7js.ConnectorAlreadyConnectedError; exports.ConnectorNotFoundError = _chunkLAFZBYO7js.ConnectorNotFoundError; exports.InjectedConnector = _chunkEQOEZP46js.InjectedConnector; exports.SwitchChainNotSupportedError = _chunkLAFZBYO7js.SwitchChainNotSupportedError; exports.configureChains = _chunkLAFZBYO7js.configureChains; exports.connect = _chunkLAFZBYO7js.connect; exports.createConfig = _chunkLAFZBYO7js.createConfig; exports.createStorage = _chunkLAFZBYO7js.createStorage; exports.deepEqual = _chunkLAFZBYO7js.deepEqual; exports.deserialize = _chunkLAFZBYO7js.deserialize; exports.disconnect = _chunkLAFZBYO7js.disconnect; exports.erc20ABI = _chunkLAFZBYO7js.erc20ABI; exports.erc4626ABI = _chunkLAFZBYO7js.erc4626ABI; exports.erc721ABI = _chunkLAFZBYO7js.erc721ABI; exports.fetchBalance = _chunkLAFZBYO7js.fetchBalance; exports.fetchBlockNumber = _chunkLAFZBYO7js.fetchBlockNumber; exports.fetchEnsAddress = _chunkLAFZBYO7js.fetchEnsAddress; exports.fetchEnsAvatar = _chunkLAFZBYO7js.fetchEnsAvatar; exports.fetchEnsName = _chunkLAFZBYO7js.fetchEnsName; exports.fetchEnsResolver = _chunkLAFZBYO7js.fetchEnsResolver; exports.fetchFeeData = _chunkLAFZBYO7js.fetchFeeData; exports.fetchToken = _chunkLAFZBYO7js.fetchToken; exports.fetchTransaction = _chunkLAFZBYO7js.fetchTransaction; exports.getAccount = _chunkLAFZBYO7js.getAccount; exports.getConfig = _chunkLAFZBYO7js.getConfig; exports.getContract = _chunkLAFZBYO7js.getContract; exports.getNetwork = _chunkLAFZBYO7js.getNetwork; exports.getPublicClient = _chunkLAFZBYO7js.getPublicClient; exports.getUnit = _chunkLAFZBYO7js.getUnit; exports.getWalletClient = _chunkLAFZBYO7js.getWalletClient; exports.getWebSocketPublicClient = _chunkLAFZBYO7js.getWebSocketPublicClient; exports.mainnet = _chunk4E64EZ7Vjs.mainnet; exports.multicall = _chunkLAFZBYO7js.multicall; exports.noopStorage = _chunkLAFZBYO7js.noopStorage; exports.prepareSendTransaction = _chunkLAFZBYO7js.prepareSendTransaction; exports.prepareWriteContract = _chunkLAFZBYO7js.prepareWriteContract; exports.readContract = _chunkLAFZBYO7js.readContract; exports.readContracts = _chunkLAFZBYO7js.readContracts; exports.sendTransaction = _chunkLAFZBYO7js.sendTransaction; exports.sepolia = _chunk4E64EZ7Vjs.sepolia; exports.serialize = _chunkLAFZBYO7js.serialize; exports.signMessage = _chunkLAFZBYO7js.signMessage; exports.signTypedData = _chunkLAFZBYO7js.signTypedData; exports.switchNetwork = _chunkLAFZBYO7js.switchNetwork; exports.waitForTransaction = _chunkLAFZBYO7js.waitForTransaction; exports.watchAccount = _chunkLAFZBYO7js.watchAccount; exports.watchBlockNumber = _chunkLAFZBYO7js.watchBlockNumber; exports.watchContractEvent = _chunkLAFZBYO7js.watchContractEvent; exports.watchMulticall = _chunkLAFZBYO7js.watchMulticall; exports.watchNetwork = _chunkLAFZBYO7js.watchNetwork; exports.watchPendingTransactions = _chunkLAFZBYO7js.watchPendingTransactions; exports.watchPublicClient = _chunkLAFZBYO7js.watchPublicClient; exports.watchReadContract = _chunkLAFZBYO7js.watchReadContract; exports.watchReadContracts = _chunkLAFZBYO7js.watchReadContracts; exports.watchWalletClient = _chunkLAFZBYO7js.watchWalletClient; exports.watchWebSocketPublicClient = _chunkLAFZBYO7js.watchWebSocketPublicClient; exports.writeContract = _chunkLAFZBYO7js.writeContract;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true});\n\n\nvar _chunkLAFZBYO7js = require('../chunk-LAFZBYO7.js');\nrequire('../chunk-BVC4KGLQ.js');\nrequire('../chunk-MQXBDTVK.js');\n\n\n\nexports.getCallParameters = _chunkLAFZBYO7js.getCallParameters; exports.getSendTransactionParameters = _chunkLAFZBYO7js.getSendTransactionParameters;\n", "\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } async function _asyncNullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return await rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\"use client\";\n\n// src/config.ts\nvar _querysyncstoragepersister = require('@tanstack/query-sync-storage-persister');\nvar _reactquery = require('@tanstack/react-query');\nvar _reactquerypersistclient = require('@tanstack/react-query-persist-client');\n\n\n\n\nvar _core = require('@wagmi/core');\nfunction createConfig({\n  queryClient = new (0, _reactquery.QueryClient)({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1e3 * 60 * 60 * 24,\n        networkMode: \"offlineFirst\",\n        refetchOnWindowFocus: false,\n        retry: 0\n      },\n      mutations: {\n        networkMode: \"offlineFirst\"\n      }\n    }\n  }),\n  storage = _core.createStorage.call(void 0, {\n    storage: typeof window !== \"undefined\" && window.localStorage ? window.localStorage : _core.noopStorage\n  }),\n  persister = typeof window !== \"undefined\" ? _querysyncstoragepersister.createSyncStoragePersister.call(void 0, {\n    key: \"cache\",\n    storage,\n    serialize: (x) => x,\n    deserialize: (x) => x\n  }) : void 0,\n  ...args\n}) {\n  const config = _core.createConfig.call(void 0, {\n    ...args,\n    storage\n  });\n  if (persister)\n    _reactquerypersistclient.persistQueryClient.call(void 0, {\n      queryClient,\n      persister,\n      dehydrateOptions: {\n        shouldDehydrateQuery: (query) => query.cacheTime !== 0 && query.queryKey[0].persist !== false\n      }\n    });\n  return Object.assign(config, { queryClient });\n}\n\n// src/context.ts\n\nvar _react = require('react'); var React = _interopRequireWildcard(_react); var React9 = _interopRequireWildcard(_react); var React2 = _interopRequireWildcard(_react); var React3 = _interopRequireWildcard(_react); var React4 = _interopRequireWildcard(_react); var React7 = _interopRequireWildcard(_react); var React5 = _interopRequireWildcard(_react); var React6 = _interopRequireWildcard(_react); var React8 = _interopRequireWildcard(_react); var React10 = _interopRequireWildcard(_react); var React11 = _interopRequireWildcard(_react); var React12 = _interopRequireWildcard(_react); var React13 = _interopRequireWildcard(_react); var React14 = _interopRequireWildcard(_react); var React15 = _interopRequireWildcard(_react); var React16 = _interopRequireWildcard(_react); var React17 = _interopRequireWildcard(_react); var React18 = _interopRequireWildcard(_react); var React19 = _interopRequireWildcard(_react); var React20 = _interopRequireWildcard(_react); var React21 = _interopRequireWildcard(_react);\nvar Context = React.createContext(void 0);\nvar queryClientContext = React.createContext(\n  void 0\n);\nfunction WagmiConfig({\n  children,\n  config\n}) {\n  return React.createElement(Context.Provider, {\n    children: React.createElement(_reactquery.QueryClientProvider, {\n      children,\n      client: config.queryClient,\n      context: queryClientContext\n    }),\n    value: config\n  });\n}\nfunction useConfig() {\n  const config = React.useContext(Context);\n  if (!config)\n    throw new Error(\n      [\n        \"`useConfig` must be used within `WagmiConfig`.\\n\",\n        \"Read more: https://wagmi.sh/react/WagmiConfig\"\n      ].join(\"\\n\")\n    );\n  return config;\n}\n\n// src/hooks/accounts/useAccount.ts\n\n\n\n// src/hooks/utils/query/useBaseQuery.ts\n\n\n\n\n\n\n\n\n// src/hooks/utils/useSyncExternalStore.ts\nvar _indexjs = require('use-sync-external-store/shim/index.js'); var pkg = _interopRequireWildcard(_indexjs);\nvar useSyncExternalStore2 = pkg.useSyncExternalStore;\n\n// src/hooks/utils/query/utils.ts\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n  if (typeof arg2 === \"function\") {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 };\n  }\n  return { ...arg2, queryKey: arg1 };\n}\nfunction queryKeyHashFn(queryKey17) {\n  return JSON.stringify(\n    queryKey17,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : typeof val === \"bigint\" ? val.toString() : val\n  );\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  if (typeof _useErrorBoundary === \"function\") {\n    return _useErrorBoundary(...params);\n  }\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach((key) => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\n// src/hooks/utils/query/useBaseQuery.ts\nfunction useBaseQuery(options, Observer) {\n  const queryClient = _reactquery.useQueryClient.call(void 0, { context: options.context });\n  const isRestoring = _reactquery.useIsRestoring.call(void 0, );\n  const errorResetBoundary = _reactquery.useQueryErrorResetBoundary.call(void 0, );\n  const defaultedOptions = queryClient.defaultQueryOptions({\n    ...options,\n    queryKeyHashFn\n  });\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = _reactquery.notifyManager.batchCalls(\n      defaultedOptions.onError\n    );\n  }\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = _reactquery.notifyManager.batchCalls(\n      defaultedOptions.onSuccess\n    );\n  }\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = _reactquery.notifyManager.batchCalls(\n      defaultedOptions.onSettled\n    );\n  }\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n  const [observer] = React2.useState(\n    () => new Observer(\n      queryClient,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore2(\n    React2.useCallback(\n      (onStoreChange) => isRestoring ? () => void 0 : observer.subscribe(_reactquery.notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React2.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React2.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(({ data }) => {\n      _optionalChain([defaultedOptions, 'access', _2 => _2.onSuccess, 'optionalCall', _3 => _3(data)]);\n      _optionalChain([defaultedOptions, 'access', _4 => _4.onSettled, 'optionalCall', _5 => _5(data, null)]);\n    }).catch((error) => {\n      errorResetBoundary.clearReset();\n      _optionalChain([defaultedOptions, 'access', _6 => _6.onError, 'optionalCall', _7 => _7(error)]);\n      _optionalChain([defaultedOptions, 'access', _8 => _8.onSettled, 'optionalCall', _9 => _9(void 0, error)]);\n    });\n  }\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [\n    result.error,\n    observer.getCurrentQuery()\n  ])) {\n    throw result.error;\n  }\n  const status = result.status === \"loading\" && result.fetchStatus === \"idle\" ? \"idle\" : result.status;\n  const isIdle = status === \"idle\";\n  const isLoading = status === \"loading\" && result.fetchStatus === \"fetching\";\n  return {\n    ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\n// src/hooks/utils/query/useInfiniteQuery.ts\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(\n    { context: queryClientContext, ...parsedOptions },\n    _reactquery.InfiniteQueryObserver\n  );\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useMutation.ts\n\n\n\n\nfunction useMutation(arg1, arg2, arg3) {\n  const options = _reactquery.parseMutationArgs.call(void 0, arg1, arg2, arg3);\n  return _reactquery.useMutation.call(void 0, { context: queryClientContext, ...options });\n}\n\n// src/hooks/utils/query/useQuery.ts\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({ context: queryClientContext, ...parsedOptions }, _reactquery.QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useQueryClient.ts\n\nvar useQueryClient2 = () => _reactquery.useQueryClient.call(void 0, { context: queryClientContext });\n\n// src/hooks/viem/usePublicClient.ts\n\nvar _withselectorjs = require('use-sync-external-store/shim/with-selector.js');\nfunction usePublicClient({\n  chainId\n} = {}) {\n  return _withselectorjs.useSyncExternalStoreWithSelector.call(void 0, \n    (cb) => _core.watchPublicClient.call(void 0, { chainId }, cb),\n    () => _core.getPublicClient.call(void 0, { chainId }),\n    () => _core.getPublicClient.call(void 0, { chainId }),\n    (x) => x,\n    (a, b) => a.uid === b.uid\n  );\n}\n\n// src/hooks/viem/useWalletClient.ts\n\n\nfunction queryKey({ chainId }) {\n  return [{ entity: \"walletClient\", chainId, persist: false }];\n}\nfunction queryFn({\n  queryKey: [{ chainId }]\n}) {\n  return _core.getWalletClient.call(void 0, { chainId });\n}\nfunction useWalletClient({\n  chainId: chainId_,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { connector } = useAccount();\n  const chainId = useChainId({ chainId: chainId_ });\n  const walletClientQuery = useQuery(queryKey({ chainId }), queryFn, {\n    cacheTime: 0,\n    enabled: Boolean(connector),\n    staleTime: Infinity,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient2();\n  React3.useEffect(() => {\n    const unwatch = _core.watchWalletClient.call(void 0, { chainId }, (walletClient) => {\n      if (walletClient)\n        queryClient.invalidateQueries(queryKey({ chainId }));\n      else\n        queryClient.removeQueries(queryKey({ chainId }));\n    });\n    return unwatch;\n  }, [queryClient, chainId]);\n  return walletClientQuery;\n}\n\n// src/hooks/viem/useWebSocketPublicClient.ts\n\n\n\n\n\nfunction useWebSocketPublicClient({ chainId } = {}) {\n  return _withselectorjs.useSyncExternalStoreWithSelector.call(void 0, \n    (cb) => _core.watchWebSocketPublicClient.call(void 0, { chainId }, cb),\n    () => _core.getWebSocketPublicClient.call(void 0, { chainId }),\n    () => _core.getWebSocketPublicClient.call(void 0, { chainId }),\n    (x) => x,\n    (a, b) => _optionalChain([a, 'optionalAccess', _10 => _10.uid]) === _optionalChain([b, 'optionalAccess', _11 => _11.uid])\n  );\n}\n\n// src/hooks/utils/useChainId.ts\nfunction useChainId({ chainId } = {}) {\n  const publicClient = usePublicClient({ chainId });\n  return publicClient.chain.id;\n}\n\n// src/hooks/utils/useForceUpdate.ts\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = React4.useReducer((x) => x + 1, 0);\n  return forceUpdate;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\n\n\n// src/hooks/network-status/useBlockNumber.ts\n\n\nfunction queryKey2({ chainId, scopeKey }) {\n  return [{ entity: \"blockNumber\", chainId, scopeKey }];\n}\nfunction queryFn2({\n  queryKey: [{ chainId }]\n}) {\n  return _core.fetchBlockNumber.call(void 0, { chainId });\n}\nfunction useBlockNumber({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  watch = false,\n  onBlock,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const queryClient = useQueryClient2();\n  React5.useEffect(() => {\n    if (!enabled)\n      return;\n    if (!watch && !onBlock)\n      return;\n    const publicClient_ = _nullishCoalesce(webSocketPublicClient, () => ( publicClient));\n    const unwatch = publicClient_.watchBlockNumber({\n      onBlockNumber: (blockNumber) => {\n        if (watch)\n          queryClient.setQueryData(queryKey2({ chainId, scopeKey }), blockNumber);\n        if (onBlock)\n          onBlock(blockNumber);\n      },\n      emitOnBegin: true\n    });\n    return unwatch;\n  }, [\n    chainId,\n    scopeKey,\n    onBlock,\n    publicClient,\n    queryClient,\n    watch,\n    webSocketPublicClient,\n    enabled\n  ]);\n  return useQuery(queryKey2({ scopeKey, chainId }), queryFn2, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/network-status/useFeeData.ts\n\n\nfunction queryKey3({\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"feeData\", chainId, formatUnits, scopeKey }];\n}\nfunction queryFn3({\n  queryKey: [{ chainId, formatUnits }]\n}) {\n  return _core.fetchFeeData.call(void 0, { chainId, formatUnits });\n}\nfunction useFeeData({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits = \"gwei\",\n  scopeKey,\n  staleTime,\n  suspense,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React6.useMemo(\n    () => queryKey3({\n      chainId,\n      formatUnits,\n      scopeKey\n    }),\n    [chainId, formatUnits, scopeKey]\n  );\n  const feeDataQuery = useQuery(queryKey_, queryFn3, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch),\n    queryKey: queryKey_\n  });\n  return feeDataQuery;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nfunction useInvalidateOnBlock({\n  chainId,\n  enabled,\n  queryKey: queryKey17\n}) {\n  const queryClient = useQueryClient2();\n  const onBlock = React7.useCallback(\n    () => queryClient.invalidateQueries({ queryKey: queryKey17 }, { cancelRefetch: false }),\n    [queryClient, queryKey17]\n  );\n  useBlockNumber({\n    chainId,\n    enabled,\n    onBlock: enabled ? onBlock : void 0,\n    scopeKey: enabled ? void 0 : \"idle\"\n  });\n}\n\n// src/hooks/utils/useSyncExternalStoreWithTracked.ts\n\n\n\nvar isPlainObject2 = (obj) => typeof obj === \"object\" && !Array.isArray(obj);\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = _core.deepEqual) {\n  const trackedKeys = React8.useRef([]);\n  const result = _withselectorjs.useSyncExternalStoreWithSelector.call(void 0, \n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject2(a) && isPlainObject2(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            a[key],\n            b[key]\n          );\n          if (!equal)\n            return false;\n        }\n        return true;\n      }\n      return isEqual(a, b);\n    }\n  );\n  if (isPlainObject2(result)) {\n    const trackedResult = { ...result };\n    Object.defineProperties(\n      trackedResult,\n      Object.entries(trackedResult).reduce(\n        (res, [key, value]) => {\n          return {\n            ...res,\n            [key]: {\n              configurable: false,\n              enumerable: true,\n              get: () => {\n                if (!trackedKeys.current.includes(key)) {\n                  trackedKeys.current.push(key);\n                }\n                return value;\n              }\n            }\n          };\n        },\n        {}\n      )\n    );\n    return trackedResult;\n  }\n  return result;\n}\n\n// src/hooks/accounts/useAccount.ts\nfunction useAccount({ onConnect, onDisconnect } = {}) {\n  const config = useConfig();\n  const watchAccount_ = React9.useCallback(\n    (callback) => _core.watchAccount.call(void 0, callback),\n    [config]\n  );\n  const account = useSyncExternalStoreWithTracked(watchAccount_, _core.getAccount);\n  const previousAccountRef = React9.useRef();\n  const previousAccount = previousAccountRef.current;\n  React9.useEffect(() => {\n    if (_optionalChain([previousAccount, 'optionalAccess', _12 => _12.status]) !== \"connected\" && account.status === \"connected\") {\n      _optionalChain([onConnect, 'optionalCall', _13 => _13({\n        address: account.address,\n        connector: account.connector,\n        isReconnected: _optionalChain([previousAccount, 'optionalAccess', _14 => _14.status]) === \"reconnecting\" || _optionalChain([previousAccount, 'optionalAccess', _15 => _15.status]) === void 0\n      })]);\n    }\n    if (_optionalChain([previousAccount, 'optionalAccess', _16 => _16.status]) === \"connected\" && account.status === \"disconnected\") {\n      _optionalChain([onDisconnect, 'optionalCall', _17 => _17()]);\n    }\n    previousAccountRef.current = account;\n  }, [onConnect, onDisconnect, previousAccount, account]);\n  return account;\n}\n\n// src/hooks/accounts/useBalance.ts\n\n\nfunction queryKey4({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey,\n  token\n}) {\n  return [\n    {\n      entity: \"balance\",\n      address,\n      chainId,\n      formatUnits,\n      scopeKey,\n      token\n    }\n  ];\n}\nfunction queryFn4({\n  queryKey: [{ address, chainId, formatUnits, token }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return _core.fetchBalance.call(void 0, { address, chainId, formatUnits, token });\n}\nfunction useBalance({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits,\n  scopeKey,\n  staleTime,\n  suspense,\n  token,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React10.useMemo(\n    () => queryKey4({ address, chainId, formatUnits, scopeKey, token }),\n    [address, chainId, formatUnits, scopeKey, token]\n  );\n  const balanceQuery = useQuery(queryKey_, queryFn4, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && address),\n    queryKey: queryKey_\n  });\n  return balanceQuery;\n}\n\n// src/hooks/accounts/useConnect.ts\n\n\nvar mutationKey = (args) => [{ entity: \"connect\", ...args }];\nvar mutationFn = (args) => {\n  const { connector, chainId } = args;\n  if (!connector)\n    throw new Error(\"connector is required\");\n  return _core.connect.call(void 0, { connector, chainId });\n};\nfunction useConnect({\n  chainId,\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({ connector, chainId }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect2 = React11.useCallback(\n    (args) => {\n      return mutate({\n        chainId: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _18 => _18.chainId]), () => ( chainId)),\n        connector: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _19 => _19.connector]), () => ( connector))\n      });\n    },\n    [chainId, connector, mutate]\n  );\n  const connectAsync = React11.useCallback(\n    (args) => {\n      return mutateAsync({\n        chainId: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _20 => _20.chainId]), () => ( chainId)),\n        connector: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _21 => _21.connector]), () => ( connector))\n      });\n    },\n    [chainId, connector, mutateAsync]\n  );\n  return {\n    connect: connect2,\n    connectAsync,\n    connectors: config.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: _optionalChain([variables, 'optionalAccess', _22 => _22.connector]),\n    reset,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useDisconnect.ts\n\nvar mutationKey2 = [{ entity: \"disconnect\" }];\nvar mutationFn2 = () => _core.disconnect.call(void 0, );\nfunction useDisconnect({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect2,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey2, mutationFn2, {\n    ...onError ? {\n      onError(error2, _variables, context) {\n        onError(error2, context);\n      }\n    } : {},\n    onMutate,\n    ...onSettled ? {\n      onSettled(_data, error2, _variables, context) {\n        onSettled(error2, context);\n      }\n    } : {},\n    ...onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n    } : {}\n  });\n  return {\n    disconnect: disconnect2,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\n// src/hooks/accounts/useNetwork.ts\n\n\nfunction useNetwork() {\n  const config = useConfig();\n  const watchNetwork_ = _react.useCallback.call(void 0, \n    (callback) => _core.watchNetwork.call(void 0, callback),\n    [config]\n  );\n  return useSyncExternalStoreWithTracked(watchNetwork_, _core.getNetwork);\n}\n\n// src/hooks/accounts/useSignMessage.ts\n\n\nvar mutationKey3 = (args) => [{ entity: \"signMessage\", ...args }];\nvar mutationFn3 = (args) => {\n  const { message } = args;\n  if (!message)\n    throw new Error(\"message is required\");\n  return _core.signMessage.call(void 0, { message });\n};\nfunction useSignMessage({\n  message,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey3({ message }), mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage2 = React12.useCallback(\n    (args) => mutate(args || { message }),\n    [message, mutate]\n  );\n  const signMessageAsync = React12.useCallback(\n    (args) => mutateAsync(args || { message }),\n    [message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage: signMessage2,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSignTypedData.ts\n\n\nfunction mutationKey4({ domain, types, message, primaryType }) {\n  return [\n    { entity: \"signTypedData\", domain, types, message, primaryType }\n  ];\n}\nfunction mutationFn4(args) {\n  const { domain, types, primaryType, message } = args;\n  if (!domain)\n    throw new Error(\"domain is required\");\n  if (!types)\n    throw new Error(\"types is required\");\n  if (!primaryType)\n    throw new Error(\"primaryType is required\");\n  if (!message)\n    throw new Error(\"message is required\");\n  return _core.signTypedData.call(void 0, {\n    domain,\n    message,\n    primaryType,\n    types\n  });\n}\nfunction useSignTypedData({\n  domain,\n  types,\n  message,\n  primaryType,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey4({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    mutationFn4,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const signTypedData2 = React13.useCallback(\n    (args) => mutate({\n      domain: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _23 => _23.domain]), () => ( domain)),\n      types: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _24 => _24.types]), () => ( types)),\n      message: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _25 => _25.message]), () => ( message)),\n      primaryType: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _26 => _26.primaryType]), () => ( primaryType))\n    }),\n    [domain, types, primaryType, message, mutate]\n  );\n  const signTypedDataAsync = React13.useCallback(\n    (args) => mutateAsync({\n      domain: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _27 => _27.domain]), () => ( domain)),\n      types: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _28 => _28.types]), () => ( types)),\n      message: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _29 => _29.message]), () => ( message)),\n      primaryType: _nullishCoalesce(_optionalChain([args, 'optionalAccess', _30 => _30.primaryType]), () => ( primaryType))\n    }),\n    [domain, types, primaryType, message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData: signTypedData2,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSwitchNetwork.ts\n\n\nvar mutationKey5 = (args) => [{ entity: \"switchNetwork\", ...args }];\nvar mutationFn5 = (args) => {\n  const { chainId } = args;\n  if (!chainId)\n    throw new Error(\"chainId is required\");\n  return _core.switchNetwork.call(void 0, { chainId });\n};\nfunction useSwitchNetwork({\n  chainId,\n  throwForSwitchChainNotSupported,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey5({ chainId }), mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React14.useCallback(\n    (chainId_) => mutate({ chainId: _nullishCoalesce(chainId_, () => ( chainId)) }),\n    [chainId, mutate]\n  );\n  const switchNetworkAsync_ = React14.useCallback(\n    (chainId_) => mutateAsync({ chainId: _nullishCoalesce(chainId_, () => ( chainId)) }),\n    [chainId, mutateAsync]\n  );\n  React14.useEffect(() => {\n    const unwatch = config.subscribe(\n      ({ chains, connector }) => ({\n        chains,\n        connector\n      }),\n      forceUpdate\n    );\n    return unwatch;\n  }, [config, forceUpdate]);\n  let switchNetwork2;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!_optionalChain([config, 'access', _31 => _31.connector, 'optionalAccess', _32 => _32.switchChain]);\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork2 = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n  return {\n    chains: _nullishCoalesce(config.chains, () => ( [])),\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: _optionalChain([variables, 'optionalAccess', _33 => _33.chainId]),\n    reset,\n    status,\n    switchNetwork: switchNetwork2,\n    switchNetworkAsync,\n    variables\n  };\n}\n\n// src/hooks/contracts/useContractEvent.ts\n\nfunction useContractEvent({\n  address,\n  chainId,\n  abi,\n  listener,\n  eventName\n} = {}) {\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const unwatch = React15.useRef();\n  React15.useEffect(() => {\n    if (!abi || !address || !eventName)\n      return;\n    const publicClient_ = webSocketPublicClient || publicClient;\n    unwatch.current = publicClient_.watchContractEvent({\n      abi,\n      address,\n      eventName,\n      onLogs: listener\n    });\n    return unwatch.current;\n  }, [abi, address, eventName, publicClient.uid, _optionalChain([webSocketPublicClient, 'optionalAccess', _34 => _34.uid])]);\n  return unwatch.current;\n}\n\n// src/hooks/contracts/useContractInfiniteReads.ts\n\n\n\nfunction queryKey5({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContractsInfinite\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheKey,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn5({\n  contracts\n}) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag }],\n    pageParam\n  }) => {\n    return _core.readContracts.call(void 0, {\n      allowFailure,\n      blockNumber,\n      blockTag,\n      contracts: contracts(pageParam || void 0)\n    });\n  };\n}\nfunction useContractInfiniteReads({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  getNextPageParam,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => _core.deepEqual.call(void 0, oldData, newData) ? oldData : _reactquery.replaceEqualDeep.call(void 0, oldData, newData),\n  suspense\n}) {\n  const queryKey_ = React16.useMemo(\n    () => queryKey5({ allowFailure, blockNumber, blockTag, cacheKey, scopeKey }),\n    [allowFailure, blockNumber, blockTag, cacheKey, scopeKey]\n  );\n  const enabled = React16.useMemo(() => {\n    const enabled2 = Boolean(enabled_ && contracts);\n    return enabled2;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn5({ contracts }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\nfunction paginatedIndexesConfig(fn, {\n  perPage,\n  start,\n  direction\n}) {\n  const contracts = (page = 0) => [...Array(perPage).keys()].map((index) => {\n    return direction === \"increment\" ? start + index + page * perPage : start - index - page * perPage;\n  }).filter((index) => index >= 0).flatMap(fn);\n  return {\n    contracts,\n    getNextPageParam(lastPage, pages) {\n      return _optionalChain([lastPage, 'optionalAccess', _35 => _35.length]) === perPage ? pages.length : void 0;\n    }\n  };\n}\n\n// src/hooks/contracts/useContractRead.ts\n\n\n\nfunction queryKey6({\n  account,\n  address,\n  args,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContract\",\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn6({ abi }) {\n  return async ({\n    queryKey: [\n      { account, address, args, blockNumber, blockTag, chainId, functionName }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    return await _asyncNullishCoalesce(await _core.readContract.call(void 0, {\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      abi,\n      functionName\n    }), async () => ( null));\n  };\n}\nfunction useContractRead({\n  abi,\n  address,\n  account,\n  args,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  chainId: chainId_,\n  enabled: enabled_ = true,\n  functionName,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => _core.deepEqual.call(void 0, oldData, newData) ? oldData : _reactquery.replaceEqualDeep.call(void 0, oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const { data: blockNumber_ } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    scopeKey: watch || cacheOnBlock ? void 0 : \"idle\",\n    watch\n  });\n  const blockNumber = _nullishCoalesce(blockNumberOverride, () => ( blockNumber_));\n  const queryKey_ = React17.useMemo(\n    () => queryKey6({\n      account,\n      address,\n      args,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }),\n    [\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      functionName,\n      scopeKey\n    ]\n  );\n  const enabled = React17.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && abi && address && functionName);\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [abi, address, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  return useQuery(\n    queryKey_,\n    queryFn6({\n      abi\n    }),\n    {\n      cacheTime,\n      enabled,\n      isDataEqual,\n      keepPreviousData,\n      select,\n      staleTime,\n      structuralSharing,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/contracts/useContractReads.ts\n\n\n\nfunction queryKey7({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  chainId,\n  contracts,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContracts\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      chainId,\n      scopeKey,\n      contracts: (_nullishCoalesce(contracts, () => ( []))).map(({ address, args, chainId: chainId2, functionName }) => ({\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      }))\n    }\n  ];\n}\nfunction queryFn7({ abis }) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag, contracts: contracts_ }]\n  }) => {\n    const contracts = contracts_.map((contract, i) => ({\n      ...contract,\n      abi: abis[i]\n    }));\n    return _core.readContracts.call(void 0, {\n      allowFailure,\n      contracts,\n      blockNumber,\n      blockTag\n    });\n  };\n}\nfunction useContractReads({\n  allowFailure: allowFailure_,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => _core.deepEqual.call(void 0, oldData, newData) ? oldData : _reactquery.replaceEqualDeep.call(void 0, oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const allowFailure = _nullishCoalesce(allowFailure_, () => ( true));\n  const { data: blockNumber_ } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const blockNumber = _nullishCoalesce(blockNumberOverride, () => ( blockNumber_));\n  const queryKey_ = React18.useMemo(\n    () => queryKey7({\n      allowFailure,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      contracts,\n      scopeKey\n    }),\n    [\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      scopeKey,\n      contracts\n    ]\n  );\n  const enabled = React18.useMemo(() => {\n    let enabled2 = Boolean(\n      enabled_ && _optionalChain([contracts, 'optionalAccess', _36 => _36.every, 'call', _37 => _37(\n        (x) => x.abi && x.address && x.functionName\n      )])\n    );\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  const abis = (_nullishCoalesce(contracts, () => ( []))).map(\n    ({ abi }) => abi\n  );\n  return useQuery(queryKey_, queryFn7({ abis }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractWrite.ts\n\nvar _internal = require('@wagmi/core/internal');\n\nfunction mutationKey6({\n  address,\n  abi,\n  functionName,\n  ...config\n}) {\n  const {\n    args,\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  } = config;\n  return [\n    {\n      entity: \"writeContract\",\n      address,\n      args,\n      abi,\n      accessList,\n      account,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }\n  ];\n}\nfunction mutationFn6(config) {\n  if (config.mode === \"prepared\") {\n    if (!config.request)\n      throw new Error(\"request is required\");\n    return _core.writeContract.call(void 0, {\n      mode: \"prepared\",\n      request: config.request\n    });\n  }\n  if (!config.address)\n    throw new Error(\"address is required\");\n  if (!config.abi)\n    throw new Error(\"abi is required\");\n  if (!config.functionName)\n    throw new Error(\"functionName is required\");\n  return _core.writeContract.call(void 0, {\n    address: config.address,\n    args: config.args,\n    chainId: config.chainId,\n    abi: config.abi,\n    functionName: config.functionName,\n    accessList: config.accessList,\n    account: config.account,\n    gas: config.gas,\n    gasPrice: config.gasPrice,\n    maxFeePerGas: config.maxFeePerGas,\n    maxPriorityFeePerGas: config.maxPriorityFeePerGas,\n    nonce: config.nonce,\n    value: config.value\n  });\n}\nfunction useContractWrite(config) {\n  const { address, abi, args, chainId, functionName, mode, request } = config;\n  const {\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = _internal.getSendTransactionParameters.call(void 0, config);\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey6({\n      address,\n      abi,\n      functionName,\n      chainId,\n      mode,\n      args,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }),\n    mutationFn6,\n    {\n      onError: config.onError,\n      onMutate: config.onMutate,\n      onSettled: config.onSettled,\n      onSuccess: config.onSuccess\n    }\n  );\n  const write = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutate({\n        mode: \"prepared\",\n        request: config.request,\n        chainId: config.chainId\n      });\n    }\n    return (overrideConfig) => mutate({\n      address,\n      args,\n      abi,\n      functionName,\n      chainId,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.chainId,\n    config.mode,\n    config.request,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutate,\n    nonce,\n    request,\n    value\n  ]);\n  const writeAsync = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutateAsync({\n        mode: \"prepared\",\n        request: config.request\n      });\n    }\n    return (overrideConfig) => mutateAsync({\n      address,\n      args,\n      abi,\n      chainId,\n      functionName,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.mode,\n    config.request,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutateAsync,\n    nonce,\n    request,\n    value\n  ]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\n// src/hooks/contracts/usePrepareContractWrite.ts\n\n\nfunction queryKey8({\n  accessList,\n  account,\n  activeChainId,\n  args,\n  address,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  walletClientAddress,\n  value\n}) {\n  return [\n    {\n      entity: \"prepareContractTransaction\",\n      accessList,\n      account,\n      activeChainId,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress,\n      value\n    }\n  ];\n}\nfunction queryFn8({\n  abi,\n  walletClient\n}) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        args,\n        address,\n        blockNumber,\n        blockTag,\n        chainId,\n        functionName,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        value\n      }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    if (!functionName)\n      throw new Error(\"functionName is required\");\n    return _core.prepareWriteContract.call(void 0, {\n      abi,\n      accessList,\n      account,\n      args,\n      address,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      walletClient,\n      value\n    });\n  };\n}\nfunction usePrepareContractWrite({\n  address,\n  abi,\n  functionName,\n  chainId,\n  args,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess,\n  ...config\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const {\n    accessList,\n    account,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = _internal.getCallParameters.call(void 0, config);\n  const prepareContractWriteQuery = useQuery(\n    queryKey8({\n      accessList,\n      account,\n      activeChainId: _optionalChain([activeChain, 'optionalAccess', _38 => _38.id]),\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress: _optionalChain([walletClient, 'optionalAccess', _39 => _39.account, 'access', _40 => _40.address]),\n      value\n    }),\n    queryFn8({\n      abi,\n      walletClient\n    }),\n    {\n      cacheTime,\n      enabled: Boolean(\n        enabled && abi && address && functionName && walletClient\n      ),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      chainId,\n      mode: \"prepared\",\n      request: void 0,\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\n// src/hooks/contracts/useToken.ts\n\nfunction queryKey9({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"token\", address, chainId, formatUnits, scopeKey }];\n}\nfunction queryFn9({\n  queryKey: [{ address, chainId, formatUnits }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return _core.fetchToken.call(void 0, { address, chainId, formatUnits });\n}\nfunction useToken({\n  address,\n  chainId: chainId_,\n  formatUnits = \"ether\",\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey9({ address, chainId, formatUnits, scopeKey }),\n    queryFn9,\n    {\n      cacheTime,\n      enabled: Boolean(enabled && address),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/ens/useEnsAddress.ts\n\nfunction queryKey10({ chainId, name, scopeKey }) {\n  return [{ entity: \"ensAddress\", chainId, name, scopeKey }];\n}\nfunction queryFn10({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return _core.fetchEnsAddress.call(void 0, { chainId, name });\n}\nfunction useEnsAddress({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey10({ chainId, name, scopeKey }), queryFn10, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAvatar.ts\n\nfunction queryKey11({ name, chainId, scopeKey }) {\n  return [{ entity: \"ensAvatar\", name, chainId, scopeKey }];\n}\nfunction queryFn11({\n  queryKey: [{ name, chainId }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return _core.fetchEnsAvatar.call(void 0, { name, chainId });\n}\nfunction useEnsAvatar({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey11({ name, chainId, scopeKey }), queryFn11, {\n    cacheTime,\n    enabled: Boolean(enabled && name && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsName.ts\n\nfunction queryKey12({\n  address,\n  chainId,\n  scopeKey\n}) {\n  return [{ entity: \"ensName\", address, chainId, scopeKey }];\n}\nfunction queryFn12({\n  queryKey: [{ address, chainId }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return _core.fetchEnsName.call(void 0, { address, chainId });\n}\nfunction useEnsName({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey12({ address, chainId, scopeKey }), queryFn12, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsResolver.ts\n\nfunction queryKey13({ chainId, name, scopeKey }) {\n  return [\n    { entity: \"ensResolver\", chainId, name, scopeKey, persist: false }\n  ];\n}\nfunction queryFn13({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return _core.fetchEnsResolver.call(void 0, { chainId, name });\n}\nfunction useEnsResolver({\n  chainId: chainId_,\n  name,\n  enabled = true,\n  scopeKey,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey13({ chainId, name, scopeKey }), queryFn13, {\n    cacheTime: 0,\n    enabled: Boolean(enabled && chainId && name),\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/usePrepareSendTransaction.ts\n\nfunction queryKey14({\n  accessList,\n  account,\n  activeChainId,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to,\n  value,\n  scopeKey,\n  walletClientAddress\n}) {\n  return [\n    {\n      entity: \"prepareSendTransaction\",\n      activeChainId,\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      scopeKey,\n      walletClientAddress\n    }\n  ];\n}\nfunction queryFn14({ walletClient }) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        chainId,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value\n      }\n    ]\n  }) => {\n    if (!to)\n      throw new Error(\"to is required\");\n    return _core.prepareSendTransaction.call(void 0, {\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      walletClient\n    });\n  };\n}\nfunction usePrepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  cacheTime,\n  data,\n  enabled = true,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  staleTime,\n  suspense,\n  to,\n  value,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const prepareSendTransactionQuery = useQuery(\n    queryKey14({\n      accessList,\n      activeChainId: _optionalChain([activeChain, 'optionalAccess', _41 => _41.id]),\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      to,\n      value,\n      walletClientAddress: _optionalChain([walletClient, 'optionalAccess', _42 => _42.account, 'access', _43 => _43.address])\n    }),\n    queryFn14({ walletClient }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && walletClient && to),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      mode: \"prepared\",\n      ...prepareSendTransactionQuery.isSuccess ? prepareSendTransactionQuery.data : void 0\n    }\n  });\n}\n\n// src/hooks/transactions/useSendTransaction.ts\n\n\nvar mutationKey7 = (args) => [{ entity: \"sendTransaction\", ...args }];\nvar mutationFn7 = ({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) => {\n  if (!to)\n    throw new Error(\"to is required.\");\n  return _core.sendTransaction.call(void 0, {\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  });\n};\nfunction useSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data: data_,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey7({\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      to,\n      value\n    }),\n    mutationFn7,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const sendTransaction2 = React20.useCallback(\n    (args) => mutate({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutate,\n      nonce,\n      to,\n      value\n    ]\n  );\n  const sendTransactionAsync = React20.useCallback(\n    (args) => mutateAsync({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutateAsync,\n      nonce,\n      to,\n      value\n    ]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === \"prepared\" && !to ? void 0 : sendTransaction2,\n    sendTransactionAsync: mode === \"prepared\" && !to ? void 0 : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/transactions/useTransaction.ts\n\nfunction queryKey15({ chainId, hash, scopeKey }) {\n  return [{ entity: \"transaction\", chainId, hash, scopeKey }];\n}\nfunction queryFn15({\n  queryKey: [{ chainId, hash }]\n}) {\n  if (!hash)\n    throw new Error(\"hash is required\");\n  return _core.fetchTransaction.call(void 0, { chainId, hash });\n}\nfunction useTransaction({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  hash,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey15({ chainId, hash, scopeKey }), queryFn15, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWaitForTransaction.ts\n\nfunction queryKey16({\n  confirmations,\n  chainId,\n  hash,\n  scopeKey,\n  timeout\n}) {\n  return [\n    {\n      entity: \"waitForTransaction\",\n      confirmations,\n      chainId,\n      hash,\n      scopeKey,\n      timeout\n    }\n  ];\n}\nfunction queryFn16({\n  onReplaced\n}) {\n  return ({\n    queryKey: [{ chainId, confirmations, hash, timeout }]\n  }) => {\n    if (!hash)\n      throw new Error(\"hash is required\");\n    return _core.waitForTransaction.call(void 0, {\n      chainId,\n      confirmations,\n      hash,\n      onReplaced,\n      timeout\n    });\n  };\n}\nfunction useWaitForTransaction({\n  chainId: chainId_,\n  confirmations,\n  hash,\n  timeout,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onReplaced,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey16({ chainId, confirmations, hash, scopeKey, timeout }),\n    queryFn16({ onReplaced }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && hash),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/transactions/useWatchPendingTransactions.ts\n\nfunction useWatchPendingTransactions({\n  chainId: chainId_,\n  enabled = true,\n  listener\n}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  React21.useEffect(() => {\n    if (!enabled)\n      return;\n    const publicClient_ = _nullishCoalesce(webSocketPublicClient, () => ( publicClient));\n    return publicClient_.watchPendingTransactions({\n      onTransactions: listener\n    });\n  }, [enabled, listener, publicClient, webSocketPublicClient]);\n}\n\n// src/index.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _chains = require('viem/chains');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.ChainMismatchError = _core.ChainMismatchError; exports.ChainNotConfiguredError = _core.ChainNotConfiguredError; exports.ConfigChainsNotFound = _core.ConfigChainsNotFound; exports.Connector = _core.Connector; exports.ConnectorAlreadyConnectedError = _core.ConnectorAlreadyConnectedError; exports.ConnectorNotFoundError = _core.ConnectorNotFoundError; exports.Context = Context; exports.SwitchChainNotSupportedError = _core.SwitchChainNotSupportedError; exports.WagmiConfig = WagmiConfig; exports.configureChains = _core.configureChains; exports.createConfig = createConfig; exports.createStorage = _core.createStorage; exports.deepEqual = _core.deepEqual; exports.deserialize = _core.deserialize; exports.erc20ABI = _core.erc20ABI; exports.erc4626ABI = _core.erc4626ABI; exports.erc721ABI = _core.erc721ABI; exports.mainnet = _chains.mainnet; exports.paginatedIndexesConfig = paginatedIndexesConfig; exports.readContracts = _core.readContracts; exports.sepolia = _chains.sepolia; exports.serialize = _core.serialize; exports.useAccount = useAccount; exports.useBalance = useBalance; exports.useBlockNumber = useBlockNumber; exports.useChainId = useChainId; exports.useConfig = useConfig; exports.useConnect = useConnect; exports.useContractEvent = useContractEvent; exports.useContractInfiniteReads = useContractInfiniteReads; exports.useContractRead = useContractRead; exports.useContractReads = useContractReads; exports.useContractWrite = useContractWrite; exports.useDisconnect = useDisconnect; exports.useEnsAddress = useEnsAddress; exports.useEnsAvatar = useEnsAvatar; exports.useEnsName = useEnsName; exports.useEnsResolver = useEnsResolver; exports.useFeeData = useFeeData; exports.useInfiniteQuery = useInfiniteQuery; exports.useMutation = useMutation; exports.useNetwork = useNetwork; exports.usePrepareContractWrite = usePrepareContractWrite; exports.usePrepareSendTransaction = usePrepareSendTransaction; exports.usePublicClient = usePublicClient; exports.useQuery = useQuery; exports.useQueryClient = useQueryClient2; exports.useSendTransaction = useSendTransaction; exports.useSignMessage = useSignMessage; exports.useSignTypedData = useSignTypedData; exports.useSwitchNetwork = useSwitchNetwork; exports.useToken = useToken; exports.useTransaction = useTransaction; exports.useWaitForTransaction = useWaitForTransaction; exports.useWalletClient = useWalletClient; exports.useWatchPendingTransactions = useWatchPendingTransactions; exports.useWebSocketPublicClient = useWebSocketPublicClient;\n"],
  "mappings": "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",
  "names": ["createSyncStoragePersister", "storage", "key", "throttleTime", "serialize", "JSON", "stringify", "deserialize", "parse", "retry", "trySave", "persistedClient", "setItem", "error", "persistClient", "throttle", "client", "errorCount", "restoreClient", "cacheString", "getItem", "removeClient", "removeItem", "noop", "undefined", "func", "wait", "timer", "params", "args", "setTimeout", "Subscribable", "constructor", "listeners", "Set", "subscribe", "bind", "listener", "identity", "add", "onSubscribe", "delete", "onUnsubscribe", "hasListeners", "size", "isServer", "window", "noop", "undefined", "functionalUpdate", "updater", "input", "isValidTimeout", "value", "Infinity", "difference", "array1", "array2", "filter", "x", "includes", "replaceAt", "array", "index", "copy", "slice", "timeUntilStale", "updatedAt", "staleTime", "Math", "max", "Date", "now", "parseQueryArgs", "arg1", "arg2", "arg3", "isQueryKey", "queryKey", "queryFn", "parseMutationArgs", "mutationKey", "mutationFn", "parseFilterArgs", "parseMutationFilterArgs", "matchQuery", "filters", "query", "type", "exact", "fetchStatus", "predicate", "stale", "queryHash", "hashQueryKeyByOptions", "options", "partialMatchKey", "isActive", "isStale", "state", "matchMutation", "mutation", "fetching", "hashQueryKey", "status", "hashFn", "queryKeyHashFn", "JSON", "stringify", "_", "val", "isPlainObject", "Object", "keys", "sort", "reduce", "result", "key", "a", "b", "partialDeepEqual", "some", "replaceEqualDeep", "isPlainArray", "aSize", "length", "bItems", "bSize", "equalItems", "i", "shallowEqualObjects", "Array", "isArray", "o", "hasObjectPrototype", "ctor", "constructor", "prot", "prototype", "hasOwnProperty", "toString", "call", "isError", "Error", "sleep", "timeout", "Promise", "resolve", "setTimeout", "scheduleMicrotask", "callback", "then", "getAbortController", "AbortController", "replaceData", "prevData", "data", "isDataEqual", "structuralSharing", "FocusManager", "Subscribable", "constructor", "setup", "onFocus", "isServer", "window", "addEventListener", "listener", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "focused", "setFocused", "changed", "listeners", "forEach", "isFocused", "document", "includes", "visibilityState", "focusManager", "onlineEvents", "OnlineManager", "Subscribable", "constructor", "setup", "onOnline", "isServer", "window", "addEventListener", "listener", "forEach", "event", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "online", "setOnline", "changed", "listeners", "isOnline", "navigator", "onLine", "onlineManager", "defaultRetryDelay", "failureCount", "Math", "min", "canFetch", "networkMode", "onlineManager", "isOnline", "CancelledError", "constructor", "options", "revert", "silent", "isCancelledError", "value", "createRetryer", "config", "isRetryCancelled", "isResolved", "continueFn", "promiseResolve", "promiseReject", "promise", "Promise", "outerResolve", "outerReject", "cancel", "cancelOptions", "reject", "abort", "cancelRetry", "continueRetry", "shouldPause", "focusManager", "isFocused", "resolve", "onSuccess", "onError", "pause", "continueResolve", "canContinue", "onPause", "then", "undefined", "onContinue", "run", "promiseOrValue", "fn", "error", "catch", "retry", "retryDelay", "delay", "shouldRetry", "onFail", "sleep", "continue", "didContinue", "defaultLogger", "console", "createNotifyManager", "queue", "transactions", "notifyFn", "callback", "batchNotifyFn", "batch", "result", "flush", "schedule", "push", "scheduleMicrotask", "batchCalls", "args", "originalQueue", "length", "forEach", "setNotifyFunction", "fn", "setBatchNotifyFunction", "notifyManager", "Removable", "destroy", "clearGcTimeout", "scheduleGc", "isValidTimeout", "cacheTime", "gcTimeout", "setTimeout", "optionalRemove", "updateCacheTime", "newCacheTime", "Math", "max", "isServer", "Infinity", "clearTimeout", "undefined", "Query", "Removable", "constructor", "config", "abortSignalConsumed", "defaultOptions", "setOptions", "options", "observers", "cache", "logger", "defaultLogger", "queryKey", "queryHash", "initialState", "state", "getDefaultState", "scheduleGc", "meta", "updateCacheTime", "cacheTime", "optionalRemove", "length", "fetchStatus", "remove", "setData", "newData", "data", "replaceData", "dispatch", "type", "dataUpdatedAt", "updatedAt", "manual", "setState", "setStateOptions", "cancel", "promise", "retryer", "then", "noop", "catch", "Promise", "resolve", "destroy", "silent", "reset", "isActive", "some", "observer", "enabled", "isDisabled", "getObserversCount", "isStale", "isInvalidated", "getCurrentResult", "isStaleByTime", "staleTime", "timeUntilStale", "onFocus", "find", "x", "shouldFetchOnWindowFocus", "refetch", "cancelRefetch", "continue", "onOnline", "shouldFetchOnReconnect", "addObserver", "includes", "push", "clearGcTimeout", "notify", "query", "removeObserver", "filter", "revert", "cancelRetry", "invalidate", "fetch", "fetchOptions", "continueRetry", "queryFn", "process", "Array", "isArray", "error", "abortController", "getAbortController", "queryFnContext", "pageParam", "undefined", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "fetchFn", "reject", "context", "behavior", "onFetch", "revertState", "fetchMeta", "onError", "isCancelledError", "onSettled", "isFetchingOptimistic", "createRetryer", "fn", "abort", "bind", "onSuccess", "Error", "onFail", "failureCount", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "action", "reducer", "fetchFailureCount", "fetchFailureReason", "canFetch", "status", "dataUpdateCount", "Date", "now", "errorUpdateCount", "errorUpdatedAt", "notifyManager", "batch", "forEach", "onQueryUpdate", "initialData", "hasData", "initialDataUpdatedAt", "QueryCache", "Subscribable", "constructor", "config", "queries", "queriesMap", "build", "client", "options", "state", "queryKey", "queryHash", "hashQueryKeyByOptions", "query", "get", "Query", "cache", "logger", "getLogger", "defaultQueryOptions", "defaultOptions", "getQueryDefaults", "add", "push", "notify", "type", "remove", "queryInMap", "destroy", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "arg1", "arg2", "filters", "parseFilterArgs", "exact", "matchQuery", "findAll", "Object", "keys", "length", "event", "listeners", "listener", "onFocus", "onOnline", "Mutation", "Removable", "constructor", "config", "defaultOptions", "mutationId", "mutationCache", "logger", "defaultLogger", "observers", "state", "getDefaultState", "setOptions", "options", "scheduleGc", "updateCacheTime", "cacheTime", "meta", "setState", "dispatch", "type", "addObserver", "observer", "includes", "push", "clearGcTimeout", "notify", "mutation", "removeObserver", "filter", "x", "optionalRemove", "length", "status", "remove", "continue", "retryer", "execute", "executeMutation", "createRetryer", "fn", "mutationFn", "Promise", "reject", "variables", "onFail", "failureCount", "error", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "promise", "restored", "onMutate", "context", "data", "onSuccess", "onSettled", "onError", "process", "undefined", "action", "reducer", "failureReason", "isPaused", "canFetch", "notifyManager", "batch", "forEach", "onMutationUpdate", "MutationCache", "Subscribable", "constructor", "config", "mutations", "mutationId", "build", "client", "options", "state", "mutation", "Mutation", "mutationCache", "logger", "getLogger", "defaultMutationOptions", "defaultOptions", "mutationKey", "getMutationDefaults", "undefined", "add", "push", "notify", "type", "remove", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "filters", "exact", "matchMutation", "findAll", "event", "listeners", "listener", "resumePausedMutations", "resuming", "Promise", "resolve", "then", "pausedMutations", "isPaused", "reduce", "promise", "continue", "catch", "noop", "infiniteQueryBehavior", "onFetch", "context", "fetchFn", "refetchPage", "fetchOptions", "meta", "fetchMore", "pageParam", "isFetchingNextPage", "direction", "isFetchingPreviousPage", "oldPages", "state", "data", "pages", "oldPageParams", "pageParams", "newPageParams", "cancelled", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "aborted", "addEventListener", "queryFn", "options", "Promise", "reject", "queryHash", "buildNewPages", "param", "page", "previous", "fetchPage", "manual", "length", "resolve", "queryFnContext", "queryKey", "queryFnResult", "promise", "then", "getNextPageParam", "getPreviousPageParam", "shouldFetchFirstPage", "i", "shouldFetchNextPage", "finalPromise", "hasNextPage", "Array", "isArray", "nextPageParam", "hasPreviousPage", "previousPageParam", "QueryClient", "constructor", "config", "queryCache", "QueryCache", "mutationCache", "MutationCache", "logger", "defaultLogger", "defaultOptions", "queryDefaults", "mutationDefaults", "mountCount", "error", "mount", "unsubscribeFocus", "focusManager", "subscribe", "isFocused", "resumePausedMutations", "onFocus", "unsubscribeOnline", "onlineManager", "isOnline", "onOnline", "unmount", "undefined", "isFetching", "arg1", "arg2", "filters", "parseFilterArgs", "fetchStatus", "findAll", "length", "isMutating", "fetching", "getQueryData", "queryKey", "find", "state", "data", "ensureQueryData", "arg3", "parsedOptions", "parseQueryArgs", "cachedData", "Promise", "resolve", "fetchQuery", "getQueriesData", "queryKeyOrFilters", "getQueryCache", "map", "setQueryData", "updater", "options", "query", "prevData", "functionalUpdate", "defaultedOptions", "defaultQueryOptions", "build", "setData", "manual", "setQueriesData", "notifyManager", "batch", "getQueryState", "removeQueries", "forEach", "remove", "resetQueries", "refetchFilters", "type", "reset", "refetchQueries", "cancelQueries", "cancelOptions", "revert", "promises", "cancel", "all", "then", "noop", "catch", "invalidateQueries", "invalidate", "refetchType", "filter", "isDisabled", "fetch", "cancelRefetch", "meta", "refetchPage", "promise", "throwOnError", "retry", "isStaleByTime", "staleTime", "prefetchQuery", "fetchInfiniteQuery", "behavior", "infiniteQueryBehavior", "prefetchInfiniteQuery", "getMutationCache", "getLogger", "getDefaultOptions", "setDefaultOptions", "setQueryDefaults", "result", "x", "hashQueryKey", "push", "getQueryDefaults", "firstMatchingDefaults", "partialMatchKey", "process", "matchingDefaults", "JSON", "stringify", "setMutationDefaults", "mutationKey", "getMutationDefaults", "_defaulted", "queries", "queryHash", "hashQueryKeyByOptions", "refetchOnReconnect", "networkMode", "useErrorBoundary", "suspense", "defaultMutationOptions", "mutations", "clear", "QueryObserver", "Subscribable", "constructor", "client", "options", "trackedProps", "Set", "selectError", "bindMethods", "setOptions", "remove", "bind", "refetch", "onSubscribe", "listeners", "size", "currentQuery", "addObserver", "shouldFetchOnMount", "executeFetch", "updateTimers", "onUnsubscribe", "hasListeners", "destroy", "shouldFetchOnReconnect", "shouldFetchOn", "refetchOnReconnect", "shouldFetchOnWindowFocus", "refetchOnWindowFocus", "clearStaleTimeout", "clearRefetchInterval", "removeObserver", "notifyOptions", "prevOptions", "prevQuery", "defaultQueryOptions", "isDataEqual", "getLogger", "error", "shallowEqualObjects", "getQueryCache", "notify", "type", "query", "observer", "enabled", "Error", "queryKey", "updateQuery", "mounted", "shouldFetchOptionally", "updateResult", "staleTime", "updateStaleTimeout", "nextRefetchInterval", "computeRefetchInterval", "currentRefetchInterval", "updateRefetchInterval", "getOptimisticResult", "build", "result", "createResult", "shouldAssignObserverCurrentProperties", "currentResult", "currentResultOptions", "currentResultState", "state", "getCurrentResult", "trackResult", "trackedResult", "Object", "keys", "forEach", "key", "defineProperty", "configurable", "enumerable", "get", "add", "getCurrentQuery", "refetchPage", "fetch", "meta", "fetchOptimistic", "defaultedOptions", "isFetchingOptimistic", "then", "fetchOptions", "cancelRefetch", "promise", "throwOnError", "catch", "noop", "isServer", "isStale", "isValidTimeout", "time", "timeUntilStale", "dataUpdatedAt", "timeout", "staleTimeoutId", "setTimeout", "refetchInterval", "data", "nextInterval", "refetchIntervalId", "setInterval", "refetchIntervalInBackground", "focusManager", "isFocused", "clearTimeout", "undefined", "clearInterval", "prevResult", "prevResultState", "prevResultOptions", "queryChange", "queryInitialState", "currentQueryInitialState", "prevQueryResult", "previousQueryResult", "errorUpdatedAt", "fetchStatus", "status", "isPreviousData", "isPlaceholderData", "_optimisticResults", "fetchOnMount", "fetchOptionally", "canFetch", "networkMode", "keepPreviousData", "isSuccess", "select", "selectFn", "selectResult", "replaceData", "process", "placeholderData", "Date", "now", "isFetching", "isLoading", "isError", "isInitialLoading", "failureCount", "fetchFailureCount", "failureReason", "fetchFailureReason", "errorUpdateCount", "isFetched", "dataUpdateCount", "isFetchedAfterMount", "isRefetching", "isLoadingError", "isPaused", "isRefetchError", "nextResult", "defaultNotifyOptions", "cache", "shouldNotifyListeners", "notifyOnChangeProps", "notifyOnChangePropsValue", "includedProps", "useErrorBoundary", "some", "typedKey", "changed", "has", "onQueryUpdate", "action", "onSuccess", "manual", "isCancelledError", "onError", "notifyManager", "batch", "onSettled", "listener", "shouldLoadOnMount", "retryOnMount", "refetchOnMount", "field", "value", "suspense", "isStaleByTime", "optimisticResult", "QueriesObserver", "Subscribable", "constructor", "client", "queries", "result", "observers", "observersMap", "setQueries", "onSubscribe", "listeners", "size", "forEach", "observer", "subscribe", "onUpdate", "onUnsubscribe", "destroy", "Set", "notifyOptions", "notifyManager", "batch", "prevObservers", "newObserverMatches", "findMatchingObservers", "match", "setOptions", "defaultedQueryOptions", "newObservers", "map", "newObserversMap", "Object", "fromEntries", "options", "queryHash", "newResult", "getCurrentResult", "hasIndexChange", "some", "index", "length", "hasListeners", "difference", "notify", "getQueries", "getCurrentQuery", "getObservers", "getOptimisticResult", "prevObserversMap", "Map", "defaultQueryOptions", "matchingObservers", "flatMap", "defaultedOptions", "get", "matchedQueryHashes", "unmatchedQueries", "filter", "has", "matchingObserversSet", "unmatchedObservers", "prevObserver", "getObserver", "currentObserver", "QueryObserver", "newOrReusedObservers", "keepPreviousData", "previouslyUsedObserver", "undefined", "sortMatchesByOrderOfQueries", "a", "b", "indexOf", "concat", "sort", "replaceAt", "listener", "InfiniteQueryObserver", "QueryObserver", "constructor", "client", "options", "bindMethods", "fetchNextPage", "bind", "fetchPreviousPage", "setOptions", "notifyOptions", "behavior", "infiniteQueryBehavior", "getOptimisticResult", "pageParam", "fetch", "meta", "fetchMore", "direction", "createResult", "query", "state", "result", "isFetching", "isRefetching", "isFetchingNextPage", "fetchMeta", "isFetchingPreviousPage", "hasNextPage", "data", "pages", "hasPreviousPage", "MutationObserver", "Subscribable", "constructor", "client", "options", "setOptions", "bindMethods", "updateResult", "mutate", "bind", "reset", "prevOptions", "defaultMutationOptions", "shallowEqualObjects", "getMutationCache", "notify", "type", "mutation", "currentMutation", "observer", "onUnsubscribe", "hasListeners", "removeObserver", "onMutationUpdate", "action", "notifyOptions", "listeners", "onSuccess", "onError", "getCurrentResult", "currentResult", "undefined", "variables", "mutateOptions", "build", "addObserver", "execute", "state", "getDefaultState", "result", "isLoading", "status", "isSuccess", "isError", "isIdle", "notifyManager", "batch", "data", "context", "onSettled", "error", "forEach", "listener", "dehydrateMutation", "mutation", "mutationKey", "options", "state", "dehydrateQuery", "query", "queryKey", "queryHash", "defaultShouldDehydrateMutation", "isPaused", "defaultShouldDehydrateQuery", "status", "dehydrate", "client", "mutations", "queries", "dehydrateMutations", "shouldDehydrateMutation", "getMutationCache", "getAll", "forEach", "push", "dehydrateQueries", "shouldDehydrateQuery", "getQueryCache", "hydrate", "dehydratedState", "mutationCache", "queryCache", "dehydratedMutation", "build", "defaultOptions", "dehydratedQuery", "get", "dehydratedQueryState", "fetchStatus", "dataUpdatedAt", "setState", "require_lib", "unstable_batchedUpdates", "notifyManager", "setBatchNotifyFunction", "unstable_batchedUpdates", "context", "contextSharing", "client", "IsRestoringProvider", "clearReset", "isReset", "reset", "children", "shouldThrowError", "_useErrorBoundary", "params", "useClearResetErrorBoundary", "errorResetBoundary", "query", "ensureStaleTime", "defaultedOptions", "suspense", "staleTime", "willFetch", "result", "isRestoring", "isLoading", "isFetching", "shouldSuspend", "fetchOptimistic", "observer", "errorResetBoundary", "then", "data", "onSuccess", "onSettled", "catch", "error", "clearReset", "onError", "undefined", "context", "defaultedOptions", "defaultedQueries", "ensurePreventErrorBoundaryRetry", "useSyncExternalStore", "observer", "listeners", "ensurePreventErrorBoundaryRetry", "useSyncExternalStore", "observer", "listeners", "optionsRef", "state", "useHydrate", "require_lib", "cacheableEventTypes", "isCacheableEventType", "eventType", "includes", "persistQueryClientRestore", "queryClient", "persister", "maxAge", "buster", "hydrateOptions", "persistedClient", "restoreClient", "timestamp", "expired", "Date", "now", "busted", "removeClient", "hydrate", "clientState", "err", "process", "getLogger", "error", "warn", "persistQueryClientSave", "dehydrateOptions", "persistClient", "dehydrate", "persistQueryClientSubscribe", "props", "unsubscribeQueryCache", "getQueryCache", "subscribe", "event", "type", "unusbscribeMutationCache", "getMutationCache", "persistQueryClient", "hasUnsubscribed", "persistQueryClientUnsubscribe", "unsubscribe", "restorePromise", "then", "removeOldestQuery", "persistedClient", "mutations", "clientState", "queries", "client", "sortedQueries", "sort", "a", "b", "state", "dataUpdatedAt", "length", "oldestData", "shift", "filter", "q", "undefined", "require_lib", "persist", "onSuccess", "queryClient", "persistQueryClientRestore", "require_lib", "length", "hash", "length", "length", "consumed", "value", "value", "err", "args", "data", "args", "size", "listeners", "cleanup", "poll", "cacheKey", "event", "args", "eventName", "args", "request", "key", "fetch", "transport", "transports_", "sample", "response", "body", "webSocket", "id", "body", "res", "event", "args", "result", "struct", "length", "lengthOfLength", "window", "s", "a", "r", "tv5", "c1", "c2", "block", "event", "args", "provider", "require_dist", "union", "V", "process", "split", "g", "decomposed", "cps", "require_dist", "require_dist"]
}
